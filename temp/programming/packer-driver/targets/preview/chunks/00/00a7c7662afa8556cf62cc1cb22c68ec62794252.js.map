{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Poolable/PiecesPool.ts"],"names":["_decorator","instantiate","Prefab","Poolable","PoolHelper","Piece","ccclass","property","PiecesPool","createIndex","creator","Math","floor","random","piecesPrefabs","length","obj","addComponent","setParent","node","onLoad","registerPool","getPieceFromPool","returnPieceToPool","piece","pool","release"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,M,OAAAA,M;;AAC1CC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;4BAGjBQ,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ,CAAC,CAACL,MAAD,CAAD,C,2BAFX,MACaM,UADb;AAAA;AAAA,gCACyC;AAAA;AAAA;;AAAA;;AAAA,eAI/BC,WAJ+B,GAIT,CAJS;AAAA;;AAM7BC,QAAAA,OAAO,GAAS;AACxB,eAAKD,WAAL,GAAmBE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKC,aAAL,CAAmBC,MAA9C,CAAnB,CADwB,CAExB;;AACA,cAAMC,GAAG,GAAGf,WAAW,CAAC,KAAKa,aAAL,CAAmB,KAAKL,WAAxB,CAAD,CAAvB;AACAO,UAAAA,GAAG,CAACC,YAAJ;AAAA;AAAA;AACAD,UAAAA,GAAG,CAACE,SAAJ,CAAc,KAAKC,IAAnB;AACA,iBAAOH,GAAP;AACH;;AAEWI,QAAAA,MAAM,GAAS;AACvB,gBAAMA,MAAN;AACA;AAAA;AAAA,wCAAWC,YAAX,CAAwBb,UAAxB,EAAoC,IAApC;AACD;;AAEMc,QAAAA,gBAAgB,GAAS;AAC9B,cAAMN,GAAG,GAAG,KAAKN,OAAL,EAAZ;AACA,iBAAOM,GAAP;AACD;;AAGMO,QAAAA,iBAAiB,CAACC,KAAD,EAAoB;AAC1C,eAAKC,IAAL,CAAUC,OAAV,CAAkBF,KAAlB;AACD;;AA5BsC,O;;;;;iBAEL,E","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab } from \"cc\";\r\nimport { Poolable } from \"../../SooLib/Optimization/Poolable\";\r\nimport { PoolHelper } from \"../PoolHelper\";\r\nimport { Piece } from \"../Piece/Piece\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"PiecesPool\")\r\nexport class PiecesPool extends Poolable {\r\n  @property([Prefab])\r\n  private piecesPrefabs: Prefab[] = [];\r\n\r\n  private createIndex: number = 0;\r\n\r\n  protected creator(): Node {\r\n    this.createIndex = Math.floor(Math.random() * this.piecesPrefabs.length);\r\n    // this.createIndex = (this.createIndex + 1) % this.piecesPrefabs.length;\r\n    const obj = instantiate(this.piecesPrefabs[this.createIndex]);\r\n    obj.addComponent(Piece);\r\n    obj.setParent(this.node);\r\n    return obj;\r\n}\r\n\r\n  protected onLoad(): void {\r\n    super.onLoad();\r\n    PoolHelper.registerPool(PiecesPool, this);\r\n  }\r\n\r\n  public getPieceFromPool(): Node {\r\n    const obj = this.creator();\r\n    return obj;\r\n  }\r\n  \r\n\r\n  public returnPieceToPool(piece: Node): void {\r\n    this.pool.release(piece); \r\n  }\r\n}\r\n"]}