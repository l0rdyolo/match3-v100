{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/SooLib/Runtime/decorators.ts"],"names":["defineProperty","target","propertyKey","getter","setter","Object","get","set","enumerable","configurable","NotNull","value","newVal","undefined","Error","Range","min","max","newValue","Default","defaultValue","Throttle","delay","descriptor","originalMethod","lastCall","now","Date","args","apply","Debounce","timeoutId","clearTimeout","setTimeout","Validate","validatorFn","errorMessage","EnumProperty","allowedValues","indexOf","join","addTouchEventListeners","node","onTouchStart","onTouchEnd","on","Node","EventType","TOUCH_START","TOUCH_END","TOUCH_CANCEL","removeTouchEventListeners","off","TouchHoldingDetection","duration","event","call","originalOnLoad","onLoad","originalOnDestroy","onDestroy","SceneReady","director","once","Director","EVENT_AFTER_DRAW","EmitEvent","eventName","result","emit","RaycastDetection","ray","geometry","Ray","PhysicsSystem","instance","raycastClosest","raycastClosestResult","console","log","collider","name","WatchProperty","callback","oldValue","colliderTrigger","onEnter","onExit","getComponent","Collider","otherCollider","warn","createTriggerDecorator","String","_decorator","ccclass","OnTriggerEnter","OnTriggerStay","OnTriggerExit"],"mappings":"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","sourcesContent":["import { _decorator, Node, EventTouch, director, Director, geometry, PhysicsSystem, PhysicsRayResult, Component, Collider } from 'cc';\nconst { ccclass } = _decorator;\n\n// helper\nfunction defineProperty(target: any, propertyKey: string, getter: () => any, setter: (newValue: any) => void) {\n    Object.defineProperty(target, propertyKey, {\n        get: getter,\n        set: setter,\n        enumerable: true,\n        configurable: true,\n    });\n}\n\n/**\n * Decorator that ensures a property is never set to null or undefined.\n * \n * @param target - The target object.\n * @param propertyKey - The name of the property.\n * @throws Will throw an error if the property is set to null or undefined.\n *\n * @example\n * class Player {\n *     @NotNull\n *     public name: string;\n *     \n *     constructor(name: string) {\n *         this.name = name;\n *     }\n * }\n * \n * const player = new Player('John');\n * player.name = null; // Throws an error\n */\nexport function NotNull(target: any, propertyKey: string) {\n    let value = target[propertyKey];\n\n    const getter = () => value;\n    const setter = (newVal: any) => {\n        if (newVal === null || newVal === undefined) {\n            throw new Error(`Property ${propertyKey} cannot be set to null or undefined`);\n        }\n        value = newVal;\n    };\n\n    defineProperty(target, propertyKey, getter, setter);\n}\n\n/**\n * Decorator that enforces a numeric property to be within a specified range.\n * \n * @param min - The minimum value.\n * @param max - The maximum value.\n * @returns A property decorator function.\n * @throws Will throw an error if the property value is outside the specified range.\n *\n * @example\n * class GameSettings {\n *     @Range(1, 10)\n *     public difficulty: number;\n *     \n *     constructor(difficulty: number) {\n *         this.difficulty = difficulty;\n *     }\n * }\n * \n * const settings = new GameSettings(5);\n * settings.difficulty = 11; // Throws an error\n */\nexport function Range(min: number, max: number) {\n    return function (target: any, propertyKey: string) {\n        let value = target[propertyKey];\n\n        const getter = () => value;\n        const setter = (newValue: number) => {\n            if (newValue < min || newValue > max) {\n                throw new Error(`Property ${propertyKey} must be between ${min} and ${max}.`);\n            }\n            value = newValue;\n        };\n\n        defineProperty(target, propertyKey, getter, setter);\n    };\n}\n\n/**\n * Decorator that provides a default value for a property.\n * \n * @param defaultValue - The default value to be assigned.\n * @returns A property decorator function.\n *\n * @example\n * class Settings {\n *     @Default('Guest')\n *     public username: string;\n *     \n *     constructor(username?: string) {\n *         this.username = username;\n *     }\n * }\n * \n * const settings = new Settings();\n * console.log(settings.username); // Outputs 'Guest'\n */\nexport function Default(defaultValue: any) {\n    return function (target: any, propertyKey: string) {\n        let value = target[propertyKey] || defaultValue;\n\n        const getter = () => value;\n        const setter = (newValue: any) => {\n            value = newValue !== undefined ? newValue : defaultValue;\n        };\n\n        defineProperty(target, propertyKey, getter, setter);\n    };\n}\n\n/**\n * Decorator that throttles a method, ensuring it is only called once within a specified delay.\n * \n * @param delay - The delay in milliseconds.\n * @returns A method decorator function.\n *\n * @example\n * class Game {\n *     @Throttle(1000)\n *     public shoot() {\n *         console.log('Shoot!');\n *     }\n * }\n * \n * const game = new Game();\n * game.shoot(); // 'Shoot!' is logged\n * game.shoot(); // Ignored if called within 1 second\n */\nexport function Throttle(delay: number) {\n    return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n        const originalMethod = descriptor.value;\n        let lastCall = 0;\n\n        descriptor.value = function (...args: any[]) {\n            const now = Date.now();\n            if (now - lastCall < delay) return;\n            lastCall = now;\n            return originalMethod.apply(this, args);\n        };\n\n        return descriptor;\n    };\n}\n\n\n/**\n * Decorator that debounces a method, ensuring it is only called after a specified delay.\n * \n * @param delay - The delay in milliseconds before the method is invoked.\n * @returns A method decorator function.\n *\n * @example\n * class Search {\n *     @Debounce(300)\n *     public performSearch(query: string) {\n *         console.log(`Searching for ${query}`);\n *     }\n * }\n * \n * const searchInstance = new Search();\n * searchInstance.performSearch('test'); // The search will be performed after 300ms\n */\nexport function Debounce(delay: number) {\n    return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n        const originalMethod = descriptor.value;\n        let timeoutId: ReturnType<typeof setTimeout>;\n\n        descriptor.value = function (...args: any[]) {\n            clearTimeout(timeoutId);\n            timeoutId = setTimeout(() => originalMethod.apply(this, args), delay);\n        };\n\n        return descriptor;\n    };\n}\n\n/**\n * Decorator that validates a property value using a custom validator function.\n * \n * @param validatorFn - A function that validates the property value.\n * @param errorMessage - The error message to be thrown if validation fails.\n * @returns A property decorator function.\n * @throws Will throw an error if the property value is invalid.\n *\n * @example\n * class User {\n *     @Validate((value) => typeof value === 'string' && value.length > 3, 'Username must be a string with more than 3 characters.')\n *     public username: string;\n *     \n *     constructor(username: string) {\n *         this.username = username;\n *     }\n * }\n * \n * const user = new User('JohnDoe');\n * user.username = 'JD'; // Throws an error\n */\nexport function Validate(validatorFn: (value: any) => boolean, errorMessage: string) {\n    return function (target: any, propertyKey: string) {\n        let value = target[propertyKey];\n\n        const getter = () => value;\n        const setter = (newValue: any) => {\n            if (!validatorFn(newValue)) {\n                throw new Error(errorMessage);\n            }\n            value = newValue;\n        };\n\n        defineProperty(target, propertyKey, getter, setter);\n    };\n}\n\n/**\n * Decorator that restricts a property value to a set of allowed values.\n * \n * @param allowedValues - The allowed values for the property.\n * @returns A property decorator function.\n * @throws Will throw an error if the property value is not in the allowed values.\n *\n * @example\n * class Settings {\n *     @EnumProperty('easy', 'medium', 'hard')\n *     public difficulty: string;\n *     \n *     constructor(difficulty: string) {\n *         this.difficulty = difficulty;\n *     }\n * }\n * \n * const settings = new Settings('medium');\n * settings.difficulty = 'extreme'; // Throws an error\n */\nexport function EnumProperty(...allowedValues: any[]) {\n    return function (target: any, propertyKey: string) {\n        let value = target[propertyKey];\n\n        const getter = () => value;\n        const setter = (newValue: any) => {\n            if (allowedValues.indexOf(newValue) === -1) {\n                throw new Error(`Property ${propertyKey} must be one of: ${allowedValues.join(', ')}`);\n            }\n            value = newValue;\n        };\n\n        defineProperty(target, propertyKey, getter, setter);\n    };\n}\n\n\nfunction addTouchEventListeners(node: Node, onTouchStart: (event: EventTouch) => void, onTouchEnd: () => void) {\n    node.on(Node.EventType.TOUCH_START, onTouchStart, this);\n    node.on(Node.EventType.TOUCH_END, onTouchEnd, this);\n    node.on(Node.EventType.TOUCH_CANCEL, onTouchEnd, this);\n}\n\nfunction removeTouchEventListeners(node: Node, onTouchStart: (event: EventTouch) => void, onTouchEnd: () => void) {\n    node.off(Node.EventType.TOUCH_START, onTouchStart, this);\n    node.off(Node.EventType.TOUCH_END, onTouchEnd, this);\n    node.off(Node.EventType.TOUCH_CANCEL, onTouchEnd, this);\n}\n\n/**\n * Decorator for detecting a long press (touch holding) on a node.\n * The decorated method will be called if the touch holding duration exceeds the specified time.\n * \n * @param duration - The duration in milliseconds that constitutes a long press.\n * @returns A property decorator function.\n *\n * @example\n * class MyComponent extends Component {\n *     @TouchHoldingDetection(1000)\n *     onLongPress(event: EventTouch) {\n *         console.log('Long press detected', event);\n *     }\n * }\n * \n * const myComponent = new MyComponent();\n * // Add MyComponent to a node in Cocos Creator to use the long press detection\n */\nexport function TouchHoldingDetection(duration: number) {\n    return function (target: any, propertyKey: string) {\n        let timeoutId: number;\n\n        const onTouchStart = (event: EventTouch) => {\n            timeoutId = setTimeout(() => {\n                if (typeof target[propertyKey] === 'function') {\n                    target[propertyKey].call(this, event);\n                }\n            }, duration);\n        };\n\n        const onTouchEnd = () => {\n            clearTimeout(timeoutId);\n        };\n\n        const originalOnLoad = target.onLoad;\n        target.onLoad = function () {\n            if (originalOnLoad) {\n                originalOnLoad.call(this);\n            }\n            addTouchEventListeners(this.node, onTouchStart, onTouchEnd);\n        };\n\n        const originalOnDestroy = target.onDestroy;\n        target.onDestroy = function () {\n            if (originalOnDestroy) {\n                originalOnDestroy.call(this);\n            }\n            removeTouchEventListeners(this.node, onTouchStart, onTouchEnd);\n        };\n    };\n}\n\n/**\n * Decorator for executing a method when the scene is fully ready.\n * The decorated method will be called after the first frame is drawn.\n * \n * @returns A property decorator function.\n *\n * @example\n * class GameController extends Component {\n *     @SceneReady()\n *     onSceneReady() {\n *         console.log('Scene is ready');\n *     }\n * }\n * \n * const gameController = new GameController();\n * // Add GameController to a node in Cocos Creator to execute the method when the scene is ready\n */\nexport function SceneReady() {\n    return function (target: any, propertyKey: string) {\n        const originalOnLoad = target.onLoad;\n\n        target.onLoad = function () {\n            if (originalOnLoad) {\n                originalOnLoad.call(this);\n            }\n\n            director.once(Director.EVENT_AFTER_DRAW, () => {\n                if (typeof target[propertyKey] === 'function') {\n                    target[propertyKey].call(this);\n                }\n            });\n        };\n    };\n}\n\n/**\n * Decorator for emitting a custom event after executing a method.\n * The event will be emitted from the node associated with the component.\n * \n * @param eventName - The name of the event to emit.\n * @returns A method decorator function.\n *\n * @example\n * class Player extends Component {\n *     @EmitEvent('playerScored')\n *     score(points: number) {\n *         console.log(`Player scored ${points} points`);\n *     }\n * }\n * \n * const player = new Player();\n * player.score(10); // Emits 'playerScored' event with points\n */\nexport function EmitEvent(eventName: string) {\n    return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n        const originalMethod = descriptor.value;\n\n        descriptor.value = function (...args: any[]) {\n            const result = originalMethod.apply(this, args);\n            this.node.emit(eventName, ...args);\n            return result;\n        };\n\n        return descriptor;\n    };\n}\n\n/**\n * Decorator for detecting raycast hits when a touch starts on the node.\n * \n * The decorated method will log the name of the node hit by the raycast.\n * \n * @returns A property decorator function.\n *\n * @example\n * class MyComponent extends Component {\n *     @RaycastDetection()\n *     onRaycastHit() {\n *         // Method to handle raycast hits\n *     }\n * }\n * \n * const myComponent = new MyComponent();\n * // Add MyComponent to a node in Cocos Creator to enable raycast detection\n */\nexport function RaycastDetection() {\n    return function (target: any, propertyKey: string) {\n        const onTouchStart = function (event: any) {\n            const ray = new geometry.Ray();\n            PhysicsSystem.instance.raycastClosest(ray);\n            const result: PhysicsRayResult = PhysicsSystem.instance.raycastClosestResult;\n            if (result) {\n                console.log(`Raycast hit: ${result.collider.node.name}`);\n            }\n        };\n\n        if (!target.onLoad) {\n            target.onLoad = function () {\n                this.node.on(Node.EventType.TOUCH_START, onTouchStart, this);\n            };\n        }\n\n        if (!target.onDestroy) {\n            target.onDestroy = function () {\n                this.node.off(Node.EventType.TOUCH_START, onTouchStart, this);\n            };\n        }\n    };\n}\n\n/**\n * Decorator for watching changes on a property and triggering a callback when the property value changes.\n * \n * @param callback - The function to call when the property value changes.\n * @returns A property decorator function.\n *\n * @example\n * class Player {\n *     @WatchProperty((newValue, oldValue) => {\n *         console.log(`Player health changed from ${oldValue} to ${newValue}`);\n *     })\n *     public health: number;\n *     \n *     constructor(health: number) {\n *         this.health = health;\n *     }\n * }\n * \n * const player = new Player(100);\n * player.health = 80; // Logs: Player health changed from 100 to 80\n */\nexport function WatchProperty(callback: (newValue: any, oldValue: any) => void) {\n    return function (target: any, propertyKey: string) {\n        let value = target[propertyKey];\n\n        const getter = () => value;\n        const setter = (newValue: any) => {\n            const oldValue = value;\n            value = newValue;\n            callback(newValue, oldValue);\n        };\n\n        defineProperty(target, propertyKey, getter, setter);\n    };\n}\n\n/**\n * Utility function to create a trigger decorator that handles collider events.\n * \n * @param onEnter - Function to call when the collider enters the trigger.\n * @param onExit - Function to call when the collider exits the trigger.\n * @returns A method decorator function.\n *\n * @example\n * class Enemy extends Component {\n *     @colliderTrigger(\n *         (collider) => console.log('Collider entered:', collider),\n *         (collider) => console.log('Collider exited:', collider)\n *     )\n *     onColliderTrigger(collider: Collider) {\n *         // Method to handle collider trigger events\n *     }\n * }\n * \n * const enemy = new Enemy();\n * // Add Enemy to a node with a Collider component in Cocos Creator to enable collider trigger detection\n */\nfunction colliderTrigger(onEnter?: (collider: Collider) => void, onExit?: (collider: Collider) => void) {\n    return function (target: Component, propertyKey: string | symbol, descriptor: PropertyDescriptor) {\n        const originalMethod = descriptor.value;\n        const node = target.node;\n\n        descriptor.value = function (...args: any[]) {\n            if (node) {\n                const collider = node.getComponent(Collider);\n                if (collider) {\n                    collider.on('onTriggerEnter', (otherCollider: Collider) => {\n                        if (onEnter) {\n                            onEnter(otherCollider);\n                        }\n                        originalMethod.call(this, otherCollider, ...args);\n                    });\n\n                    collider.on('onTriggerExit', (otherCollider: Collider) => {\n                        if (onExit) {\n                            onExit(otherCollider);\n                        }\n                    });\n                } else {\n                    console.warn(\"Collider component not found for trigger detection.\");\n                }\n            } else {\n                console.warn(\"Node reference not found for collider trigger.\");\n            }\n        };\n        return descriptor;\n    };\n}\n\ntype TriggerEvent = 'onTriggerEnter' | 'onTriggerStay' | 'onTriggerExit';\n\n/**\n * Utility function to create a trigger event decorator.\n * \n * @param event - The trigger event to listen for.\n * @returns A method decorator function.\n *\n * @example\n * class Obstacle extends Component {\n *     @OnTriggerEnter()\n *     handleTriggerEnter(otherCollider: Collider) {\n *         console.log('Trigger entered by:', otherCollider.node.name);\n *     }\n *     \n *     @OnTriggerStay()\n *     handleTriggerStay(otherCollider: Collider) {\n *         console.log('Trigger stayed by:', otherCollider.node.name);\n *     }\n *     \n *     @OnTriggerExit()\n *     handleTriggerExit(otherCollider: Collider) {\n *         console.log('Trigger exited by:', otherCollider.node.name);\n *     }\n * }\n * \n * const obstacle = new Obstacle();\n * // Add Obstacle to a node with a Collider component in Cocos Creator to handle trigger events\n */\nfunction createTriggerDecorator(event: TriggerEvent) {\n    return function () {\n        return function (target: Component, propertyKey: string | symbol, descriptor: PropertyDescriptor) {\n            const originalMethod = descriptor.value;\n\n            descriptor.value = function (...args: any[]) {\n                const node = this.node;\n                if (!node) {\n                    console.warn(`Node reference not found for collider trigger in ${String(propertyKey)}.`);\n                    return;\n                }\n\n                const collider = node.getComponent(Collider);\n                if (!collider) {\n                    console.warn(`Collider component not found for trigger detection in ${String(propertyKey)}.`);\n                    return;\n                }\n\n                collider.on(event, (otherCollider: Collider) => {\n                    originalMethod.call(this, otherCollider, ...args);\n                });\n            };\n\n            return descriptor;\n        };\n    };\n}\n\nexport const OnTriggerEnter = createTriggerDecorator('onTriggerEnter');\nexport const OnTriggerStay = createTriggerDecorator('onTriggerStay');\nexport const OnTriggerExit = createTriggerDecorator('onTriggerExit');\n"]}