{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Interaction/InteractionManager.ts"],"names":["_decorator","Component","MatchChecker","EffectManager","ccclass","property","InteractionManager","grid","firstSelectedPiece","secondSelectedPiece","initializeGrid","onPieceClicked","event","piece","console","log","pieceA","pieceB","posA","getPosition","posB","swapPositions","rowA","findPieceRow","colA","findPieceCol","rowB","colB","checkMatch","resetSelection","highlightPiece","setScale","movePiece"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, Node, tween, Vec3 } from 'cc';\nimport { MatchChecker } from '../Grid/MatchChecker';\nimport { EffectManager } from '../Effects/EffectManager';\nconst { ccclass , property } = _decorator;\n\n@ccclass('InteractionManager')\nexport class InteractionManager extends Component {\n    private grid: Node[][] = [];\n    // private selectedPiece: Node | null = null;\n    private firstSelectedPiece : Node | null = null;\n    private secondSelectedPiece : Node | null = null;\n\n\n    public initializeGrid(grid: Node[][]) {\n        this.grid = grid;\n    }\n\n    public async onPieceClicked(event: EventTouch, piece: Node) {\n        if (this.firstSelectedPiece) {\n            console.log(\"second selection\",piece);\n            this.secondSelectedPiece = piece;\n\n            const pieceA = this.secondSelectedPiece;\n            const pieceB = this.firstSelectedPiece;\n\n            const posA = pieceA.getPosition();\n            const posB = pieceB.getPosition();\n\n            //swapHere\n            this.swapPositions(pieceA,pieceB ,posA,posB);\n\n            const rowA = this.findPieceRow(pieceA);\n            const colA = this.findPieceCol(pieceA);\n            const rowB = this.findPieceRow(pieceB);\n            const colB = this.findPieceCol(pieceB);\n            console.log(MatchChecker.checkMatch(this.grid, pieceA, rowA, colA) , !MatchChecker.checkMatch(this.grid, pieceB, rowB, colB));\n            \n            if (!MatchChecker.checkMatch(this.grid, pieceA, rowA, colA) && !MatchChecker.checkMatch(this.grid, pieceB, rowB, colB)) {\n                // Swap back if no match\n                console.log(\"nasÄ±l\");\n                \n                // tween(pieceA).to(0.3, { position: posA }).start();\n                // tween(pieceB).to(0.3, { position: posB }).start();\n            }\n            this.resetSelection();\n        } else {\n            this.firstSelectedPiece = piece;\n            console.log(\"first selection\",piece);\n            \n            this.highlightPiece(piece);\n        }\n    }\n\n    private findPieceRow(piece: Node): number {\n        // Implement logic to find the row of the piece in the grid.\n        // Example: return this.grid.findIndex(row => row.includes(piece));\n        return -1; // Placeholder, implement this logic.\n    }\n\n    private findPieceCol(piece: Node): number {\n        // Implement logic to find the column of the piece in the grid.\n        // Example: return this.grid[row].indexOf(piece);\n        return -1; // Placeholder, implement this logic.\n    }\n\n    private highlightPiece(piece: Node) {\n        piece.setScale(1.2, 1.2, 1.2);\n    }\n\n    private swapPositions(pieceA : Node , pieceB : Node ,posA:Vec3,posB:Vec3 ){\n        EffectManager.movePiece(pieceA , posB , 0.1);\n        EffectManager.movePiece(pieceB , posA , 0.1);\n\n                    // // Swap positions\n                    // pieceA.setPosition(posB);\n                    // pieceB.setPosition(posA);\n    }\n\n    private resetSelection(){\n        this.firstSelectedPiece!.setScale(1,1,1)\n        this.secondSelectedPiece!.setScale(1,1,1)\n        this.firstSelectedPiece = null;\n        this.secondSelectedPiece = null;\n    }\n\n}\n"]}