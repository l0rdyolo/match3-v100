{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Interaction/InteractionManager.ts"],"names":["_decorator","Component","Vec3","EffectManager","ccclass","property","InteractionManager","grid","firstSelectedPiece","secondSelectedPiece","initializeGrid","onPieceClicked","event","piece","gridMap","pieceA","pieceB","posA","getPosition","posB","diff","subtract","length","SwapPiecePositions","resetSelection","highlightPiece","setScale","movePiece","posAData","get","posBData","set"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAmDC,MAAAA,I,OAAAA,I;;AAE/DC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAYC,QAAAA;AAAZ,O,GAAyBL,U;;oCAGlBM,kB,WADZF,OAAO,CAAC,oBAAD,C,gBAAR,MACaE,kBADb,SACwCL,SADxC,CACkD;AAAA;AAAA;AAAA,eACtCM,IADsC,GACrB,EADqB;AAAA,eAGtCC,kBAHsC,GAGH,IAHG;AAAA,eAItCC,mBAJsC,GAIF,IAJE;AAAA;;AAOvCC,QAAAA,cAAc,CAACH,IAAD,EAAiB;AAClC,eAAKA,IAAL,GAAYA,IAAZ;AACH;;AAEYI,QAAAA,cAAc,CAACC,KAAD,EAAoBC,KAApB,EAAmCC,OAAnC,EAAqF;AAAA;;AAAA;AAC5G,gBAAI,KAAI,CAACN,kBAAT,EAA6B;AACzB,cAAA,KAAI,CAACC,mBAAL,GAA2BI,KAA3B;AAEA,kBAAME,MAAM,GAAG,KAAI,CAACN,mBAApB;AACA,kBAAMO,MAAM,GAAG,KAAI,CAACR,kBAApB;AAEA,kBAAMS,IAAI,GAAGF,MAAM,CAACG,WAAP,EAAb;AACA,kBAAMC,IAAI,GAAGH,MAAM,CAACE,WAAP,EAAb,CAPyB,CASzB;AACA;;AACA,kBAAME,IAAI,GAAGlB,IAAI,CAACmB,QAAL,CAAc,IAAInB,IAAJ,EAAd,EAA2Be,IAA3B,EAAkCE,IAAlC,CAAb;;AACA,kBAAGC,IAAI,CAACE,MAAL,OAAkB,GAArB,EAAyB;AACrB,sBAAM,KAAI,CAACC,kBAAL,CAAwBR,MAAxB,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CE,IAA9C,EAAoDL,OAApD,CAAN;AACH;;AACD,cAAA,KAAI,CAACU,cAAL;AAEH,aAjBD,MAiBO;AACH,cAAA,KAAI,CAAChB,kBAAL,GAA0BK,KAA1B;AACA;AAAA;AAAA,kDAAcY,cAAd,CAA6BZ,KAA7B;AACH;AArB2G;AAsB/G;;AAEOW,QAAAA,cAAc,GAAE;AACpB,eAAKhB,kBAAL,CAAyBkB,QAAzB,CAAkC,CAAlC,EAAoC,CAApC,EAAsC,CAAtC;AACA,eAAKjB,mBAAL,CAA0BiB,QAA1B,CAAmC,CAAnC,EAAqC,CAArC,EAAuC,CAAvC;AACA,eAAKlB,kBAAL,GAA0B,IAA1B;AACA,eAAKC,mBAAL,GAA2B,IAA3B;AACH;;AAEac,QAAAA,kBAAkB,CAC5BR,MAD4B,EAE5BC,MAF4B,EAG5BC,IAH4B,EAI5BE,IAJ4B,EAK5BL,OAL4B,EAM5B;AAAA;AACC;AAAA;AAAA,gDAAca,SAAd,CAAwBZ,MAAxB,EAAgCI,IAAhC,EAAsC,GAAtC;AACA;AAAA;AAAA,gDAAcQ,SAAd,CAAwBX,MAAxB,EAAgCC,IAAhC,EAAsC,GAAtC,EAFD,CAIA;;AACA,gBAAMW,QAAQ,GAAGd,OAAO,CAACe,GAAR,CAAYd,MAAZ,CAAjB;AACA,gBAAMe,QAAQ,GAAGhB,OAAO,CAACe,GAAR,CAAYb,MAAZ,CAAjB;AACAF,YAAAA,OAAO,CAACiB,GAAR,CAAYhB,MAAZ,EAAoBe,QAApB;AACAhB,YAAAA,OAAO,CAACiB,GAAR,CAAYf,MAAZ,EAAoBY,QAApB;AARA;AASD;;AAzD2C,O","sourcesContent":["import { _decorator, Component, EventTouch, markAsWarning, Node, tween, Vec3 } from 'cc';\nimport { MatchChecker } from '../Grid/MatchChecker';\nimport { EffectManager } from '../Effects/EffectManager';\nconst { ccclass , property } = _decorator;\n\n@ccclass('InteractionManager')\nexport class InteractionManager extends Component {\n    private grid: Node[][] = [];\n    // private selectedPiece: Node | null = null;\n    private firstSelectedPiece : Node | null = null;\n    private secondSelectedPiece : Node | null = null;\n\n\n    public initializeGrid(grid: Node[][]) {\n        this.grid = grid;\n    }\n\n    public async onPieceClicked(event: EventTouch, piece: Node ,  gridMap: Map<Node, { row: number, col: number }>) {\n        if (this.firstSelectedPiece) {\n            this.secondSelectedPiece = piece;\n            \n            const pieceA = this.secondSelectedPiece;\n            const pieceB = this.firstSelectedPiece;\n\n            const posA = pieceA.getPosition();\n            const posB = pieceB.getPosition();\n\n            //burada amacım 1 birimlik değişim olmuşsa matchchecker'a gitmek\n            //bu kısmı düzenlemeliyiz!!!!\n            const diff = Vec3.subtract(new Vec3() , posA , posB);\n            if(diff.length() === 120){\n                await this.SwapPiecePositions(pieceA, pieceB ,posA ,posB ,gridMap); \n            }\n            this.resetSelection();         \n\n        } else {\n            this.firstSelectedPiece = piece;\n            EffectManager.highlightPiece(piece);\n        }\n    }\n\n    private resetSelection(){\n        this.firstSelectedPiece!.setScale(1,1,1)\n        this.secondSelectedPiece!.setScale(1,1,1)\n        this.firstSelectedPiece = null;\n        this.secondSelectedPiece = null;\n    }\n\n    private async SwapPiecePositions(\n        pieceA: Node,\n        pieceB: Node,\n        posA: Vec3,\n        posB: Vec3,\n        gridMap: Map<Node, { row: number; col: number }>\n      ) {\n         EffectManager.movePiece(pieceA, posB, 0.1);\n         EffectManager.movePiece(pieceB, posA, 0.1);\n    \n        // Update the gridMap\n        const posAData = gridMap.get(pieceA);\n        const posBData = gridMap.get(pieceB);\n        gridMap.set(pieceA, posBData);\n        gridMap.set(pieceB, posAData);\n      }\n}\n"]}