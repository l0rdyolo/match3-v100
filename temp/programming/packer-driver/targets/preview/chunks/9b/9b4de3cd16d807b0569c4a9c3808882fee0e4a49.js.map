{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Piece/PiecePool.ts"],"names":["_decorator","Prefab","instantiate","SingletonComponent","ccclass","property","PiecePool","pool","getPiece","length","piece","pop","active","console","log","prefab","getRandomPrefab","error","piecesPrefabs","randomIndex","Math","floor","random","returnPiece","push","clearAll","forEach","destroy","onLoad","warn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AACpBC,MAAAA,kB,iBAAAA,kB;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAC9B;AACA;AACA;AACA;AACA;;2BAEaM,S,WADZF,OAAO,CAAC,WAAD,C,UAEHC,QAAQ,CAAC,CAACJ,MAAD,CAAD,C,2BAFb,MACaK,SADb;AAAA;AAAA,oDAC6D;AAAA;AAAA;;AAAA;;AAAA,eAIjDC,IAJiD,GAIlC,EAJkC;AAAA;;AAMlDC,QAAAA,QAAQ,GAAgB;AAC3B,cAAI,KAAKD,IAAL,CAAUE,MAAV,GAAmB,CAAvB,EAA0B;AACtB,gBAAMC,KAAK,GAAG,KAAKH,IAAL,CAAUI,GAAV,EAAd;AACAD,YAAAA,KAAK,CAAEE,MAAP,GAAgB,IAAhB;AACA,mBAAOF,KAAP;AACH,WAJD,MAIO;AACHG,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,gBAAMC,MAAM,GAAG,KAAKC,eAAL,EAAf;;AACA,gBAAID,MAAJ,EAAY;AACR,qBAAOb,WAAW,CAACa,MAAD,CAAlB;AACH,aAFD,MAEO;AACHF,cAAAA,OAAO,CAACI,KAAR,CAAc,4CAAd;AACA,qBAAO,IAAP;AACH;AACJ;AACJ;;AAEOD,QAAAA,eAAe,GAAkB;AACrC,cAAI,KAAKE,aAAL,CAAmBT,MAAnB,GAA4B,CAAhC,EAAmC;AAC/B,gBAAMU,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKJ,aAAL,CAAmBT,MAA9C,CAApB;AACA,mBAAO,KAAKS,aAAL,CAAmBC,WAAnB,CAAP;AACH,WAHD,MAGO;AACHN,YAAAA,OAAO,CAACI,KAAR,CAAc,oCAAd;AACA,mBAAO,IAAP;AACH;AACJ;;AAGMM,QAAAA,WAAW,CAACb,KAAD,EAAc;AAC5BA,UAAAA,KAAK,CAACE,MAAN,GAAe,KAAf;AACA,eAAKL,IAAL,CAAUiB,IAAV,CAAed,KAAf;AACH;;AAEMe,QAAAA,QAAQ,GAAG;AACd,eAAKlB,IAAL,CAAUmB,OAAV,CAAkBhB,KAAK,IAAIA,KAAK,CAACiB,OAAN,EAA3B;AACA,eAAKpB,IAAL,GAAY,EAAZ;AACH;;AAESqB,QAAAA,MAAM,GAAS;AACrB,gBAAMA,MAAN;;AACA,cAAG,KAAKV,aAAL,CAAmBT,MAAnB,KAA4B,CAA/B,EAAiC;AAC7BI,YAAAA,OAAO,CAACgB,IAAR,CAAa,2BAAb;AAEH;AACJ;;AAnDwD,O;;;;;iBAE/B,E","sourcesContent":["import { _decorator, Prefab, instantiate, Node } from 'cc';\nimport { SingletonComponent } from '../SingeltonComponent';\nconst { ccclass, property } = _decorator;\n/**\n //! todo\n *  bu s覺n覺f覺 singelton yapal覺m.\n * \n */\n@ccclass('PiecePool')\nexport class PiecePool extends SingletonComponent<PiecePool> {\n    @property([Prefab])\n    piecesPrefabs: Prefab[] = [];\n\n    private pool: Node[] = [];\n \n    public getPiece(): Node | null {\n        if (this.pool.length > 0) {\n            const piece = this.pool.pop();\n            piece!.active = true; \n            return piece!;\n        } else {\n            console.log(\"burada\");\n            \n            const prefab = this.getRandomPrefab();\n            if (prefab) {\n                return instantiate(prefab);\n            } else {\n                console.error(\"No prefab found or prefab is not assigned.\");\n                return null;\n            }\n        }\n    }\n    \n    private getRandomPrefab(): Prefab | null {\n        if (this.piecesPrefabs.length > 0) {\n            const randomIndex = Math.floor(Math.random() * this.piecesPrefabs.length);\n            return this.piecesPrefabs[randomIndex];\n        } else {\n            console.error(\"No prefabs available in PiecePool.\");\n            return null;\n        }\n    }\n    \n\n    public returnPiece(piece: Node) {\n        piece.active = false; \n        this.pool.push(piece);\n    }\n\n    public clearAll() {\n        this.pool.forEach(piece => piece.destroy());\n        this.pool = [];\n    }\n\n    protected onLoad(): void {\n        super.onLoad();\n        if(this.piecesPrefabs.length===0){\n            console.warn(\"there is no piece prefabs\");\n            \n        }\n    }\n}\n"]}