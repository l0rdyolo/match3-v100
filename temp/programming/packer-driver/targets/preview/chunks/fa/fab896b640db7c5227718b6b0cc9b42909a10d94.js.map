{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GridGenerator.ts"],"names":["_decorator","Component","Vec3","CCInteger","Piece","InteractionManager","PieceTypes","PiecePool","ccclass","property","GridGenerator","grid","PIECE_OFFSET","PIECE_CONTENT_SIZE","interactionManager","start","Generate","row","width","col","height","piece","createPiece","pieceNode","attempts","console","warn","getInstance","getPiece","error","removeFromParent","Normal","node","setPosition","getCenteredPosition","createsMatchByName","name","isMatch","createsMatch","j","i","_j","_i"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, CCInteger } from \"cc\";\r\nimport { Piece } from \"../Piece/Piece\";\r\nimport { InteractionManager } from \"../Interaction/InteractionManager\";\r\nimport { PieceTypes } from \"../Piece/PieceTypes\";\r\nimport { PiecePool } from \"../Piece/PiecePool\";\r\nimport { SelectionManager } from \"../Interaction/SelectionManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GridGenerator\")\r\nexport class GridGenerator extends Component {\r\n  public grid: Piece[][] = [];\r\n\r\n  private PIECE_OFFSET: number = 5;\r\n\r\n  @property(CCInteger)\r\n  private width: number = 0;\r\n\r\n  @property(CCInteger)\r\n  private height: number = 0;\r\n\r\n  private PIECE_CONTENT_SIZE: number = 100; //dinamikleştir\r\n\r\n  private interactionManager: InteractionManager = new InteractionManager();\r\n\r\n  protected start(): void {\r\n    //!TODO: grid yerleşmesini ve content size'ı responsive yapmalıyız\r\n    this.Generate();\r\n  }\r\n\r\n  //! todo rowlari tweenleyebiliriz\r\n  public async Generate() {\r\n    for (let row = 0; row < this.width; row++) {\r\n      this.grid[row] = [];\r\n      for (let col = 0; col < this.height; col++) {\r\n        const piece = this.createPiece(row, col);\r\n        this.grid[row][col] = piece;\r\n      }\r\n    }\r\n  }\r\n  private createPiece(row: number, col: number): Piece {\r\n    let pieceNode: Node | null;\r\n    let piece: Piece | null;\r\n    let attempts = 0; // Deneme sayısı\r\n\r\n    do {\r\n        if (attempts > 25) {\r\n            console.warn(\"Piece match creation exceeded maximum attempts\");\r\n            break;\r\n        }\r\n\r\n        pieceNode = PiecePool.getInstance().getPiece();\r\n        if (!pieceNode) {\r\n            console.error(\"Piece could not be instantiated.\");\r\n            continue;\r\n        }\r\n\r\n        pieceNode.removeFromParent();\r\n        piece = new Piece(row, col, pieceNode, PieceTypes.Normal);\r\n        piece.node.setPosition(this.getCenteredPosition(col, row));\r\n\r\n        attempts++;\r\n    } while (this.createsMatchByName(piece.node.name, row, col, this.grid));\r\n\r\n    return piece!;\r\n}\r\n\r\nprivate createsMatchByName(\r\n  name: string,\r\n  row: number,\r\n  col: number,\r\n  grid: Piece[][]\r\n): boolean {\r\n  let isMatch = false;\r\n\r\n  if (\r\n      row >= 2 &&\r\n      grid[row - 1][col]?.node.name === name &&\r\n      grid[row - 2][col]?.node.name === name\r\n  ) {\r\n      isMatch = true;\r\n  }\r\n\r\n  if (\r\n      col >= 2 &&\r\n      grid[row][col - 1]?.node.name === name &&\r\n      grid[row][col - 2]?.node.name === name\r\n  ) {\r\n      isMatch = true;\r\n  }\r\n\r\n  return isMatch;\r\n}\r\n\r\nprivate createsMatch(\r\n  piece: Piece,\r\n  row: number,\r\n  col: number,\r\n  grid: Piece[][]\r\n): boolean {\r\n  return this.createsMatchByName(piece.node.name, row, col, grid);\r\n}\r\n\r\n  private getCenteredPosition(j: number, i: number): Vec3 {\r\n    //EVERY game board should be square matrix\r\n    const _j = j * (this.PIECE_CONTENT_SIZE + this.PIECE_OFFSET); //- ((this.PIECE_CONTENT_SIZE * 4.5))//(Math.round(this.GRID_ROW / 2))) )\r\n    const _i = i * (this.PIECE_CONTENT_SIZE + this.PIECE_OFFSET); //- ((this.PIECE_CONTENT_SIZE * 4.5))//(Math.round(this.GRID_ROW / 2))) )\r\n    return new Vec3(_j, _i);\r\n  }\r\n}\r\n"]}