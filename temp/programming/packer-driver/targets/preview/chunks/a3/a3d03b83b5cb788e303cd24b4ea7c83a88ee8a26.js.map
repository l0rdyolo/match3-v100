{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Game/GameManager.ts"],"names":["_decorator","Component","SelectionManager","SliderManager","MatchChecker","GravityHandler","ccclass","property","GameManager","onLoad","selectionManager","eventTarget","on","onPieceSelected","pieceA","pieceB","isSelectionValid","sliderManager","Slide","matches","matchChecker","checkForMatches","length","handleMatches","Shake","piece","destroy","gravityHandler","applyGravity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEZC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,c,iBAAAA,c;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;6BAGjBQ,W,WADZF,OAAO,CAAC,aAAD,C,UAGHC,QAAQ;AAAA;AAAA,+C,UAGRA,QAAQ;AAAA;AAAA,yC,UAGRA,QAAQ;AAAA;AAAA,uC,UAGRA,QAAQ;AAAA;AAAA,2C,2BAZb,MACaC,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAc7BQ,QAAAA,MAAM,GAAS;AACrB,eAAKC,gBAAL,CAAsBC,WAAtB,CAAkCC,EAAlC,CAAqC,gBAArC,EAAuD,KAAKC,eAA5D,EAA6E,IAA7E;AACH;;AAEaA,QAAAA,eAAe,CAACC,MAAD,EAAgBC,MAAhB,EAA8C;AAAA;;AAAA;AACvE,gBAAI,KAAI,CAACL,gBAAL,CAAsBM,gBAAtB,CAAuCF,MAAvC,EAA+CC,MAA/C,CAAJ,EAA4D;AACxD,oBAAM,KAAI,CAACE,aAAL,CAAmBC,KAAnB,CAAyBJ,MAAzB,EAAiCC,MAAjC,CAAN;;AACA,kBAAMI,OAAO,GAAG,KAAI,CAACC,YAAL,CAAkBC,eAAlB,CAAkCP,MAAlC,EAA0CC,MAA1C,CAAhB;;AACA,kBAAII,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACpB,gBAAA,KAAI,CAACC,aAAL,CAAmBJ,OAAnB;AACH,eAFD,MAEO;AACH;AACA,sBAAM,KAAI,CAACF,aAAL,CAAmBC,KAAnB,CAAyBH,MAAzB,EAAiCD,MAAjC,CAAN;AACH;AACJ,aATD,MASO;AACHA,cAAAA,MAAM,CAACU,KAAP;AACH;AAZsE;AAa1E;;AAEOD,QAAAA,aAAa,CAACJ,OAAD,EAAyB;AAC1C;AACA,eAAK,IAAMM,KAAX,IAAoBN,OAApB,EAA6B;AACzBM,YAAAA,KAAK,CAACC,OAAN;AACH;;AACD,eAAKC,cAAL,CAAoBC,YAApB;AACH;;AAvCsC,O;;;;;iBAGM,I;;;;;;;iBAGN,I;;;;;;;iBAGF,I;;;;;;;iBAGI,I","sourcesContent":["import { _decorator, Component } from 'cc';\nimport { Piece } from '../Piece/Piece';\nimport { SelectionManager } from '../Interaction/SelectionManager';\nimport { SliderManager } from '../Interaction/SliderManager';\nimport { MatchChecker } from '../Match/MatchChecker';\nimport { GravityHandler } from '../Grid/GravityHandler';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n\n    @property(SelectionManager)\n    private selectionManager: SelectionManager = null;\n\n    @property(SliderManager)\n    private sliderManager: SliderManager = null;\n\n    @property(MatchChecker)\n    private matchChecker: MatchChecker = null;\n\n    @property(GravityHandler)\n    private gravityHandler: GravityHandler = null;\n\n    protected onLoad(): void {\n        this.selectionManager.eventTarget.on('piece-selected', this.onPieceSelected, this);\n    }\n\n    private async onPieceSelected(pieceA: Piece, pieceB: Piece): Promise<void> {\n        if (this.selectionManager.isSelectionValid(pieceA, pieceB)) {\n            await this.sliderManager.Slide(pieceA, pieceB);\n            const matches = this.matchChecker.checkForMatches(pieceA, pieceB);\n            if (matches.length > 0) {\n                this.handleMatches(matches);\n            } else {\n                // Eğer match yoksa parçaları geri swap et\n                await this.sliderManager.Slide(pieceB, pieceA);\n            }\n        } else {\n            pieceA.Shake();\n        }\n    }\n\n    private handleMatches(matches: Piece[]): void {\n        // Eşleşen parçaları kaldırma işlemi\n        for (const piece of matches) {\n            piece.destroy();\n        }\n        this.gravityHandler.applyGravity();\n    }\n}\n"]}