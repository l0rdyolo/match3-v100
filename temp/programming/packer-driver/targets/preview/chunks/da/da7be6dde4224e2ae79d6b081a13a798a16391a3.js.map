{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GridGenerator.ts"],"names":["_decorator","Component","Vec3","CCInteger","Piece","PieceTypes","PiecePool","ccclass","property","GridGenerator","grid","Generate","j","height","i","width","piece","createPiece","node","setScale","ZERO","Highlight","ONE","row","col","pieceNode","getInstance","getPiece","console","error","Normal","init","setParent","addChild","createsMatch","createsMatchByName","isMatch","name","returnPiece"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;;AACnCC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;+BAGjBS,a,WADZF,OAAO,CAAC,eAAD,C,UAILC,QAAQ,CAACL,SAAD,C,UAGRK,QAAQ,CAACL,SAAD,C,2BAPX,MACaM,aADb,SACmCR,SADnC,CACqE;AAAA;AAAA;AAAA,eAC5DS,IAD4D,GAC1C,EAD0C;;AAAA;;AAAA;AAAA;;AASnE;AACOC,QAAAA,QAAQ,GAAc;AAC3B,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,iBAAKF,IAAL,CAAUE,CAAV,IAAe,EAAf;;AACA,iBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,kBAAME,KAAK,GAAG,KAAKC,WAAL,CAAiBH,CAAjB,EAAoBF,CAApB,CAAd;AACA,mBAAKF,IAAL,CAAUE,CAAV,EAAaE,CAAb,IAAkBE,KAAlB;AACAA,cAAAA,KAAK,CAACE,IAAN,CAAWC,QAAX,CAAoBjB,IAAI,CAACkB,IAAzB;AACAJ,cAAAA,KAAK,CAACK,SAAN,CAAgB,GAAhB,EAAqBnB,IAAI,CAACoB,GAA1B;AACD;AACF;;AACD,iBAAO,KAAKZ,IAAZ;AACD;;AAEOO,QAAAA,WAAW,CAACM,GAAD,EAAcC,GAAd,EAAkC;AACnD,cAAIC,SAAJ;AACA,cAAIT,KAAJ;;AACA,aAAG;AACDS,YAAAA,SAAS,GAAG;AAAA;AAAA,wCAAUC,WAAV,GAAwBC,QAAxB,EAAZ;;AACA,gBAAI,CAACF,SAAL,EAAgB;AACdG,cAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd;AACA;AACD;;AACDb,YAAAA,KAAK,GAAG;AAAA;AAAA,gCAAUO,GAAV,EAAeC,GAAf,EAAoBC,SAApB,EAA+B;AAAA;AAAA,0CAAWK,MAA1C,CAAR;AACAd,YAAAA,KAAK,CAACe,IAAN;AACAf,YAAAA,KAAK,CAACE,IAAN,CAAWc,SAAX,CAAqB,KAAKd,IAA1B;AACA,iBAAKA,IAAL,CAAUe,QAAV,CAAmBjB,KAAK,CAACE,IAAzB;AACD,WAVD,QAUS,KAAKgB,YAAL,CAAkBlB,KAAlB,EAAyBO,GAAzB,EAA8BC,GAA9B,EAAmC,KAAKd,IAAxC,CAVT;;AAYA,iBAAOM,KAAP;AACD;;AAEOmB,QAAAA,kBAAkB,CACxBnB,KADwB,EAExBO,GAFwB,EAGxBC,GAHwB,EAIxBd,IAJwB,EAKf;AAAA;;AACT,cAAI0B,OAAO,GAAG,KAAd;;AACA,cACEb,GAAG,IAAI,CAAP,IACA,cAAAb,IAAI,CAACa,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,gCAAoBN,IAApB,CAAyBmB,IAAzB,MAAkCrB,KAAK,CAACE,IAAN,CAAWmB,IAD7C,IAEA,eAAA3B,IAAI,CAACa,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,iCAAoBN,IAApB,CAAyBmB,IAAzB,MAAkCrB,KAAK,CAACE,IAAN,CAAWmB,IAH/C,EAIE;AACAD,YAAAA,OAAO,GAAG,IAAV;AACD;;AAED,cACEZ,GAAG,IAAI,CAAP,IACA,cAAAd,IAAI,CAACa,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,gCAAoBN,IAApB,CAAyBmB,IAAzB,MAAkCrB,KAAK,CAACE,IAAN,CAAWmB,IAD7C,IAEA,eAAA3B,IAAI,CAACa,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,iCAAoBN,IAApB,CAAyBmB,IAAzB,MAAkCrB,KAAK,CAACE,IAAN,CAAWmB,IAH/C,EAIE;AACAD,YAAAA,OAAO,GAAG,IAAV;AACD;;AACD,cAAIA,OAAJ,EAAa;AAAA;AAAA,sCAAUV,WAAV,GAAwBY,WAAxB,CAAoCtB,KAAK,CAACE,IAA1C;AACb,iBAAOkB,OAAP;AACD;;AAEOF,QAAAA,YAAY,CAClBlB,KADkB,EAElBO,GAFkB,EAGlBC,GAHkB,EAIlBd,IAJkB,EAKT;AACT,iBAAO,KAAKyB,kBAAL,CAAwBnB,KAAxB,EAA+BO,GAA/B,EAAoCC,GAApC,EAAyCd,IAAzC,CAAP;AACD;;AA1EkE,O;;;;;iBAI5C,C;;;;;;;iBAGN,C","sourcesContent":["import { _decorator, Component, Node, Vec3, CCInteger } from \"cc\";\r\nimport { Piece } from \"../Piece/Piece\";\r\nimport { PieceTypes } from \"../Piece/PieceTypes\";\r\nimport { PiecePool } from \"../Piece/PiecePool\";\r\nimport { SelectionManager } from \"../Interaction/SelectionManager\";\r\nimport { IGrid } from \"./IGrid\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GridGenerator\")\r\nexport class GridGenerator extends Component implements IGrid<Piece> {\r\n  public grid: Piece[][] = [];\r\n\r\n  @property(CCInteger)\r\n  public width: number = 0;\r\n\r\n  @property(CCInteger)\r\n  height: number = 0;\r\n\r\n  //! todo rowlarÄ± tweenleyebiliriz\r\n  public Generate(): Piece[][] {\r\n    for (let j = 0; j < this.height; j++) {  \r\n      this.grid[j] = [];\r\n      for (let i = 0; i < this.width; i++) {  \r\n        const piece = this.createPiece(i, j);\r\n        this.grid[j][i] = piece;\r\n        piece.node.setScale(Vec3.ZERO);\r\n        piece.Highlight(0.5, Vec3.ONE);\r\n      }\r\n    }\r\n    return this.grid;\r\n  }\r\n\r\n  private createPiece(row: number, col: number): Piece {\r\n    let pieceNode: Node | null;\r\n    let piece: Piece | null;\r\n    do {\r\n      pieceNode = PiecePool.getInstance().getPiece();\r\n      if (!pieceNode) {\r\n        console.error(\"Piece could not be instantiated.\");\r\n        continue;\r\n      }\r\n      piece = new Piece(row, col, pieceNode, PieceTypes.Normal);\r\n      piece.init();\r\n      piece.node.setParent(this.node);\r\n      this.node.addChild(piece.node);\r\n    } while (this.createsMatch(piece, row, col, this.grid));\r\n\r\n    return piece!;\r\n  }\r\n\r\n  private createsMatchByName(\r\n    piece: Piece,\r\n    row: number,\r\n    col: number,\r\n    grid: Piece[][]\r\n  ): boolean {\r\n    let isMatch = false;\r\n    if (\r\n      row >= 2 &&\r\n      grid[row - 1][col]?.node.name === piece.node.name &&\r\n      grid[row - 2][col]?.node.name === piece.node.name\r\n    ) {\r\n      isMatch = true;\r\n    }\r\n\r\n    if (\r\n      col >= 2 &&\r\n      grid[row][col - 1]?.node.name === piece.node.name &&\r\n      grid[row][col - 2]?.node.name === piece.node.name\r\n    ) {\r\n      isMatch = true;\r\n    }\r\n    if (isMatch) PiecePool.getInstance().returnPiece(piece.node);\r\n    return isMatch;\r\n  }\r\n\r\n  private createsMatch(\r\n    piece: Piece,\r\n    row: number,\r\n    col: number,\r\n    grid: Piece[][]\r\n  ): boolean {\r\n    return this.createsMatchByName(piece, row, col, grid);\r\n  }\r\n}\r\n"]}