{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Grid/GridGenerator.ts"],"names":["_decorator","Component","Vec3","CCInteger","PiecesPool","ccclass","property","GridGenerator","PIECE_CONTENT_SIZE","start","grid","generateGrid","row","GRID_ROW","col","piece","piecesPool","getPieceFromPool","createsMatch","setPosition","getCenteredPosition","onPieceClicked","event","clickedPiece","currentTarget","console","log","getPosition","name","j","i","_j","_i"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, systemEvent, SystemEventType, EventTouch, Vec2, CCInteger } from 'cc';\nimport { PiecesPool } from '../Poolable/PiecesPool';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GridGenerator')\nexport class GridGenerator extends Component {\n    @property(PiecesPool)\n    private piecesPool: PiecesPool = null;\n   \n    private PIECE_CONTENT_SIZE: number = 100; //dinamikle≈ütir\n    \n    @property(CCInteger)\n    GRID_ROW: number = 0;\n\n    protected start(): void {\n        const grid = this.generateGrid();\n    }\n\n    private generateGrid() {\n        const grid: Node[][] = [];\n        for (let row = 0; row < this.GRID_ROW; row++) {\n            grid[row] = [];\n            for (let col = 0; col < this.GRID_ROW; col++) {\n                let piece: Node;\n                do {\n                    piece = this.piecesPool.getPieceFromPool();\n                } while (this.createsMatch(piece, row, col, grid));\n                piece.setPosition(this.getCenteredPosition(col, row));\n                grid[row][col] = piece;\n            }\n        }\n    }\n\n\n    private onPieceClicked(event: EventTouch) {\n        const clickedPiece = event.currentTarget as Node;\n        console.log(`Piece clicked at position: ${clickedPiece.getPosition()}`);\n        // Implement what happens when a piece is clicked.\n    }\n\n    private createsMatch(piece: Node, row: number, col: number, grid: Node[][]): boolean {\n        if (row >= 2 &&\n            grid[row - 1][col]?.name === piece.name &&\n            grid[row - 2][col]?.name === piece.name) {\n            return true;\n        }\n\n        if (col >= 2 &&\n            grid[row][col - 1]?.name === piece.name &&\n            grid[row][col - 2]?.name === piece.name) {\n            return true;\n        }\n\n        return false;\n    }\n\n\n    private getCenteredPosition(j : number, i:number ) : Vec3{\n      //EVERY game board should be square matrix\n      const _j = (j * this.PIECE_CONTENT_SIZE)// - ((this.PIECE_CONTENT_SIZE * 2) )\n      const _i = (i * this.PIECE_CONTENT_SIZE)// - ((this.PIECE_CONTENT_SIZE * 2) ) \n      return new Vec3(_j,_i)\n    }\n}\n"]}