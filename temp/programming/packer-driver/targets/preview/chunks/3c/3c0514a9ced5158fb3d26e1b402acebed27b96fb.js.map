{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Interaction/InteractionManager.ts"],"names":["_decorator","Component","tween","MatchChecker","ccclass","property","InteractionManager","grid","firstSelectedPiece","secondSelectedPiece","initializeGrid","onPieceClicked","event","piece","console","log","pieceA","pieceB","posA","getPosition","posB","setPosition","rowA","findPieceRow","colA","findPieceCol","rowB","colB","checkMatch","to","position","start","resetSelection","highlightPiece","setScale"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, Node, tween } from 'cc';\nimport { MatchChecker } from '../Grid/MatchChecker';\nconst { ccclass , property } = _decorator;\n\n@ccclass('InteractionManager')\nexport class InteractionManager extends Component {\n    private grid: Node[][] = [];\n    // private selectedPiece: Node | null = null;\n    private firstSelectedPiece : Node | null = null;\n    private secondSelectedPiece : Node | null = null;\n\n\n    public initializeGrid(grid: Node[][]) {\n        this.grid = grid;\n    }\n\n    public onPieceClicked(event: EventTouch, piece: Node) {\n        if (this.firstSelectedPiece) {\n            console.log(\"first selection\",piece);\n            this.secondSelectedPiece = piece;\n            const pieceA = this.secondSelectedPiece;\n            const pieceB = this.firstSelectedPiece;\n\n            \n\n            const posA = pieceA.getPosition();\n            const posB = pieceB.getPosition();\n\n            // Swap positions\n            pieceA.setPosition(posB);\n            pieceB.setPosition(posA);\n\n            const rowA = this.findPieceRow(pieceA);\n            const colA = this.findPieceCol(pieceA);\n            const rowB = this.findPieceRow(pieceB);\n            const colB = this.findPieceCol(pieceB);\n\n            if (!MatchChecker.checkMatch(this.grid, pieceA, rowA, colA) && !MatchChecker.checkMatch(this.grid, pieceB, rowB, colB)) {\n                // Swap back if no match\n                tween(pieceA).to(0.3, { position: posA }).start();\n                tween(pieceB).to(0.3, { position: posB }).start();\n            }\n\n            \n            this.resetSelection();\n        } else {\n            this.firstSelectedPiece = piece;\n            console.log(\"first selection\",piece);\n            \n            this.highlightPiece(piece);\n        }\n    }\n\n    private findPieceRow(piece: Node): number {\n        // Implement logic to find the row of the piece in the grid.\n        // Example: return this.grid.findIndex(row => row.includes(piece));\n        return -1; // Placeholder, implement this logic.\n    }\n\n    private findPieceCol(piece: Node): number {\n        // Implement logic to find the column of the piece in the grid.\n        // Example: return this.grid[row].indexOf(piece);\n        return -1; // Placeholder, implement this logic.\n    }\n\n    private highlightPiece(piece: Node) {\n        piece.setScale(1.2, 1.2, 1.2);\n    }\n\n    private resetSelection(){\n        this.firstSelectedPiece!.setScale(1,1,1)\n        this.secondSelectedPiece!.setScale(1,1,1)\n        this.firstSelectedPiece = null;\n        this.secondSelectedPiece = null;\n    }\n\n}\n"]}