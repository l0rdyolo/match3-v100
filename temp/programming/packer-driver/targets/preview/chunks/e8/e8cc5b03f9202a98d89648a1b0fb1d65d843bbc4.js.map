{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Interaction/SliderManager.ts"],"names":["_decorator","Component","EffectManager","ccclass","property","SliderManager","slide_duration","SwapPieces","pieceA","pieceB","slide","tempNode","node","clearPiece","assingPiece","ResetScale","posA","getPosition","posB","Promise","all","movePiece"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEZC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;+BAGjBK,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb,SACmCJ,SADnC,CAC6C;AAAA;AAAA;AAAA,eAanCK,cAbmC,GAaR,KAbQ;AAAA;;AACrCC,QAAAA,UAAU,CAACC,MAAD,EAAgBC,MAAhB,EAA+B;AAAA;;AAAA;AAC7C,kBAAM,KAAI,CAACC,KAAL,CAAWF,MAAX,EAAmBC,MAAnB,CAAN;AACA,gBAAME,QAAQ,GAAGH,MAAM,CAACI,IAAxB;AACAJ,YAAAA,MAAM,CAACK,UAAP;AACAL,YAAAA,MAAM,CAACM,WAAP,CAAmBL,MAAM,CAACG,IAA1B;AACAH,YAAAA,MAAM,CAACI,UAAP;AACAJ,YAAAA,MAAM,CAACK,WAAP,CAAmBH,QAAnB;AACAH,YAAAA,MAAM,CAACO,UAAP;AACAN,YAAAA,MAAM,CAACM,UAAP;AAR6C;AAUhD;;AAGcL,QAAAA,KAAK,CAACF,MAAD,EAAgBC,MAAhB,EAA+B;AAAA;;AAAA;AAC/C,gBAAMO,IAAI,GAAGR,MAAM,CAACI,IAAP,CAAYK,WAAZ,EAAb;AACA,gBAAMC,IAAI,GAAGT,MAAM,CAACG,IAAP,CAAYK,WAAZ,EAAb;AAEA,kBAAME,OAAO,CAACC,GAAR,CAAY,CAChB;AAAA;AAAA,gDAAcC,SAAd,CAAwBb,MAAM,CAACI,IAA/B,EAAqCM,IAArC,EAA2C,MAAI,CAACZ,cAAhD,CADgB,EAEhB;AAAA;AAAA,gDAAce,SAAd,CAAwBZ,MAAM,CAACG,IAA/B,EAAqCI,IAArC,EAA2C,MAAI,CAACV,cAAhD,CAFgB,CAAZ,CAAN;AAJ+C;AAQhD;;AAtB0C,O","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\r\nimport { Piece } from \"../Piece/Piece\";\r\nimport { EffectManager } from \"../Effects/EffectManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"SliderManager\")\r\nexport class SliderManager extends Component {\r\n  async SwapPieces(pieceA: Piece, pieceB: Piece) {\r\n    await this.slide(pieceA, pieceB);\r\n    const tempNode = pieceA.node;\r\n    pieceA.clearPiece();\r\n    pieceA.assingPiece(pieceB.node);\r\n    pieceB.clearPiece();\r\n    pieceB.assingPiece(tempNode); \r\n    pieceA.ResetScale();\r\n    pieceB.ResetScale();\r\n\r\n}\r\n\r\n  private slide_duration : number =  0.125  ;\r\n  public async slide(pieceA: Piece, pieceB: Piece) {\r\n    const posA = pieceA.node.getPosition();\r\n    const posB = pieceB.node.getPosition();\r\n\r\n    await Promise.all([\r\n      EffectManager.movePiece(pieceA.node, posB, this.slide_duration),\r\n      EffectManager.movePiece(pieceB.node, posA, this.slide_duration)\r\n    ]);\r\n  }\r\n}\r\n"]}