{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/MatchChecker.ts"],"names":["MatchChecker","HorizontalMatchStrategy","VerticalMatchStrategy","constructor","matchStrategies","push","checkForMatches","piece","grid","matchedPieces","strategy","matches","checkMatch","length","concat"],"mappings":";;;8EAKaA,Y;;;;;;;;;;;;;;;;;;;;;;;;;;AALJC,MAAAA,uB,iBAAAA,uB;;AAEAC,MAAAA,qB,iBAAAA,qB;;;;;;;8BAGIF,Y,GAAN,MAAMA,YAAN,CAAmB;AAGtBG,QAAAA,WAAW,GAAG;AAAA,eAFNC,eAEM,GAF6B,EAE7B;AACV,eAAKA,eAAL,CAAqBC,IAArB,CAA0B;AAAA;AAAA,mEAA1B;AACA,eAAKD,eAAL,CAAqBC,IAArB,CAA0B;AAAA;AAAA,+DAA1B;AACH;;AAEMC,QAAAA,eAAe,CAACC,KAAD,EAAeC,IAAf,EAAyC;AAC3D,cAAIC,aAAsB,GAAG,EAA7B;;AAEA,eAAK,IAAMC,QAAX,IAAuB,KAAKN,eAA5B,EAA6C;AACzC,gBAAMO,OAAO,GAAGD,QAAQ,CAACE,UAAT,CAAoBL,KAApB,EAA2BC,IAA3B,CAAhB;;AACA,gBAAIG,OAAO,CAACE,MAAR,IAAkB,CAAtB,EAAyB;AACrBJ,cAAAA,aAAa,GAAGA,aAAa,CAACK,MAAd,CAAqBH,OAArB,CAAhB;AACH;AACJ;;AAED,iBAAOF,aAAP;AACH;;AAnBqB,O","sourcesContent":["import { HorizontalMatchStrategy } from \"../Match/MatchStrategies/HorizontalMatchStrategy\";\r\nimport { MatchStrategy } from \"../Match/MatchStrategies/IMatchStrategy\";\r\nimport { VerticalMatchStrategy } from \"../Match/MatchStrategies/VerticalMatchStrategy\";\r\nimport { Piece } from \"../Piece/Piece\";\r\n\r\nexport class MatchChecker {\r\n    private matchStrategies: MatchStrategy[] = [];\r\n\r\n    constructor() {\r\n        this.matchStrategies.push(new HorizontalMatchStrategy());\r\n        this.matchStrategies.push(new VerticalMatchStrategy());\r\n    }\r\n\r\n    public checkForMatches(piece: Piece, grid: Piece[][]): Piece[] {\r\n        let matchedPieces: Piece[] = [];\r\n\r\n        for (const strategy of this.matchStrategies) {\r\n            const matches = strategy.checkMatch(piece, grid);\r\n            if (matches.length >= 3) {\r\n                matchedPieces = matchedPieces.concat(matches);\r\n            }\r\n        }\r\n\r\n        return matchedPieces;\r\n    }\r\n}"]}