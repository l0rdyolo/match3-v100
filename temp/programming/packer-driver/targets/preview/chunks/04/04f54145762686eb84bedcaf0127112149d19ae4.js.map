{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Interaction/SelectionManager.ts"],"names":["_decorator","EventTarget","SingletonComponent","ccclass","property","SelectionManager","firstSelected","secondSelected","onLoad","eventTarget","on","onPieceSelected","onDestroy","off","piece","handleFirstSelection","handleSecondSelection","console","log","cancelSelection"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;;AAEvBC,MAAAA,kB,iBAAAA,kB;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;kCAGjBK,gB,WADZF,OAAO,CAAC,kBAAD,C,2BAAR,MACaE,gBADb;AAAA;AAAA,oDAC2E;AAAA;AAAA;AAAA,eAGjEC,aAHiE,GAG1C,IAH0C;AAAA,eAIjEC,cAJiE,GAIzC,IAJyC;AAAA;;AAM/DC,QAAAA,MAAM,GAAS;AACvB,gBAAMA,MAAN;AACAH,UAAAA,gBAAgB,CAACI,WAAjB,CAA6BC,EAA7B,CACE,gBADF,EAEE,KAAKC,eAFP,EAGE,IAHF;AAKD;;AAESC,QAAAA,SAAS,GAAS;AAC1BP,UAAAA,gBAAgB,CAACI,WAAjB,CAA6BI,GAA7B,CACI,gBADJ,EAEI,KAAKF,eAFT,EAGI,IAHJ;AAKD;;AAEMA,QAAAA,eAAe,CAACG,KAAD,EAAqB;AACzC,cAAI,CAAC,KAAKR,aAAV,EAAyB;AACvB,iBAAKS,oBAAL,CAA0BD,KAA1B;AACD,WAFD,MAEO;AACL,iBAAKE,qBAAL,CAA2BF,KAA3B;AACD;AACF;;AAEDC,QAAAA,oBAAoB,CAACD,KAAD,EAAe;AACjC,eAAKR,aAAL,GAAqBQ,KAArB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAvC;AACD;;AAEDE,QAAAA,qBAAqB,CAACF,KAAD,EAAe;AAClC,eAAKP,cAAL,GAAsBO,KAAtB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,KAAxC;AACD;;AAEDK,QAAAA,eAAe,GAAG;AAChB,eAAKb,aAAL,GAAqB,IAArB;AACA,eAAKC,cAAL,GAAsB,IAAtB;AACD;;AA5CwE,O,UAC3DE,W,GAA2B,IAAIR,WAAJ,E","sourcesContent":["import { _decorator, Component, EventTarget, Node } from \"cc\";\nimport { Piece } from \"../Piece/Piece\";\nimport { SingletonComponent } from \"../SingletonComponent\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"SelectionManager\")\nexport class SelectionManager extends SingletonComponent<SelectionManager> {\n  public static eventTarget: EventTarget = new EventTarget();\n\n  private firstSelected: Piece = null;\n  private secondSelected: Piece = null;\n\n  protected onLoad(): void {\n    super.onLoad();\n    SelectionManager.eventTarget.on(\n      \"piece-selected\",\n      this.onPieceSelected,\n      this\n    );\n  }\n\n  protected onDestroy(): void {\n    SelectionManager.eventTarget.off(\n        \"piece-selected\",\n        this.onPieceSelected,\n        this\n      );        \n  }\n\n  public onPieceSelected(piece: Piece): void {\n    if (!this.firstSelected) {\n      this.handleFirstSelection(piece);\n    } else {\n      this.handleSecondSelection(piece);\n    }\n  }\n\n  handleFirstSelection(piece: Piece) {\n    this.firstSelected = piece;\n    console.log(\"setted first selection \", piece);\n  }\n\n  handleSecondSelection(piece: Piece) {\n    this.secondSelected = piece;\n    console.log(\"setted second selection \", piece);\n  }\n\n  cancelSelection() {\n    this.firstSelected = null;\n    this.secondSelected = null;\n  }\n}\n"]}