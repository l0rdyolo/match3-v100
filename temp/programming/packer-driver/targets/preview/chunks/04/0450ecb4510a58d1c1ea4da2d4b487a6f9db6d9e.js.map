{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Grid/MatchChecker.ts"],"names":["_decorator","EffectManager","ccclass","Direction","MatchChecker","directions","dx","dy","SwapPiecePositions","pieceA","pieceB","posA","posB","gridMap","movePiece","posAData","get","posBData","set","HighlightNeighbors","piece","direc"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA;AAAF,O,GAAcF,U;;iBAEfG,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;8BAMQC,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,CAC0B;AAAA;AAAA,eAEhBC,UAFgB,GAEH,CACnB;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE;AAAb,WADmB,EACC;AACpB;AAAED,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE,CAAC;AAAd,WAFmB,EAEC;AACpB;AAAED,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE;AAAb,WAHmB,EAGC;AACpB;AAAED,YAAAA,EAAE,EAAE,CAAC,CAAP;AAAUC,YAAAA,EAAE,EAAE;AAAd,WAJmB,CAIC;AAJD,WAFG;AAAA;;AASc,eAAlBC,kBAAkB,CACpCC,MADoC,EAEpCC,MAFoC,EAGpCC,IAHoC,EAIpCC,IAJoC,EAKpCC,OALoC,EAMpC;AAAA;AACA;AAAA;AAAA,gDAAcC,SAAd,CAAwBL,MAAxB,EAAgCG,IAAhC,EAAsC,GAAtC;AACA,kBAAM;AAAA;AAAA,gDAAcE,SAAd,CAAwBJ,MAAxB,EAAgCC,IAAhC,EAAsC,GAAtC,CAAN,CAFA,CAIA;;AACA,gBAAMI,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAYP,MAAZ,CAAjB;AACA,gBAAMQ,QAAQ,GAAGJ,OAAO,CAACG,GAAR,CAAYN,MAAZ,CAAjB;AACAG,YAAAA,OAAO,CAACK,GAAR,CAAYT,MAAZ,EAAoBQ,QAApB;AACAJ,YAAAA,OAAO,CAACK,GAAR,CAAYR,MAAZ,EAAoBK,QAApB;AARA;AASD;;AAEOI,QAAAA,kBAAkB,CAACC,KAAD,EAAc;AACtC,eAAK,IAAM;AAACd,YAAAA,EAAD;AAAMC,YAAAA;AAAN,WAAX,IAAyBc,KAAzB,EAA+B,CAE9B;AACF;;AA9BuB,O","sourcesContent":["import { _decorator, director, Node, Vec3 } from \"cc\";\nimport { EffectManager } from \"../Effects/EffectManager\";\nconst { ccclass } = _decorator;\n\nenum Direction {\n  Horizontal,\n  Vertical,\n}\n\n@ccclass(\"MatchChecker\")\nexport class MatchChecker {\n\n  private directions = [\n    { dx: 0, dy: 1 },   // Right\n    { dx: 0, dy: -1 },  // Left\n    { dx: 1, dy: 0 },   // Down\n    { dx: -1, dy: 0 }   // Up\n  ];\n\n  public static async SwapPiecePositions(\n    pieceA: Node,\n    pieceB: Node,\n    posA: Vec3,\n    posB: Vec3,\n    gridMap: Map<Node, { row: number, col: number }>\n  ) {\n    EffectManager.movePiece(pieceA, posB, 0.1);\n    await EffectManager.movePiece(pieceB, posA, 0.1);\n\n    // Update the gridMap\n    const posAData = gridMap.get(pieceA);\n    const posBData = gridMap.get(pieceB);\n    gridMap.set(pieceA, posBData);\n    gridMap.set(pieceB, posAData);\n  }\n\n  private HighlightNeighbors(piece : Node){\n    for( const {dx , dy } of direc){\n\n    }\n  }\n}\n"]}