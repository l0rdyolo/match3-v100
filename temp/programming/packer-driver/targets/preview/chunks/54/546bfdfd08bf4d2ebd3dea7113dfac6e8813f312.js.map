{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Interaction/InteractionManager.ts"],"names":["_decorator","Component","Vec3","MatchChecker","EffectManager","ccclass","property","InteractionManager","grid","firstSelectedPiece","secondSelectedPiece","initializeGrid","onPieceClicked","event","piece","gridMap","pieceA","pieceB","posA","getPosition","posB","diff","subtract","length","SwapPiecePositions","checkMatches","resetSelection","highlightPiece","setScale","movePiece","posAData","get","posBData","set","console","log"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, markAsWarning, Node, tween, Vec3 } from 'cc';\nimport { MatchChecker } from '../Grid/MatchChecker';\nimport { EffectManager } from '../Effects/EffectManager';\nconst { ccclass , property } = _decorator;\n\n@ccclass('InteractionManager')\nexport class InteractionManager extends Component {\n    private grid: Node[][] = [];\n    // private selectedPiece: Node | null = null;\n    private firstSelectedPiece : Node | null = null;\n    private secondSelectedPiece : Node | null = null;\n\n\n    public initializeGrid(grid: Node[][]) {\n        this.grid = grid;\n    }\n\n    public async onPieceClicked(event: EventTouch, piece: Node ,  gridMap: Map<Node, { row: number, col: number }>) {\n        if (this.firstSelectedPiece) {\n            this.secondSelectedPiece = piece;\n            \n            const pieceA = this.secondSelectedPiece;\n            const pieceB = this.firstSelectedPiece;\n\n            const posA = pieceA.getPosition();\n            const posB = pieceB.getPosition();\n\n            //burada amacım 1 birimlik değişim olmuşsa matchchecker'a gitmek\n            //bu kısmı düzenlemeliyiz!!!!\n            const diff = Vec3.subtract(new Vec3() , posA , posB);\n            if(diff.length() === 120){\n                await this.SwapPiecePositions(pieceA, pieceB ,posA ,posB ,gridMap);\n                this.checkMatches(); \n            }\n            this.resetSelection();         \n\n        } else {\n            this.firstSelectedPiece = piece;\n            EffectManager.highlightPiece(piece);\n        }\n    }\n\n    private resetSelection(){\n        this.firstSelectedPiece!.setScale(1,1,1)\n        this.secondSelectedPiece!.setScale(1,1,1)\n        this.firstSelectedPiece = null;\n        this.secondSelectedPiece = null;\n    }\n\n    private async SwapPiecePositions(\n        pieceA: Node,\n        pieceB: Node,\n        posA: Vec3,\n        posB: Vec3,\n        gridMap: Map<Node, { row: number; col: number }>\n      ) {\n         EffectManager.movePiece(pieceA, posB, 0.1);\n         EffectManager.movePiece(pieceB, posA, 0.1);\n    \n        // Update the gridMap\n        const posAData = gridMap.get(pieceA);\n        const posBData = gridMap.get(pieceB);\n        gridMap.set(pieceA, posBData);\n        gridMap.set(pieceB, posAData);\n      }\n\n      private checkMatches(pieceA:Node , pieceB : Node , gridMap: Map<Node, { row: number, col: number }>){\n        console.log(MatchChecker.checkMatches(pieceA , gridMap) || MatchChecker.checkMatches(pieceB , gridMap));\n        \n      }\n}\n"]}