{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GravityHandler.ts"],"names":["_decorator","Component","Vec3","ccclass","property","GravityHandler","onLoad","applyGravity","grid","moved","promises","col","length","row","currentPiece","belowPiece","isEmpty","push","moveToPosition","Promise","all"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAI1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;gCAGjBK,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCJ,SADpC,CAC8C;AAC5CK,QAAAA,MAAM,GAAG;AACP,gBAAMA,MAAN;AACD,SAH2C,CAK5C;;;AACMC,QAAAA,YAAY,CAACC,IAAD,EAAO;AAAA;AACvB,gBAAIC,KAAK,GAAG,KAAZ;AACA,gBAAIC,QAAyB,GAAG,EAAhC;;AACA,eAAG;AACDD,cAAAA,KAAK,GAAG,KAAR;;AAEA,mBAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAhC,EAAwCD,GAAG,EAA3C,EAA+C;AAC7C,qBAAK,IAAIE,GAAG,GAAGL,IAAI,CAACI,MAAL,GAAc,CAA7B,EAAgCC,GAAG,IAAI,CAAvC,EAA0CA,GAAG,EAA7C,EAAiD;AAC/C,sBAAMC,YAAY,GAAGN,IAAI,CAACK,GAAD,CAAJ,CAAUF,GAAV,CAArB;AACA,sBAAMI,UAAU,GAAGP,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,CAAnB;;AAEA,sBAAIG,YAAY,CAACE,OAAb,IAAwB,CAACD,UAAU,CAACC,OAAxC,EAAiD;AAC/CR,oBAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUF,GAAV,IAAiBI,UAAjB;AACAP,oBAAAA,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,IAAqBG,YAArB;AAEAC,oBAAAA,UAAU,CAACJ,GAAX,GAAiBG,YAAY,CAACH,GAA9B;AACAI,oBAAAA,UAAU,CAACF,GAAX,GAAiBC,YAAY,CAACD,GAA9B;AAEAH,oBAAAA,QAAQ,CAACO,IAAT,CAAcF,UAAU,CAACG,cAAX,CAA0B,IAAIhB,IAAJ,CAASS,GAAT,EAAcE,GAAd,EAAmB,CAAnB,CAA1B,CAAd;AACAJ,oBAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF;;AACD,oBAAMU,OAAO,CAACC,GAAR,CAAYV,QAAZ,CAAN;AACD,aArBD,QAqBSD,KArBT;AAHuB;AAyBxB;;AA/B2C,O","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\nimport { SingletonComponent } from \"../SingletonComponent\";\nimport { GridManager } from \"./GridManager\";\nimport { Piece } from \"../Piece/Piece\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GravityHandler\")\nexport class GravityHandler extends Component {\n  onLoad() {\n    super.onLoad();\n  }\n\n  //! IDEA - burada patlÄ±yoruz\n  async applyGravity(grid) {\n    let moved = false;\n    let promises: Promise<void>[] = [];\n    do {\n      moved = false;\n\n      for (let col = 0; col < grid[0].length; col++) {\n        for (let row = grid.length - 2; row >= 0; row--) { \n          const currentPiece = grid[row][col];\n          const belowPiece = grid[row + 1][col];\n\n          if (currentPiece.isEmpty && !belowPiece.isEmpty) { \n            grid[row][col] = belowPiece;\n            grid[row + 1][col] = currentPiece;\n\n            belowPiece.col = currentPiece.col;\n            belowPiece.row = currentPiece.row;\n\n            promises.push(belowPiece.moveToPosition(new Vec3(col, row, 0)));\n            moved = true;\n          }\n        }\n      }\n      await Promise.all(promises);\n    } while (moved); \n  }\n}\n"]}