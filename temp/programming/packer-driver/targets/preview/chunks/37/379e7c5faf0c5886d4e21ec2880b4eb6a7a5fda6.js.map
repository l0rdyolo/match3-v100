{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/SooLib/Optimization/Singleton.ts"],"names":["findObjectsOfType","c","director","getScene","getComponentsInChildren","findObjectsOfTypeAll","allComponents","allNodes","children","node","components","getComponents","push","_decorator","Component","warn","Node","isValid","Lazy","disallowMultiple","ccclass","Singleton","getInstance","_lazyInstance","instances","_findInactive","length","singletonNode","name","instance","addComponent","addChild","_persist","addPersistRootNode","_destroyOthers","slice","forEach","extra","destroy","error","retryCount","getValue","persist","value","destroyOthers","findInactive","lazy","_lazy","onLoad","initialize","constructor","awakeSingleton","onDestroy","applicationIsQuitting","dispose","isPaused"],"mappings":"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","sourcesContent":["/********************************************************************************\n                           _____             __    _ __  \n                          / ___/____  ____  / /   (_) /_ \n                          \\__ \\/ __ \\/ __ \\/ /   / / __ \\\n                         ___/ / /_/ / /_/ / /___/ / /_/ /\n                        /____/\\____/\\____/_____/_/_.___/ \n                                 \n********************************************************************************/\n/********************************************************************************\n            License for Sooplay Game and Advertising Technologies LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, subject to the following conditions:\n\n1. The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\n2. The Software, or any derivative works thereof, shall not be used or\ndistributed for any purpose without prior written permission from Sooplay.\n\n3. The Software, or any derivative works thereof, shall not be used in any form\nof commercial product or service without prior written permission from Sooplay.\n\n4. Any use of the Software must comply with all applicable laws and regulations.\n\n5. Any modifications or enhancements to the Software must be documented and\nshared with Sooplay prior to distribution.\n\n6. The Software is provided \"as is\", without warranty of any kind, express or\nimplied, including but not limited to the warranties of merchantability, fitness\nfor a particular purpose and noninfringement. In no event shall the authors or\ncopyright holders be liable for any claim, damages or other liability, whether\nin an action of contract, tort or otherwise, arising from, out of or in\nconnection with the Software or the use or other dealings in the Software.\n\n7. All inquiries regarding the Software should be directed to Sooplay.\n\n8. By using or distributing the Software, you agree to comply with these terms\nand conditions. Failure to comply will result in immediate termination of your\nrights under this License.\n\n9. This License shall be governed by and construed in accordance with the laws\nof [Jurisdiction], without regard to its conflict of law provisions.\n\nSooplay Game and Advertising Technologies LLC\nTurkiye\n1/1/2024\n\n********************************************************************************/\n\nimport { _decorator, Component, warn, Node, director, isValid } from 'cc';\nimport { Lazy } from './Lazy';\nconst { disallowMultiple, ccclass } = _decorator;\n\n/**\n * A base class for creating singleton components.\n *\n * This class is used to ensure that only one instance of the component exists\n * in the scene. It uses lazy initialization to create the instance only when it\n * is needed.\n *\n * @template T The type of the singleton component.\n *\n * @example\n * ```typescript\n * import { Singleton } from './Singleton';\n *\n * @ccclass\n * export class MySingleton extends Singleton<MySingleton> {\n *     protected awakeSingleton() {\n *         console.log('Singleton awake');\n *     }\n * }\n * ```\n */\n@ccclass('Singleton')\n@disallowMultiple(true)\nexport abstract class Singleton<T extends Singleton<T>> extends Component {\n    private static _lazyInstance: Lazy<any, []>;\n    private static _destroyOthers: boolean = true;\n    private static _persist: boolean = true;\n    private static _findInactive: boolean = false;\n    private static _lazy: boolean = true;\n\n    /**\n     * Retrieves the singleton instance of the component.\n     * If the instance does not exist, it creates a new instance and adds it to the\n     * scene. If multiple instances of the component are found, it handles them\n     * based on the specified options.\n     *\n     * @returns A Promise that resolves to the singleton instance of the component.\n     *\n     * @remarks\n     * This method is used to ensure that only one instance of the component exists\n     * in the scene. It uses lazy initialization to create the instance only when it\n     * is needed.\n     *\n     * @example\n     * ```typescript\n     * // Get the singleton instance of the component\n     * const instance = await ExampleSingleton.getInstance();\n     *\n     * // Use the instance\n     * instance.doSomething();\n     * ```\n     */\n    public static async getInstance(): Promise<Component> {\n        if (!this._lazyInstance) {\n            this._lazyInstance = new Lazy<any, []>(\n                async () => {\n                    const instances = this._findInactive ? await findObjectsOfTypeAll<Component>(this as any) : await findObjectsOfType<Component>(this as any);\n                    if (instances.length === 0) {\n                        const singletonNode = new Node(`${this.name} [Singleton]`);\n                        const instance = singletonNode.addComponent(this as any);\n                        director.getScene().addChild(singletonNode);\n                        if (this._persist) {\n                            director.addPersistRootNode(instance.node);\n                        }\n                        warn(`[Singleton] An instance of '${this.name}' is needed in the scene, so '${singletonNode.name}' was created${this._persist ? \" with DontDestroyOnLoad.\" : \".\"}`);\n                        return instance;\n                    }\n                    if (instances.length > 1) {\n                        warn(`[Singleton] ${instances.length} instances of '${this.name}' found!`);\n                        if (this._destroyOthers) {\n                            instances.slice(1).forEach((extra: Component) => {\n                                warn(`[Singleton] Deleting extra '${this.name}' instance attached to '${extra.node.name}'`);\n                                extra.node.destroy();\n                            });\n                        }\n                        if (this._persist) {\n                            director.addPersistRootNode(instances[0].node);\n                        }\n                    }\n\n                    return instances[0];\n                },\n                async (error, retryCount) => {\n                    warn(`[Singleton] Error occurred while creating instance: ${error}. Retry count: ${retryCount}`);\n                    return retryCount < 3;\n                }\n            );\n        }\n        return this._lazyInstance.getValue();\n    }\n\n    protected static set persist(value: boolean) {\n        this._persist = value;\n    }\n\n    protected static set destroyOthers(value: boolean) {\n        this._destroyOthers = value;\n    }\n\n    protected static set findInactive(value: boolean) {\n        this._findInactive = value;\n    }\n\n    protected static set lazy(value: boolean) {\n        this._lazy = value;\n    }\n\n    protected abstract awakeSingleton(): void;\n\n    protected onLoad() {\n        if (!Singleton._lazy) {\n            this.initialize();\n        }\n    }\n\n    private async initialize() {\n        const instance = await Singleton.getInstance();\n        if (instance !== this && Singleton._destroyOthers) {\n            warn(`[Singleton] Deleting extra '${this.constructor.name}' instance attached to '${this.node.name}'`);\n            this.node.destroy();\n        } else {\n            this.awakeSingleton();\n            if (Singleton._persist) {\n                director.addPersistRootNode(this.node);\n            }\n        }\n    }\n\n    protected onDestroy() {\n        if (this.applicationIsQuitting()) {\n            Singleton._lazyInstance.dispose();\n            Singleton._lazyInstance = null as any;\n        }\n    }\n\n    private applicationIsQuitting(): boolean {\n        return director.isPaused() || !isValid(this.node);\n    }\n}\n\nasync function findObjectsOfType<T extends Component>(c: T): Promise<T[]> {\n    return director.getScene().getComponentsInChildren(c as any) as T[];\n}\n\nasync function findObjectsOfTypeAll<T extends Component>(c: T): Promise<T[]> {\n    const allComponents: T[] = [];\n    const allNodes = director.getScene().children;\n    for (const node of allNodes) {\n        const components = node.getComponents<T>(c as any);\n        allComponents.push(...components);\n    }\n    return allComponents;\n}\n"]}