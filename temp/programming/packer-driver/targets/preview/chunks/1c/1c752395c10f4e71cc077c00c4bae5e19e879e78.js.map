{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-2d/assets/Scripts/Poolable/PiecesPool.ts"],"names":["_decorator","instantiate","Prefab","Poolable","PoolHelper","ccclass","property","PiecesPool","createIndex","creator","Math","floor","random","piecesPrefabs","length","obj","setParent","node","onLoad","registerPool","getPieceFromPool","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,M,OAAAA,M;;AAC1CC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;4BAGjBO,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ,CAAC,CAACJ,MAAD,CAAD,C,2BAFX,MACaK,UADb;AAAA;AAAA,gCACyC;AAAA;AAAA;;AAAA;;AAAA,eAI/BC,WAJ+B,GAIT,CAJS;AAAA;;AAO7BC,QAAAA,OAAO,GAAS;AACxB,eAAKD,WAAL,GAAmBE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKC,aAAL,CAAmBC,MAA9C,CAAnB,CADwB,CAExB;;AAEA,cAAMC,GAAG,GAAGd,WAAW,CAAC,KAAKY,aAAL,CAAmB,KAAKL,WAAxB,CAAD,CAAvB;AACAO,UAAAA,GAAG,CAACC,SAAJ,CAAc,KAAKC,IAAnB;AACA,iBAAOF,GAAP;AACH;;AAEWG,QAAAA,MAAM,GAAS;AACvB,gBAAMA,MAAN;AACA;AAAA;AAAA,wCAAWC,YAAX,CAAwBZ,UAAxB,EAAoC,IAApC;AACD;;AAEMa,QAAAA,gBAAgB,GAAS;AAC9B,cAAML,GAAG,GAAG,KAAKN,OAAL,EAAZ;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AAEA,iBAAOA,GAAP;AACD;;AA1BsC,O;;;;;iBAEL,E","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab } from \"cc\";\nimport { Poolable } from \"../../SooLib/Optimization/Poolable\";\nimport { PoolHelper } from \"../PoolHelper\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"PiecesPool\")\nexport class PiecesPool extends Poolable {\n  @property([Prefab])\n  private piecesPrefabs: Prefab[] = [];\n\n  private createIndex: number = 0;\n\n\n  protected creator(): Node {\n    this.createIndex = Math.floor(Math.random() * this.piecesPrefabs.length);\n    // this.createIndex = (this.createIndex + 1) % this.piecesPrefabs.length;\n\n    const obj = instantiate(this.piecesPrefabs[this.createIndex]);\n    obj.setParent(this.node);\n    return obj;\n}\n\n  protected onLoad(): void {\n    super.onLoad();\n    PoolHelper.registerPool(PiecesPool, this);\n  }\n\n  public getPieceFromPool(): Node {\n    const obj = this.creator();\n    console.log(obj);\n    \n    return obj;\n  }\n  \n}\n"]}