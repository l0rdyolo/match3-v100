{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GravityHandler.ts"],"names":["_decorator","Component","Vec3","ccclass","property","GravityHandler","onLoad","applyGravity","grid","moved","console","log","promises","col","length","row","node","currentPiece","emptyPiece","push","moveToPosition","Promise","all"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAG1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;gCAGjBK,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCJ,SADpC,CAC8C;AAC5CK,QAAAA,MAAM,GAAG;AACP,gBAAMA,MAAN;AACD;;AAEKC,QAAAA,YAAY,CAACC,IAAD,EAAO;AAAA;AACvB,gBAAIC,KAAK,GAAG,KAAZ;;AAEA,eAAG;AACDC,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEAF,cAAAA,KAAK,GAAG,KAAR;AACA,kBAAIG,QAAyB,GAAG,EAAhC;;AACA,mBAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAAhC,EAAwCD,GAAG,EAA3C,EAA+C;AAC7C,qBAAK,IAAIE,GAAG,GAAGP,IAAI,CAACM,MAAL,GAAc,CAA7B,EAAgCC,GAAG,IAAI,CAAvC,EAA0CA,GAAG,EAA7C,EAAiD;AAC/C,sBAAIA,GAAG,GAAG,CAAN,GAAUP,IAAI,CAACM,MAAL,GAAc,CAA5B,EAA+B;;AAC/B,sBACEN,IAAI,CAACO,GAAD,CAAJ,CAAUF,GAAV,EAAeG,IAAf,KAAwB,IAAxB,IACAR,IAAI,CAACO,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,EAAmBG,IAAnB,KAA4B,IAF9B,EAGA;AACE,wBAAMC,YAAY,GAAGT,IAAI,CAACO,GAAD,CAAJ,CAAUF,GAAV,CAArB;AACA,wBAAMK,UAAU,GAAGV,IAAI,CAACO,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,CAAnB;AACAK,oBAAAA,UAAU,CAACF,IAAX,GAAkBC,YAAY,CAACD,IAA/B;AACAC,oBAAAA,YAAY,CAACD,IAAb,GAAoB,IAApB;AACAJ,oBAAAA,QAAQ,CAACO,IAAT,CAAcD,UAAU,CAACE,cAAX,CAA0B,IAAIlB,IAAJ,CAASW,GAAT,EAAcE,GAAd,EAAmB,CAAnB,CAA1B,CAAd;AACAN,oBAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF;;AAED,oBAAMY,OAAO,CAACC,GAAR,CAAYV,QAAZ,CAAN;AACD,aAvBD,QAuBSH,KAvBT;AAHuB;AA2BxB;;AAhC2C,O","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\nimport { SingletonComponent } from \"../SingletonComponent\";\nimport { GridManager } from \"./GridManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GravityHandler\")\nexport class GravityHandler extends Component {\n  onLoad() {\n    super.onLoad();\n  }\n\n  async applyGravity(grid) {\n    let moved = false;\n\n    do {\n      console.log(\"aaa\");\n      \n      moved = false;\n      let promises: Promise<void>[] = []; \n      for (let col = 0; col < grid[0].length; col++) {\n        for (let row = grid.length - 1; row >= 0; row--) {\n          if (row + 1 > grid.length - 1) continue;\n          if (\n            grid[row][col].node !== null &&\n            grid[row + 1][col].node === null\n        ) {\n            const currentPiece = grid[row][col];\n            const emptyPiece = grid[row + 1][col];\n            emptyPiece.node = currentPiece.node;\n            currentPiece.node = null;\n            promises.push(emptyPiece.moveToPosition(new Vec3(col, row, 0)));\n            moved = true;\n          }\n        }\n      }\n\n      await Promise.all(promises);\n    } while (moved);\n  }\n}\n"]}