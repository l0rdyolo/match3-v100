{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Match/MatchStrategies/VerticalMatchStrategy.ts"],"names":["VerticalMatchStrategy","directions","dx","dy","checkMatch","pieceA","pieceB","grid","firstCheck","checkSinglePieceMatch","secondCheck","concat","piece","matches","row","col","i","node","name","push","length"],"mappings":";;;8BAIaA,qB;;;;;;;;;;;;;;;;;;;;;;;uCAAAA,qB,GAAN,MAAMA,qBAAN,CAAqD;AAAA;AAAA,eACjDC,UADiD,GACpC,CAChB;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE;AAAb,WADgB,EACE;AAClB;AAAED,YAAAA,EAAE,EAAE,CAAC,CAAP;AAAUC,YAAAA,EAAE,EAAE;AAAd,WAFgB,CAEE;AAFF,WADoC;AAAA;;AAMjDC,QAAAA,UAAU,CAACC,MAAD,EAAiBC,MAAjB,EAAkCC,IAAlC,EAAoD;AACjE,cAAMC,UAAU,GAAG,KAAKC,qBAAL,CAA2BJ,MAA3B,EAAoCE,IAApC,CAAnB;AACA,cAAIG,WAAW,GAAG,KAAKD,qBAAL,CAA2BH,MAA3B,EAAoCC,IAApC,CAAlB;AACAG,UAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBH,UAAnB,CAAd;AACA,iBAAOE,WAAP;AAAmB;AACtB;;AAEMD,QAAAA,qBAAqB,CAACG,KAAD,EAAeL,IAAf,EAA+B;AACvD;AACA,cAAMM,OAAgB,GAAG,CAACD,KAAD,CAAzB;AACA,cAAME,GAAG,GAAGF,KAAK,CAACE,GAAlB;AACA,cAAMC,GAAG,GAAGH,KAAK,CAACG,GAAlB,CAJuD,CAMvD;;AACA,eAAK,IAAIC,CAAC,GAAGF,GAAG,GAAG,CAAnB,EAAsBE,CAAC,IAAI,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AAC/B,gBAAIT,IAAI,CAACS,CAAD,CAAJ,CAAQD,GAAR,EAAaE,IAAb,CAAkBC,IAAlB,KAA2BN,KAAK,CAACK,IAAN,CAAWC,IAA1C,EAAgD;AAC5CL,cAAAA,OAAO,CAACM,IAAR,CAAaZ,IAAI,CAACS,CAAD,CAAJ,CAAQD,GAAR,CAAb;AACH,aAFD,MAEO;AACH,oBADG,CACI;AACV;AACJ,WAbsD,CAevD;;;AACA,eAAK,IAAIC,EAAC,GAAGF,GAAG,GAAG,CAAnB,EAAsBE,EAAC,GAAGT,IAAI,CAACa,MAA/B,EAAuCJ,EAAC,EAAxC,EAA4C;AACxC,gBAAIT,IAAI,CAACS,EAAD,CAAJ,CAAQD,GAAR,EAAaE,IAAb,CAAkBC,IAAlB,KAA2BN,KAAK,CAACK,IAAN,CAAWC,IAA1C,EAAgD;AAC5CL,cAAAA,OAAO,CAACM,IAAR,CAAaZ,IAAI,CAACS,EAAD,CAAJ,CAAQD,GAAR,CAAb;AACH,aAFD,MAEO;AACH,oBADG,CACI;AACV;AACJ;;AAED,iBAAOF,OAAO,CAACO,MAAR,IAAkB,CAAlB,GAAsBP,OAAtB,GAAgC,EAAvC;AACH;;AAtCuD,O","sourcesContent":["import { GridManager } from \"../../Grid/GridManager\";\nimport { Piece } from \"../../Piece/Piece\";\nimport { MatchStrategy } from \"./IMatchStrategy\";\n\nexport class VerticalMatchStrategy implements MatchStrategy {\n    public directions = [\n        { dx: 1, dy: 0 }, // Down\n        { dx: -1, dy: 0 } // Up\n    ];\n\n    public checkMatch(pieceA: Piece , pieceB : Piece , grid: Piece[][])  {\n        const firstCheck = this.checkSinglePieceMatch(pieceA , grid);\n        let secondCheck = this.checkSinglePieceMatch(pieceB , grid)\n        secondCheck = secondCheck.concat(firstCheck)\n        return secondCheck;;\n    }\n\n    public checkSinglePieceMatch(piece: Piece, grid: Piece[][]){\n        // VerticalMatchStrategy.ts\n        const matches: Piece[] = [piece];\n        const row = piece.row;\n        const col = piece.col;\n\n        // Üstteki elemanları kontrol et\n        for (let i = row - 1; i >= 0; i--) {\n            if (grid[i][col].node.name === piece.node.name) {\n                matches.push(grid[i][col]);\n            } else {\n                break; // Eşleşme kesilirse dur\n            }\n        }\n\n        // Alttaki elemanları kontrol et\n        for (let i = row + 1; i < grid.length; i++) {\n            if (grid[i][col].node.name === piece.node.name) {\n                matches.push(grid[i][col]);\n            } else {\n                break; // Eşleşme kesilirse dur\n            }\n        }\n\n        return matches.length >= 3 ? matches : [];\n    }\n}"]}