{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/MatchChecker.ts"],"names":["MatchChecker","HorizontalMatchStrategy","VerticalMatchStrategy","constructor","matchStrategies","abc","push","checkForMatches","piece","grid","console","log","matchedPieces","strategy","matches","checkMatch","length","concat"],"mappings":";;;8EAKaA,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALJC,MAAAA,uB,iBAAAA,uB;;AAEAC,MAAAA,qB,iBAAAA,qB;;;;;;;8BAGIF,Y,GAAN,MAAMA,YAAN,CAAmB;AAItBG,QAAAA,WAAW,GAAG;AAAA,eAHNC,eAGM,GAH6B,EAG7B;AAAA,eAFPC,GAEO,GAFD,EAEC;AACV,eAAKD,eAAL,CAAqBE,IAArB,CAA0B;AAAA;AAAA,mEAA1B;AACA,eAAKF,eAAL,CAAqBE,IAArB,CAA0B;AAAA;AAAA,+DAA1B;AACH;;AAEYC,QAAAA,eAAe,CAACC,KAAD,EAAeC,IAAf,EAAiC;AAAA;;AAAA;AAAC;AAC7DC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;AAEG,gBAAIC,aAAsB,GAAG,EAA7B;;AAEA,iBAAK,IAAMC,QAAX,IAAuB,KAAI,CAACT,eAA5B,EAA6C;AACzC,kBAAMU,OAAO,GAAGD,QAAQ,CAACE,UAAT,CAAoBP,KAApB,EAA2BC,IAA3B,CAAhB;;AACA,kBAAIK,OAAO,CAACE,MAAR,IAAkB,CAAtB,EAAyB;AACrBJ,gBAAAA,aAAa,GAAGA,aAAa,CAACK,MAAd,CAAqBH,OAArB,CAAhB;AACH;AACJ;;AAED,mBAAOF,aAAP;AAbyD;AAc5D;;AAvBqB,O","sourcesContent":["import { HorizontalMatchStrategy } from \"../Match/MatchStrategies/HorizontalMatchStrategy\";\r\nimport { MatchStrategy } from \"../Match/MatchStrategies/IMatchStrategy\";\r\nimport { VerticalMatchStrategy } from \"../Match/MatchStrategies/VerticalMatchStrategy\";\r\nimport { Piece } from \"../Piece/Piece\";\r\n\r\nexport class MatchChecker {\r\n    private matchStrategies: MatchStrategy[] = [];\r\n    public abc = 12;\r\n\r\n    constructor() {\r\n        this.matchStrategies.push(new HorizontalMatchStrategy());\r\n        this.matchStrategies.push(new VerticalMatchStrategy());\r\n    }\r\n\r\n    public async checkForMatches(piece: Piece, grid: Piece[][])  {//Piece[] {\r\n     console.log(\"gelmemeliydi\");\r\n     return;\r\n     \r\n        let matchedPieces: Piece[] = [];\r\n\r\n        for (const strategy of this.matchStrategies) {\r\n            const matches = strategy.checkMatch(piece, grid);\r\n            if (matches.length >= 3) {\r\n                matchedPieces = matchedPieces.concat(matches);\r\n            }\r\n        }\r\n\r\n        return matchedPieces;\r\n    }\r\n}"]}