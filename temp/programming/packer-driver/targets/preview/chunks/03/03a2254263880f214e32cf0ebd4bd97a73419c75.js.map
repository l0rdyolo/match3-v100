{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Piece/Piece.ts"],"names":["Piece","Node","ParticleSystem2D","tween","Vec3","SelectionManager","GameGlobal","constructor","row","col","node","type","canSelected","particle","spriteNode","on","EventType","TOUCH_START","onTouch","getChildByName","getComponent","getInstance","eventTarget","emit","setPosition","_row","_col","PIECE_CONTENT_SIZE","PIECE_OFFSET","piecePostion","updatePosition","newX","newY","matched","resetSystem","playOnLoad","to","scale","start","Shake","shakeAmount","duration","originalPosition","getPosition","Promise","resolve","by","position","call","Highlight","ResetScale"],"mappings":";;;kJAMaA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANJC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,gB,OAAAA,gB;AAAkCC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AAG/CC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;uBAEIN,K,GAAN,MAAMA,KAAN,CAA+B;AAS7BO,QAAAA,WAAW,CAACC,GAAD,EAAcC,GAAd,EAA2BC,IAA3B,EAAuCC,IAAvC,EAAyD;AAAA,eARpEC,WAQoE;AAAA,eAPpEJ,GAOoE,GAPtD,CAAC,CAOqD;AAAA,eANpEC,GAMoE,GANtD,CAAC,CAMqD;AAAA,eALpEC,IAKoE;AAAA,eAJpEC,IAIoE,GAJjD,IAIiD;AAAA,eAFnEE,QAEmE,GAFrC,IAEqC;AAAA,eADnEC,UACmE,GAD/C,IAC+C;AAEzE,eAAKN,GAAL,GAAWA,GAAX;AACA,eAAKC,GAAL,GAAWA,GAAX;AACA,eAAKC,IAAL,GAAYA,IAAZ;AACA,eAAKC,IAAL,GAAYA,IAAZ;AACA,eAAKC,WAAL,GAAmB,KAAnB;AACA,eAAKF,IAAL,CAAUK,EAAV,CAAad,IAAI,CAACe,SAAL,CAAeC,WAA5B,EAAyC,KAAKC,OAA9C,EAAuD,IAAvD;AACA,eAAKL,QAAL,GAAgB,KAAKH,IAAL,CAAUS,cAAV,CAAyB,UAAzB,EAAqCC,YAArC,CAAkDlB,gBAAlD,CAAhB;AACA,eAAKY,UAAL,GAAkB,KAAKJ,IAAL,CAAUS,cAAV,CAAyB,QAAzB,CAAlB;AACD;;AAEDD,QAAAA,OAAO,GAAG;AACN;AAAA;AAAA,oDAAiBG,WAAjB,GAA+BC,WAA/B,CAA2CC,IAA3C,CAAgD,gBAAhD,EAAkE,IAAlE;AACH;;AAEDC,QAAAA,WAAW,CAACC,IAAD,EAAiBC,IAAjB,EAAgC;AACzC,eAAKd,WAAL,GAAmB,IAAnB;AACA,cAAMJ,GAAG,GAAGiB,IAAI,IAAI;AAAA;AAAA,wCAAWE,kBAAX,GAAgC;AAAA;AAAA,wCAAWC,YAA/C,CAAhB;AACA,cAAMnB,GAAG,GAAEiB,IAAI,IAAI;AAAA;AAAA,wCAAWC,kBAAX,GAAgC;AAAA;AAAA,wCAAWC,YAA/C,CAAf;AACA,cAAMC,YAAY,GAAG,IAAIzB,IAAJ,CAASK,GAAT,EAAaD,GAAb,CAArB;AACA,eAAKE,IAAL,CAAUc,WAAV,CAAsBK,YAAtB;AAED;;AAEDC,QAAAA,cAAc,GAAG;AACf,eAAKlB,WAAL,GAAmB,KAAnB;AACA,cAAMmB,IAAI,GAAK,KAAKtB,GAAL,GAAW;AAAA;AAAA,wCAAWkB,kBAArC;AACA,cAAMK,IAAI,GAAK,KAAKxB,GAAL,GAAW;AAAA;AAAA,wCAAWmB,kBAArC;AACA,eAAKjB,IAAL,CAAUc,WAAV,CAAsB,IAAIpB,IAAJ,CAAS2B,IAAT,EAAeC,IAAf,EAAqB,CAArB,CAAtB;AACH;;AAIMC,QAAAA,OAAO,GAAG;AAAA;;AAAA;AACf,gBAAI,KAAI,CAACpB,QAAT,EAAmB;AACf,cAAA,KAAI,CAACA,QAAL,CAAcqB,WAAd,GADe,CACc;;;AAC7B,cAAA,KAAI,CAACrB,QAAL,CAAcsB,UAAd,GAA2B,IAA3B,CAFe,CAEkB;AACpC,aAJc,CAMf;;;AACA,gBAAI,KAAI,CAACrB,UAAT,EAAqB;AACjBX,cAAAA,KAAK,CAAC,KAAI,CAACW,UAAN,CAAL,CACKsB,EADL,CACQ,GADR,EACa;AAAEC,gBAAAA,KAAK,EAAE,IAAIjC,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf;AAAT,eADb,EAC4C;AAD5C,eAEKkC,KAFL;AAGH;AAXc;AAYhB;;AAGgBC,QAAAA,KAAK,CAACC,WAAD,EAA6BC,QAA7B,EAAqD;AAAA;;AAAA;AAAA;;AAAA,gBAApDD,WAAoD;AAApDA,cAAAA,WAAoD,GAA7B,EAA6B;AAAA;;AAAA,gBAAxBC,QAAwB;AAAxBA,cAAAA,QAAwB,GAAJ,GAAI;AAAA;;AACvE,gBAAMC,gBAAgB,kBAAG,MAAI,CAAChC,IAAR,qBAAG,YAAWiC,WAAX,EAAzB;AAEA,mBAAO,IAAIC,OAAJ,CAAmBC,OAAD,IAAa;AAClC,kBAAG,MAAI,CAACnC,IAAR,EAAa;AACXP,gBAAAA,KAAK,CAAC,MAAI,CAACO,IAAN,CAAL,CACGoC,EADH,CACML,QAAQ,GAAG,CADjB,EACoB;AAAEM,kBAAAA,QAAQ,EAAE,IAAI3C,IAAJ,CAASoC,WAAT,EAAsB,CAAtB,EAAyB,CAAzB;AAAZ,iBADpB,EAEGM,EAFH,CAEML,QAAQ,GAAG,CAFjB,EAEoB;AAAEM,kBAAAA,QAAQ,EAAE,IAAI3C,IAAJ,CAAS,CAACoC,WAAD,GAAe,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AAAZ,iBAFpB,EAGGM,EAHH,CAGML,QAAQ,GAAG,CAHjB,EAGoB;AAAEM,kBAAAA,QAAQ,EAAE,IAAI3C,IAAJ,CAASoC,WAAW,GAAG,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;AAAZ,iBAHpB,EAIGM,EAJH,CAIML,QAAQ,GAAG,CAJjB,EAIoB;AAAEM,kBAAAA,QAAQ,EAAE,IAAI3C,IAAJ,CAAS,CAACoC,WAAV,EAAuB,CAAvB,EAA0B,CAA1B;AAAZ,iBAJpB,EAKGQ,IALH,CAKQ,MAAM;AAAA;;AACR,kCAAA,MAAI,CAACtC,IAAL,kCAAWc,WAAX,CAAuBkB,gBAAvB;AACAG,kBAAAA,OAAO;AACV,iBARH,EASGP,KATH;AAUD;AACJ,aAbM,CAAP;AAHuE;AAiBxE;;AAEMW,QAAAA,SAAS,GAAE;AAChB9C,UAAAA,KAAK,CAAC,KAAKO,IAAN,CAAL,CACC0B,EADD,CACI,GADJ,EACQ;AAACC,YAAAA,KAAK,EAAG,IAAIjC,IAAJ,CAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB;AAAT,WADR,EAECkC,KAFD;AAGD;;AAEMY,QAAAA,UAAU,CAACT,QAAD,EAAyB;AAAA,cAAxBA,QAAwB;AAAxBA,YAAAA,QAAwB,GAAL,GAAK;AAAA;;AACxCtC,UAAAA,KAAK,CAAC,KAAKO,IAAN,CAAL,CACK0B,EADL,CACQK,QADR,EACkB;AAAEJ,YAAAA,KAAK,EAAE,IAAIjC,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf;AAAT,WADlB,EAEKkC,KAFL;AAGH;;AAvFqC,O","sourcesContent":["import { Node, ParticleSystem2D, SpriteRenderer, tween, Vec3 } from \"cc\";\nimport { IPiece } from \"./IPiece\";\nimport { PieceTypes } from \"./PieceTypes\";\nimport { SelectionManager } from \"../Interaction/SelectionManager\";\nimport { GameGlobal } from \"../Game/GameGlobal\";\n\nexport class Piece implements IPiece  {\n  public canSelected: boolean;\n  public row: number = -1!;\n  public col: number = -1!;\n  public node: Node;\n  public type: PieceTypes = null;\n\n  private particle : ParticleSystem2D = null;\n  private spriteNode : Node = null;\n  public constructor(row: number, col: number, node: Node, type: PieceTypes) {\n    \n    this.row = row;\n    this.col = col;\n    this.node = node;\n    this.type = type;\n    this.canSelected = false;\n    this.node.on(Node.EventType.TOUCH_START, this.onTouch, this);\n    this.particle = this.node.getChildByName(\"Particle\").getComponent(ParticleSystem2D);\n    this.spriteNode = this.node.getChildByName(\"Sprite\");\n  }\n\n  onTouch() {\n      SelectionManager.getInstance().eventTarget.emit('piece-selected', this);\n  }\n\n  setPosition(_row : number , _col : number ){\n    this.canSelected = true;\n    const row = _row * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET); \n    const col= _col * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET); \n    const piecePostion = new Vec3(col,row)\n    this.node.setPosition(piecePostion);\n    \n  }\n\n  updatePosition() {\n    this.canSelected = false;\n    const newX =  (this.col * GameGlobal.PIECE_CONTENT_SIZE);\n    const newY =  (this.row * GameGlobal.PIECE_CONTENT_SIZE);  \n    this.node.setPosition(new Vec3(newX, newY, 0));\n}\n\n\n    \n async matched() {\n  if (this.particle) {\n      this.particle.resetSystem(); // Eğer hali hazırda çalışıyorsa, sıfırlayıp yeniden başlatır\n      this.particle.playOnLoad = true; // Eğer başlatma durumu ayarlanmamışsa başlatır\n  }\n\n  // Sprite node'unun ölçeğini 0 yaparak yok et\n  if (this.spriteNode) {\n      tween(this.spriteNode)\n          .to(0.3, { scale: new Vec3(0, 0, 0) })  // 0.2 saniye içinde ölçeği 0 yap\n          .start();\n  }\n}\n\n\n    public async Shake(shakeAmount : number = 10 , duration : number = 0.3){\n    const originalPosition = this.node?.getPosition();\n\n    return new Promise<void>((resolve) => {\n        if(this.node){\n          tween(this.node)\n            .by(duration / 4, { position: new Vec3(shakeAmount, 0, 0) }) \n            .by(duration / 4, { position: new Vec3(-shakeAmount * 2, 0, 0) }) \n            .by(duration / 4, { position: new Vec3(shakeAmount * 2, 0, 0) }) \n            .by(duration / 4, { position: new Vec3(-shakeAmount, 0, 0) }) \n            .call(() => {\n                this.node?.setPosition(originalPosition); \n                resolve();\n            })\n            .start();\n        }\n    });\n  }\n\n  public Highlight(){\n    tween(this.node)\n    .to(0.1,{scale : new Vec3(1.1,1.1,1.1)})\n    .start();\n  }\n\n  public ResetScale(duration: number = 0.1) {\n    tween(this.node)\n        .to(duration, { scale: new Vec3(1, 1, 1) })\n        .start();\n}\n}\n"]}