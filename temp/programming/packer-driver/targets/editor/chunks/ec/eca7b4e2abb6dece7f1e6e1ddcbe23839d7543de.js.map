{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Effects/EffectManager.ts"],"names":["_decorator","Component","tween","Vec3","ccclass","property","EffectManager","decreaseScale","target","duration","yoyo","Promise","resolve","to","scale","ZERO","call","ONE","start","downCellPosition","position","x","y","z"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;;;;;;;;OACvC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;+BAGjBM,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb,SACmCL,SADnC,CAC6C;AACV,qBAAbM,aAAa,CAC/BC,MAD+B,EAE/BC,QAF+B,EAG/BC,IAH+B,EAIhB;AACf,iBAAO,IAAIC,OAAJ,CAAmBC,OAAD,IAAa;AACpCV,YAAAA,KAAK,CAACM,MAAD,CAAL,CACGK,EADH,CACMJ,QADN,EACgB;AAAEK,cAAAA,KAAK,EAAEX,IAAI,CAACY;AAAd,aADhB,EAEGC,IAFH,CAEQ,MAAM;AACVJ,cAAAA,OAAO;;AACP,kBAAIF,IAAJ,EAAU;AACRR,gBAAAA,KAAK,CAACM,MAAD,CAAL,CAAcK,EAAd,CAAiBJ,QAAjB,EAA2B;AAAEK,kBAAAA,KAAK,EAAEX,IAAI,CAACc;AAAd,iBAA3B,EAAgDC,KAAhD;AACD;AACF,aAPH,EAQGA,KARH;AASD,WAVM,CAAP;AAWD;;AAEmC,qBAAhBC,gBAAgB,CAClCX,MADkC,EAElCC,QAFkC,EAGnB;AACf,iBAAO,IAAIE,OAAJ,CAAmBC,OAAD,IAAa;AACpCV,YAAAA,KAAK,CAACM,MAAD,CAAL,CACGK,EADH,CACMJ,QADN,EACgB;AAAEW,cAAAA,QAAQ,EAAE,IAAIjB,IAAJ,CACtBK,MAAM,CAACY,QAAP,CAAgBC,CADM,EAEtBb,MAAM,CAACY,QAAP,CAAgBE,CAAhB,GAAoB,GAFE,EAEG;AACzBd,cAAAA,MAAM,CAACY,QAAP,CAAgBG,CAHM;AAAZ,aADhB,EAMGP,IANH,CAMQ,MAAM;AACVJ,cAAAA,OAAO;AACR,aARH,EASGM,KATH;AAUD,WAXM,CAAP;AAYD;;AAnC0C,O","sourcesContent":["import { _decorator, Component, Node, tween, Vec3 } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"EffectManager\")\nexport class EffectManager extends Component {\n  public static async decreaseScale(\n    target: Node,\n    duration: number,\n    yoyo: boolean\n  ): Promise<void> {\n    return new Promise<void>((resolve) => {\n      tween(target)\n        .to(duration, { scale: Vec3.ZERO })\n        .call(() => {\n          resolve();\n          if (yoyo) {\n            tween(target).to(duration, { scale: Vec3.ONE }).start();\n          }\n        })\n        .start();\n    });\n  }\n\n  public static async downCellPosition(\n    target: Node,\n    duration: number,\n  ): Promise<void> {\n    return new Promise<void>((resolve) => {\n      tween(target)\n        .to(duration, { position: new Vec3(\n            target.position.x,\n            target.position.y - 100, //buradaki 100'ü sprite brimi boyutuna göre almalıyız dinamik yap!!!\n            target.position.z\n        ) })\n        .call(() => {\n          resolve();\n        })\n        .start();\n    });\n  }\n\n\n}\n"]}