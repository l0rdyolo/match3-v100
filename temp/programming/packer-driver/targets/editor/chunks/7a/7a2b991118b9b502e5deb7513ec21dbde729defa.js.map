{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GridGenerator.ts"],"names":["_decorator","Component","Vec3","CCInteger","Piece","InteractionManager","PieceTypes","PiecePool","ccclass","property","GridGenerator","grid","PIECE_OFFSET","PIECE_CONTENT_SIZE","interactionManager","start","Generate","console","log","getInstance","getPiece","row","width","col","height","pieceNode","createPiece","piece","Normal","error","setParent","node","setPosition","getCenteredPosition","addChild","createsMatch","name","j","i","_j","_i"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, CCInteger } from \"cc\";\r\nimport { Piece } from \"../Piece/Piece\";\r\nimport { InteractionManager } from \"../Interaction/InteractionManager\";\r\nimport { PieceTypes } from \"../Piece/PieceTypes\";\r\nimport { PiecePool } from \"../Piece/PiecePool\";\r\nimport { SelectionManager } from \"../Interaction/SelectionManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GridManager\")\r\nexport class GridGenerator extends Component {\r\n  public grid: Piece[][] = [];\r\n\r\n  private PIECE_OFFSET: number = 5;\r\n\r\n  @property(CCInteger)\r\n  private width: number = 0;\r\n\r\n  @property(CCInteger)\r\n  private height: number = 0;\r\n\r\n  private PIECE_CONTENT_SIZE: number = 100; //dinamikleştir\r\n\r\n  private interactionManager: InteractionManager = new InteractionManager();\r\n\r\n  protected start(): void {\r\n    //!TODO: grid yerleşmesini ve content size'ı responsive yapmalıyız\r\n    // this.node.setPosition(-7*50, -500);\r\n    this.Generate();\r\n    console.log(PiecePool.getInstance().getPiece());\r\n    \r\n  }\r\n\r\n  //! todo rowlari tweenleyebiliriz\r\n  public async Generate() {\r\n    for (let row = 0; row < this.width; row++) {\r\n      this.grid[row] = []\r\n      for (let col = 0; col < this.height; col++) {\r\n        const pieceNode = this.createPiece(row, col);\r\n        console.log(pieceNode);\r\n        return\r\n        const piece = new Piece(row , col , pieceNode , PieceTypes.Normal);\r\n        this.grid[row][col] = piece;\r\n      }\r\n    }\r\n  }\r\n\r\n  //bu fonksiyon init olurken match var mı diye kontrol edip piece üretiyor.\r\n  private createPiece(row: number, col: number): Node {\r\n    let piece: Node | null;\r\n    do {\r\n        piece = PiecePool.getInstance().getPiece();\r\n        \r\n        if(!piece) {\r\n            console.error(\"Piece could not be instantiated.\");\r\n            continue;\r\n        } \r\n        piece.setParent(this.node);\r\n        piece.setPosition(this.getCenteredPosition(col, row));\r\n        this.node.addChild(piece);  \r\n    } while (this.createsMatch(piece, row, col, this.grid));\r\n    return piece!;\r\n}\r\n\r\n\r\n  private createsMatch(\r\n    piece: Node,\r\n    row: number,\r\n    col: number,\r\n    grid: Piece[][]\r\n  ): boolean {\r\n    return false;\r\n    if (\r\n      row >= 2 &&\r\n      grid[row - 1][col]?.node.name === piece.name &&\r\n      grid[row - 2][col]?.node.name === piece.name\r\n    ) {\r\n      // this.piecesPool.returnPieceToPool(piece);\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      col >= 2 &&\r\n      grid[row][col - 1]?.node.name === piece.name &&\r\n      grid[row][col - 2]?.node.name === piece.name\r\n    ) {\r\n      // this.piecesPool.returnPieceToPool(piece);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private getCenteredPosition(j: number, i: number): Vec3 {\r\n    //EVERY game board should be square matrix\r\n    const _j = j * (this.PIECE_CONTENT_SIZE + this.PIECE_OFFSET); //- ((this.PIECE_CONTENT_SIZE * 4.5))//(Math.round(this.GRID_ROW / 2))) )\r\n    const _i = i * (this.PIECE_CONTENT_SIZE + this.PIECE_OFFSET); //- ((this.PIECE_CONTENT_SIZE * 4.5))//(Math.round(this.GRID_ROW / 2))) )\r\n    return new Vec3(_j, _i);\r\n  }\r\n}\r\n"]}