{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Grid/GridGenerator.ts"],"names":["_decorator","Component","Node","Vec3","CCInteger","PiecesPool","InteractionManager","ccclass","property","GridGenerator","PIECE_CONTENT_SIZE","interactionManager","start","grid","generateGrid","i","GRID_ROW","row","j","piece","piecesPool","getPieceFromPool","_position","getCenteredPosition","console","log","setPosition","on","EventType","TOUCH_END","onPieceClicked","push","event","clickedPiece","currentTarget","getPosition","createsMatch","col","name","returnPieceToPool","_j","_i"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, systemEvent, SystemEventType, EventTouch, Vec2, CCInteger } from 'cc';\r\nimport { PiecesPool } from '../Poolable/PiecesPool';\r\nimport { InteractionManager } from '../Interaction/InteractionManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GridGenerator')\r\nexport class GridGenerator extends Component {\r\n    @property(PiecesPool)\r\n    private piecesPool: PiecesPool = null;\r\n   \r\n    private PIECE_CONTENT_SIZE: number = 100; //dinamikle≈ütir\r\n    \r\n    @property(CCInteger)\r\n    GRID_ROW: number = 0;\r\n\r\n    private interactionManager : InteractionManager = new InteractionManager();\r\n\r\n    protected start(): void {\r\n        const grid = this.generateGrid();\r\n    }\r\n\r\n    private async generateGrid() {\r\n        const grid: Node[][] = [];\r\n\r\n        for (let i = 0; i < this.GRID_ROW; i++) {\r\n            const row: Node[] = [];\r\n            for (let j = 0; j < this.GRID_ROW; j++) {\r\n                const piece = this.piecesPool.getPieceFromPool();\r\n                const _position = this.getCenteredPosition(j,i);\r\n                console.log(_position);\r\n                \r\n                piece.setPosition(_position);\r\n                // Add click event listener\r\n                piece.on(Node.EventType.TOUCH_END, this.onPieceClicked, this);\r\n\r\n                row.push(piece);\r\n            }\r\n            grid.push(row);\r\n        }\r\n\r\n        return grid;\r\n    }\r\n\r\n\r\n    private onPieceClicked(event: EventTouch) {\r\n        const clickedPiece = event.currentTarget as Node;\r\n        console.log(`Piece clicked at position: ${clickedPiece.getPosition()}`);\r\n        // Implement what happens when a piece is clicked.\r\n    }\r\n\r\n    private createsMatch(piece: Node, row: number, col: number, grid: Node[][]): boolean {\r\n        if (row >= 2 &&\r\n            grid[row - 1][col]?.name === piece.name &&\r\n            grid[row - 2][col]?.name === piece.name) {\r\n                this.piecesPool.returnPieceToPool(piece);\r\n            return true;\r\n        }\r\n\r\n        if (col >= 2 &&\r\n            grid[row][col - 1]?.name === piece.name &&\r\n            grid[row][col - 2]?.name === piece.name) {\r\n                this.piecesPool.returnPieceToPool(piece);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    private getCenteredPosition(j : number, i:number ) : Vec3{\r\n      //EVERY game board should be square matrix\r\n      const _j = (j * this.PIECE_CONTENT_SIZE)  - ((this.PIECE_CONTENT_SIZE * 2) )\r\n      const _i = (i * this.PIECE_CONTENT_SIZE)  - ((this.PIECE_CONTENT_SIZE * 2) ) \r\n      return new Vec3(_j,_i)\r\n    }\r\n}\r\n"]}