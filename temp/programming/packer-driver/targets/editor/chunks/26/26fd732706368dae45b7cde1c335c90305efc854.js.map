{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Grid/MatchChecker.ts"],"names":["_decorator","ccclass","MatchChecker","checkMatch","grid","piece","row","col","checkHorizontalMatch","checkVerticalMatch","pieceName","name","matchCount","i","length"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA;AAAF,O,GAAcD,U;;8BAGPE,Y,WADZD,OAAO,CAAC,cAAD,C,gBAAR,MACaC,YADb,CAC0B;AACE,eAAVC,UAAU,CAACC,IAAD,EAAiBC,KAAjB,EAA8BC,GAA9B,EAA2CC,GAA3C,EAAiE;AACrF,iBAAO,KAAKC,oBAAL,CAA0BJ,IAA1B,EAAgCC,KAAhC,EAAuCC,GAAvC,EAA4CC,GAA5C,KAAoD,KAAKE,kBAAL,CAAwBL,IAAxB,EAA8BC,KAA9B,EAAqCC,GAArC,EAA0CC,GAA1C,CAA3D;AACH;;AAEkC,eAApBC,oBAAoB,CAACJ,IAAD,EAAiBC,KAAjB,EAA8BC,GAA9B,EAA2CC,GAA3C,EAAiE;AAChG,gBAAMG,SAAS,GAAGL,KAAK,CAACM,IAAxB;AACA,cAAIC,UAAU,GAAG,CAAjB,CAFgG,CAIhG;;AACA,eAAK,IAAIC,CAAC,GAAGN,GAAG,GAAG,CAAnB,EAAsBM,CAAC,IAAI,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AAC/B,gBAAIT,IAAI,CAACE,GAAD,CAAJ,CAAUO,CAAV,EAAaF,IAAb,KAAsBD,SAA1B,EAAqC;AACjCE,cAAAA,UAAU;AACb,aAFD,MAEO;AACH;AACH;AACJ,WAX+F,CAahG;;;AACA,eAAK,IAAIC,CAAC,GAAGN,GAAG,GAAG,CAAnB,EAAsBM,CAAC,GAAGT,IAAI,CAACU,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAIT,IAAI,CAACE,GAAD,CAAJ,CAAUO,CAAV,EAAaF,IAAb,KAAsBD,SAA1B,EAAqC;AACjCE,cAAAA,UAAU;AACb,aAFD,MAEO;AACH;AACH;AACJ;;AAED,iBAAOA,UAAU,IAAI,CAArB;AACH;;AAEgC,eAAlBH,kBAAkB,CAACL,IAAD,EAAiBC,KAAjB,EAA8BC,GAA9B,EAA2CC,GAA3C,EAAiE;AAC9F,gBAAMG,SAAS,GAAGL,KAAK,CAACM,IAAxB;AACA,cAAIC,UAAU,GAAG,CAAjB,CAF8F,CAI9F;;AACA,eAAK,IAAIC,CAAC,GAAGP,GAAG,GAAG,CAAnB,EAAsBO,CAAC,IAAI,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AAC/B,gBAAIT,IAAI,CAACS,CAAD,CAAJ,CAAQN,GAAR,EAAaI,IAAb,KAAsBD,SAA1B,EAAqC;AACjCE,cAAAA,UAAU;AACb,aAFD,MAEO;AACH;AACH;AACJ,WAX6F,CAa9F;;;AACA,eAAK,IAAIC,CAAC,GAAGP,GAAG,GAAG,CAAnB,EAAsBO,CAAC,GAAGT,IAAI,CAACU,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAIT,IAAI,CAACS,CAAD,CAAJ,CAAQN,GAAR,EAAaI,IAAb,KAAsBD,SAA1B,EAAqC;AACjCE,cAAAA,UAAU;AACb,aAFD,MAEO;AACH;AACH;AACJ;;AAED,iBAAOA,UAAU,IAAI,CAArB;AACH;;AArDqB,O","sourcesContent":["import { _decorator, Node } from 'cc';\nconst { ccclass } = _decorator;\n\n@ccclass('MatchChecker')\nexport class MatchChecker {\n    public static checkMatch(grid: Node[][], piece: Node, row: number, col: number): boolean {\n        return this.checkHorizontalMatch(grid, piece, row, col) || this.checkVerticalMatch(grid, piece, row, col);\n    }\n\n    private static checkHorizontalMatch(grid: Node[][], piece: Node, row: number, col: number): boolean {\n        const pieceName = piece.name;\n        let matchCount = 1;\n\n        // Check left\n        for (let i = col - 1; i >= 0; i--) {\n            if (grid[row][i].name === pieceName) {\n                matchCount++;\n            } else {\n                break;\n            }\n        }\n\n        // Check right\n        for (let i = col + 1; i < grid.length; i++) {\n            if (grid[row][i].name === pieceName) {\n                matchCount++;\n            } else {\n                break;\n            }\n        }\n\n        return matchCount >= 3;\n    }\n\n    private static checkVerticalMatch(grid: Node[][], piece: Node, row: number, col: number): boolean {\n        const pieceName = piece.name;\n        let matchCount = 1;\n\n        // Check up\n        for (let i = row - 1; i >= 0; i--) {\n            if (grid[i][col].name === pieceName) {\n                matchCount++;\n            } else {\n                break;\n            }\n        }\n\n        // Check down\n        for (let i = row + 1; i < grid.length; i++) {\n            if (grid[i][col].name === pieceName) {\n                matchCount++;\n            } else {\n                break;\n            }\n        }\n\n        return matchCount >= 3;\n    }\n}\n"]}