{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Interaction/SelectionManager.ts"],"names":["_decorator","Color","EventTarget","Sprite","SingletonComponent","SliderManager","MatchChecker","GridManager","ccclass","property","SelectionManager","eventTarget","firstSelected","secondSelected","sliderManager","matchChecker","onLoad","on","onPieceSelected","init","onDestroy","off","piece","handleFirstSelection","handleSecondSelection","Highlight","applySelection","isSelectionValid","Slide","grid","getInstance","matches","checkForMatches","matched","node","getComponent","color","Shake","cancelSelection","ResetScale","rowDiff","Math","abs","row","colDiff","col"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,K,OAAAA,K;AAAkBC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,M,OAAAA,M;;AAEjDC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;kCAGjBU,gB,WADZF,OAAO,CAAC,kBAAD,C,gBAAR,MACaE,gBADb;AAAA;AAAA,oDAC2E;AAAA;AAAA;AAAA,eAClEC,WADkE,GACvC,IAAIT,WAAJ,EADuC;AAAA,eAGjEU,aAHiE,GAG1C,IAH0C;AAAA,eAIjEC,cAJiE,GAIzC,IAJyC;AAAA,eAKjEC,aALiE,GAKjC,IALiC;AAAA,eAMjEC,YANiE,GAMnC,IANmC;AAAA;;AAO/DC,QAAAA,MAAM,GAAS;AACvB,gBAAMA,MAAN;AACA,eAAKL,WAAL,CAAiBM,EAAjB,CACE,gBADF,EAEE,KAAKC,eAFP,EAGE,IAHF;AAKA,eAAKC,IAAL;AACD;;AAESA,QAAAA,IAAI,GAAS;AACrB,eAAKL,aAAL,GAAqB;AAAA;AAAA,+CAArB;AACA,eAAKC,YAAL,GAAoB;AAAA;AAAA,6CAApB;AAED;;AAESK,QAAAA,SAAS,GAAS;AAC1B,eAAKT,WAAL,CAAiBU,GAAjB,CACI,gBADJ,EAEI,KAAKH,eAFT,EAGI,IAHJ;AAKD;;AAEMA,QAAAA,eAAe,CAACI,KAAD,EAAqB;AACzC,cAAI,CAAC,KAAKV,aAAV,EAAyB;AACvB,iBAAKW,oBAAL,CAA0BD,KAA1B;AACD,WAFD,MAEO;AACL,iBAAKE,qBAAL,CAA2BF,KAA3B;AACD;AACF;;AAEDC,QAAAA,oBAAoB,CAACD,KAAD,EAAe;AACjC,eAAKV,aAAL,GAAqBU,KAArB;AACA,eAAKV,aAAL,CAAmBa,SAAnB;AACD;;AAEDD,QAAAA,qBAAqB,CAACF,KAAD,EAAe;AAClC,eAAKT,cAAL,GAAsBS,KAAtB;AACA,eAAKT,cAAL,CAAoBY,SAApB;AACA,eAAKC,cAAL;AACD;;AAEmB,cAAdA,cAAc,GAAE;AACpB,cAAG,KAAKC,gBAAL,EAAH,EAA2B;AACvB;AACA,kBAAM,KAAKb,aAAL,CAAmBc,KAAnB,CAAyB,KAAKhB,aAA9B,EAA4C,KAAKC,cAAjD,CAAN;AACA,kBAAMgB,IAAI,GAAG;AAAA;AAAA,4CAAYC,WAAZ,GAA0BD,IAAvC;AACA,kBAAME,OAAiB,GAAG,MAAM,KAAKhB,YAAL,CAAkBiB,eAAlB,CAAkC,KAAKpB,aAAvC,EAAqDiB,IAArD,CAAhC;;AACA,iBAAK,MAAMI,OAAX,IAAsBF,OAAtB,EAA+B;AAC7BE,cAAAA,OAAO,CAACC,IAAR,CAAaC,YAAb,CAA0BhC,MAA1B,EAAkCiC,KAAlC,GAA0C,IAAInC,KAAJ,CAAU,GAAV,EAAc,GAAd,EAAkB,EAAlB,CAA1C;AACD;AAEJ,WATD,MAUI;AACA,iBAAKW,aAAL,CAAmByB,KAAnB;AACH;;AACD,eAAKC,eAAL;AACD;;AAEDA,QAAAA,eAAe,GAAG;AAChB,eAAK1B,aAAL,CAAmB2B,UAAnB;AACA,eAAK1B,cAAL,CAAoB0B,UAApB;AACA,eAAK3B,aAAL,GAAqB,IAArB;AACA,eAAKC,cAAL,GAAsB,IAAtB;AACD;;AAEDc,QAAAA,gBAAgB,GAAa;AAC3B,cAAI,CAAC,KAAKf,aAAN,IAAuB,CAAC,KAAKC,cAAjC,EAAiD;AAC7C,mBAAO,KAAP;AACH;;AAED,gBAAM2B,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAK9B,aAAL,CAAmB+B,GAAnB,GAAyB,KAAK9B,cAAL,CAAoB8B,GAAtD,CAAhB;AACA,gBAAMC,OAAO,GAAGH,IAAI,CAACC,GAAL,CAAS,KAAK9B,aAAL,CAAmBiC,GAAnB,GAAyB,KAAKhC,cAAL,CAAoBgC,GAAtD,CAAhB;AAEA,iBAAQL,OAAO,KAAK,CAAZ,IAAiBI,OAAO,KAAK,CAA9B,IAAqCJ,OAAO,KAAK,CAAZ,IAAiBI,OAAO,KAAK,CAAzE;AACA,iBAAO,KAAP;AACD;;AApFwE,O","sourcesContent":["import { _decorator, Color, Component, EventTarget, Node, Sprite, SpriteFrame, SpriteRenderer } from \"cc\";\nimport { Piece } from \"../Piece/Piece\";\nimport { SingletonComponent } from \"../SingletonComponent\";\nimport { SliderManager } from \"./SliderManager\";\nimport { MatchChecker } from \"../Match/MatchChecker\";\nimport { GridManager } from \"../Grid/GridManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"SelectionManager\")\nexport class SelectionManager extends SingletonComponent<SelectionManager> {\n  public eventTarget: EventTarget = new EventTarget();\n\n  private firstSelected: Piece = null;\n  private secondSelected: Piece = null;\n  private sliderManager : SliderManager = null;\n  private matchChecker : MatchChecker = null;\n  protected onLoad(): void {\n    super.onLoad();\n    this.eventTarget.on(\n      \"piece-selected\",\n      this.onPieceSelected,\n      this\n    );\n    this.init();\n  }\n\n  protected init(): void {\n    this.sliderManager = new SliderManager();\n    this.matchChecker = new MatchChecker();\n    \n  }\n\n  protected onDestroy(): void {\n    this.eventTarget.off(\n        \"piece-selected\",\n        this.onPieceSelected,\n        this\n      );        \n  }\n\n  public onPieceSelected(piece: Piece): void {\n    if (!this.firstSelected) {\n      this.handleFirstSelection(piece);\n    } else {\n      this.handleSecondSelection(piece);\n    }\n  }\n\n  handleFirstSelection(piece: Piece) {\n    this.firstSelected = piece;\n    this.firstSelected.Highlight();\n  }\n\n  handleSecondSelection(piece: Piece) {\n    this.secondSelected = piece;\n    this.secondSelected.Highlight();\n    this.applySelection();\n  }\n\n  async applySelection(){\n    if(this.isSelectionValid()){\n        //check Matches\n        await this.sliderManager.Slide(this.firstSelected,this.secondSelected);\n        const grid = GridManager.getInstance().grid;\n        const matches : Piece[] = await this.matchChecker.checkForMatches(this.firstSelected,grid);\n        for (const matched of matches) {\n          matched.node.getComponent(Sprite).color = new Color(123,122,31)\n        }\n\n    }\n    else{\n        this.firstSelected.Shake();\n    }\n    this.cancelSelection();\n  }\n\n  cancelSelection() {\n    this.firstSelected.ResetScale();\n    this.secondSelected.ResetScale();\n    this.firstSelected = null;\n    this.secondSelected = null;\n  }\n\n  isSelectionValid() : boolean {\n    if (!this.firstSelected || !this.secondSelected) {\n        return false;\n    }\n\n    const rowDiff = Math.abs(this.firstSelected.row - this.secondSelected.row);\n    const colDiff = Math.abs(this.firstSelected.col - this.secondSelected.col);\n\n    return (rowDiff === 1 && colDiff === 0) || (rowDiff === 0 && colDiff === 1);\n    return false;\n  }\n\n\n\n}\n"]}