{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Interaction/SelectionManager.ts"],"names":["_decorator","EventTarget","SingletonComponent","SliderManager","MatchChecker","GravityHandler","GridManager","ccclass","property","SelectionManager","eventTarget","firstSelected","secondSelected","sliderManager","matchChecker","gravityHandler","onLoad","on","onPieceSelected","init","onDestroy","off","piece","handleFirstSelection","handleSecondSelection","canSelect","setSelection","cancelSelection","applySelection","isSelectionValid","Slide","matches","checkForMatches","length","getInstance","deleteMatches","applyGravity","console","log","checkForMatchesAfterGravity","Shake","rowDiff","Math","abs","row","colDiff","col"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, EventTarget, Node, Sprite, SpriteFrame, SpriteRenderer } from \"cc\";\nimport { Piece } from \"../Piece/Piece\";\nimport { SingletonComponent } from \"../SingletonComponent\";\nimport { SliderManager } from \"./SliderManager\";\nimport { MatchChecker } from \"../Match/MatchChecker\";\nimport { GravityHandler } from \"../Grid/GravityHandler\";\nimport { GridManager } from \"../Grid/GridManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"SelectionManager\")\nexport class SelectionManager extends SingletonComponent<SelectionManager> {\n  public eventTarget: EventTarget = new EventTarget();\n\n  private firstSelected: Piece = null;\n  private secondSelected: Piece = null;\n  private sliderManager : SliderManager = null;\n  private matchChecker : MatchChecker = null;\n  private gravityHandler : GravityHandler = null;\n  protected onLoad(): void {\n    super.onLoad();\n    this.eventTarget.on(\n      \"piece-selected\",\n      this.onPieceSelected,\n      this\n    );\n\n    this.init();\n  }\n\n  protected init(): void {\n    this.sliderManager = new SliderManager();\n    this.matchChecker = new MatchChecker();\n    this.gravityHandler = new GravityHandler();\n    \n  }\n\n  protected onDestroy(): void {\n    this.eventTarget.off(\n        \"piece-selected\",\n        this.onPieceSelected,\n        this\n      );        \n  }\n\n  public onPieceSelected(piece: Piece): void {\n    if (!this.firstSelected) {\n      this.handleFirstSelection(piece);\n    } else {\n      this.handleSecondSelection(piece);\n    }\n  }\n\n  handleFirstSelection(piece: Piece) {\n    if(piece.canSelect) {\n      this.firstSelected = piece.setSelection();\n    }\n    else{\n      this.cancelSelection();\n    }    \n  }\n\n  handleSecondSelection(piece: Piece) {\n    if(piece.canSelect) {\n      this.secondSelected = piece.setSelection();\n      this.applySelection();\n    }\n    else{\n      this.cancelSelection();\n    } \n  }\n\n  async applySelection() {\n    if (this.isSelectionValid()) {\n        await this.sliderManager.Slide(this.firstSelected, this.secondSelected);\n        let matches: Piece[] = await this.matchChecker.checkForMatches(this.firstSelected, this.secondSelected);\n        \n        if (matches.length > 0) {\n            // Eşleşmeleri sil ve gravity işlemini uygula\n            GridManager.getInstance().deleteMatches(matches);\n            await this.gravityHandler.applyGravity(); // Gravity işleminin tamamlanmasını bekle\n            console.log(\"önce geldi\");\n            \n            // Gravity sonrası yeni eşleşmeleri kontrol et\n            do {\n                matches = await this.matchChecker.checkForMatchesAfterGravity();\n                if (matches.length > 0) {\n                    GridManager.getInstance().deleteMatches(matches);\n                    await this.gravityHandler.applyGravity(); // Yeni gravity işlemini uygula ve bekle\n                }\n            } while (matches.length > 0);\n\n        } else {\n            // Eğer eşleşme yoksa, parçaları eski konumlarına geri kaydır\n            await this.sliderManager.Slide(this.secondSelected, this.firstSelected);\n            this.cancelSelection();\n        }\n    } else {\n        this.firstSelected.Shake();\n    }\n\n    this.cancelSelection();\n}\n\n  cancelSelection() {\n    this.firstSelected = this.firstSelected.cancelSelection();\n    this.secondSelected = this.secondSelected.cancelSelection();\n    console.log(\"reset selections \" , this.firstSelected, this.secondSelected);\n    \n  }\n\n  public isSelectionValid() : boolean {\n    if (!this.firstSelected || !this.secondSelected) {\n        return false;\n    }\n\n    const rowDiff = Math.abs(this.firstSelected.row - this.secondSelected.row);\n    const colDiff = Math.abs(this.firstSelected.col - this.secondSelected.col);\n\n    return (rowDiff === 1 && colDiff === 0) || (rowDiff === 0 && colDiff === 1);\n    return false;\n  }\n}\n\n"]}