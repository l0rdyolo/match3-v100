{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Piece/Piece.ts"],"names":["Piece","Node","ParticleSystem2D","tween","Vec3","SelectionManager","GameGlobal","constructor","row","col","node","type","m_isEmpty","isMatched","particle","spriteNode","on","EventType","TOUCH_START","onTouch","getComponentInChildren","getChildByName","init","setPosition","isEmpty","console","log","getInstance","eventTarget","emit","_row","_col","PIECE_CONTENT_SIZE","PIECE_OFFSET","piecePostion","to","position","easing","start","updatePosition","newX","newY","matched","resetSystem","playOnLoad","Promise","resolve","scale","call","clearPiece","Shake","shakeAmount","duration","originalPosition","getPosition","by","setSelection","Highlight","cancelSelection","ResetScale","moveToPosition","newPos","startPos","clone","targetPos","x","y","z","onUpdate","target","ratio","currentPos","lerp","assingPiece","off"],"mappings":"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","sourcesContent":["import { easing, Node, ParticleSystem2D, removeProperty, SpriteRenderer, tween, Vec3 } from \"cc\";\r\nimport { IPiece } from \"./IPiece\";\r\nimport { PieceTypes } from \"./PieceTypes\";\r\nimport { SelectionManager } from \"../Interaction/SelectionManager\";\r\nimport { GameGlobal } from \"../Game/GameGlobal\";\r\n\r\nexport class Piece implements IPiece {\r\n  public row: number = -1!;\r\n  public col: number = -1!;\r\n  public node: Node;\r\n  public type: PieceTypes = null;\r\n\r\n  private m_isEmpty = false;\r\n  public  isMatched: boolean = false;\r\n  private particle: ParticleSystem2D = null;\r\n  private spriteNode: Node = null;\r\n  public constructor(row: number, col: number, node: Node, type: PieceTypes) {\r\n    this.row = row;\r\n    this.col = col;\r\n    this.node = node;\r\n    this.type = type;\r\n    this.node.on(Node.EventType.TOUCH_START, this.onTouch, this);\r\n    this.m_isEmpty = false;\r\n    this.particle = this.node.getComponentInChildren(ParticleSystem2D);\r\n    this.spriteNode = this.node.getChildByName(\"Sprite\");\r\n  }\r\n\r\n  init(){\r\n    this.setPosition(this.row,this.col);\r\n  }\r\n\r\n\r\n  onTouch() {\r\n    if(this.isEmpty) return; \r\n    console.log(this.row,this.col);\r\n    \r\n    SelectionManager.getInstance().eventTarget.emit(\"piece-selected\", this);\r\n  }\r\n\r\n  public get isEmpty() : boolean{\r\n    const m_isEmpty = this.node ? false : true;\r\n    return m_isEmpty \r\n  }\r\n\r\n  setPosition(_row: number, _col: number) {\r\n    const row =\r\n      _row * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET);\r\n    const col =\r\n      _col * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET);\r\n    const piecePostion = new Vec3(col, row);\r\n    // this.node.setPosition(piecePostion);\r\n    tween(this.node)\r\n      .to(0.2, { position: piecePostion }, { easing: 'quartOut' })\r\n      .start();\r\n  }\r\n\r\n  updatePosition(row = this.row , col = this.col) {\r\n    const newX = row //* GameGlobal.PIECE_CONTENT_SIZE;\r\n    const newY = col //* GameGlobal.PIECE_CONTENT_SIZE;\r\n    this.setPosition(newX,newY);\r\n\r\n  }\r\n\r\n  async matched(): Promise<void> {\r\n    this.isMatched = true;\r\n    if (this.particle) {\r\n      this.particle.resetSystem();\r\n      this.particle.playOnLoad = true;\r\n    }\r\n    if (this.spriteNode) {\r\n      await new Promise<void>((resolve) => {\r\n        tween(this.spriteNode)\r\n          .to(0.2, { scale: new Vec3(0, 0, 0) })\r\n          .call(resolve) \r\n          .start();\r\n      });\r\n    }\r\n    this.clearPiece();\r\n  }\r\n\r\n  public async Shake(shakeAmount: number = 10, duration: number = 0.3) {\r\n    if (this.isEmpty) return;\r\n    const originalPosition = this.node?.getPosition();\r\n\r\n    return new Promise<void>((resolve) => {\r\n      if (this.node) {\r\n        tween(this.node)\r\n          .by(duration / 4, { position: new Vec3(shakeAmount, 0, 0) })\r\n          .by(duration / 4, { position: new Vec3(-shakeAmount * 2, 0, 0) })\r\n          .by(duration / 4, { position: new Vec3(shakeAmount * 2, 0, 0) })\r\n          .by(duration / 4, { position: new Vec3(-shakeAmount, 0, 0) })\r\n          .call(() => {\r\n            this.node?.setPosition(originalPosition);\r\n            resolve();\r\n          })\r\n          .start();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  public setSelection(): Piece {\r\n    this.Highlight();\r\n    return this;\r\n  }\r\n\r\n  public cancelSelection() {\r\n    this.ResetScale();\r\n    return null;\r\n  }\r\n\r\n  public Highlight(duration : number = 0.1 , scale : Vec3 = new Vec3(1.1, 1.1, 1.1)) {\r\n    tween(this.node)\r\n      .to(duration, { scale: scale } , { easing: 'expoOut' } )\r\n      .start();\r\n  }\r\n\r\n  public ResetScale(duration: number = 0.1) {\r\n    tween(this.node)\r\n      .to(duration, { scale: new Vec3(1, 1, 1) })\r\n      .start();\r\n  }\r\n\r\n  public moveToPosition(newPos: Vec3, duration: number = 0.2): Promise<void> {\r\n    return new Promise<void>((resolve) => {\r\n        const startPos = this.node.position.clone();\r\n        const targetPos = new Vec3(\r\n            newPos.x * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET),\r\n            newPos.y * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET),\r\n            newPos.z\r\n        );\r\n        tween(this.node)\r\n            .to(duration, { position: targetPos }, {\r\n                easing: 'quartOut',\r\n                onUpdate: (target: Node, ratio: number) => {\r\n                    const currentPos = new Vec3();\r\n                    Vec3.lerp(currentPos, startPos, targetPos, ratio);\r\n                    target.setPosition(currentPos);\r\n                }\r\n            })\r\n            .call(() => {\r\n                this.row = newPos.y;\r\n                this.col = newPos.x;\r\n                resolve();\r\n            })\r\n            .start();\r\n    });\r\n  }\r\n\r\n  public assingPiece(node : Node ){\r\n    this.node = node;\r\n    this.node.on(Node.EventType.TOUCH_START, this.onTouch, this);\r\n    this.particle = this.node.getComponentInChildren(ParticleSystem2D);\r\n    this.spriteNode = this.node.getChildByName(\"Sprite\");\r\n    this.isMatched = false;\r\n  }\r\n\r\n  public clearPiece() {\r\n    if (this.node) {\r\n      this.node.off(Node.EventType.TOUCH_START, this.onTouch, this);\r\n    }\r\n    this.node = null;\r\n    this.particle = null;\r\n    this.spriteNode = null;\r\n  }\r\n\r\n}\r\n"]}