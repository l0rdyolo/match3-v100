{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Grid/MatchChecker.ts"],"names":["_decorator","EffectManager","ccclass","Direction","MatchChecker","directions","dx","dy","SwapPiecePositions","pieceA","pieceB","posA","posB","gridMap","movePiece","posAData","get","posBData","set","HighlightNeighbors","piece","currentPiece","neighborPiecePosition","row","col","console","log","getPieceAtPosition","position","Array","from","entries","find","_","pos"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA;AAAF,O,GAAcF,U;;iBAEfG,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;8BAMQC,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,CAC0B;AAAA;AAAA,eAEhBC,UAFgB,GAEH,CACnB;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE;AAAb,WADmB,EACC;AACpB;AAAED,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE,CAAC;AAAd,WAFmB,EAEC;AACpB;AAAED,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE;AAAb,WAHmB,EAGC;AACpB;AAAED,YAAAA,EAAE,EAAE,CAAC,CAAP;AAAUC,YAAAA,EAAE,EAAE;AAAd,WAJmB,CAIC;AAJD,WAFG;AAAA;;AASc,qBAAlBC,kBAAkB,CACpCC,MADoC,EAEpCC,MAFoC,EAGpCC,IAHoC,EAIpCC,IAJoC,EAKpCC,OALoC,EAMpC;AACA;AAAA;AAAA,8CAAcC,SAAd,CAAwBL,MAAxB,EAAgCG,IAAhC,EAAsC,GAAtC;AACA,gBAAM;AAAA;AAAA,8CAAcE,SAAd,CAAwBJ,MAAxB,EAAgCC,IAAhC,EAAsC,GAAtC,CAAN,CAFA,CAIA;;AACA,gBAAMI,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAYP,MAAZ,CAAjB;AACA,gBAAMQ,QAAQ,GAAGJ,OAAO,CAACG,GAAR,CAAYN,MAAZ,CAAjB;AACAG,UAAAA,OAAO,CAACK,GAAR,CAAYT,MAAZ,EAAoBQ,QAApB;AACAJ,UAAAA,OAAO,CAACK,GAAR,CAAYR,MAAZ,EAAoBK,QAApB;AACD;;AAEOI,QAAAA,kBAAkB,CAACC,KAAD,EAAgBP,OAAhB,EAAiE;AACzF,eAAK,MAAM;AAACP,YAAAA,EAAD;AAAMC,YAAAA;AAAN,WAAX,IAAyB,KAAKF,UAA9B,EAAyC;AACrC,kBAAMgB,YAAY,GAAGR,OAAO,CAACG,GAAR,CAAYI,KAAZ,CAArB;AACA,kBAAME,qBAAqB,GAAI;AAAEC,cAAAA,GAAG,EAAGF,YAAY,CAACE,GAAb,GAAmBjB,EAA3B;AAAgCkB,cAAAA,GAAG,EAAEH,YAAY,CAACG,GAAb,GAAmBjB;AAAxD,aAA/B,CAFqC,CAGrC;;AACAkB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,kBAAL,CAAwBL,qBAAxB,EAAgDT,OAAhD,CAAZ;AAEH;AACF;;AAEOc,QAAAA,kBAAkB,CAACC,QAAD,EAAyCf,OAAzC,EAA6G;AAAA;;AACrI,qCAAOgB,KAAK,CAACC,IAAN,CAAWjB,OAAO,CAACkB,OAAR,EAAX,EAA8BC,IAA9B,CAAmC,CAAC,CAACC,CAAD,EAAIC,GAAJ,CAAD,KAAcA,GAAG,CAACX,GAAJ,KAAYK,QAAQ,CAACL,GAArB,IAA4BW,GAAG,CAACV,GAAJ,KAAYI,QAAQ,CAACJ,GAAlG,CAAP,qBAAO,iBAAyG,CAAzG,CAAP;AACH;;AAtCyB,O","sourcesContent":["import { _decorator, director, Node, Vec3 } from \"cc\";\nimport { EffectManager } from \"../Effects/EffectManager\";\nconst { ccclass } = _decorator;\n\nenum Direction {\n  Horizontal,\n  Vertical,\n}\n\n@ccclass(\"MatchChecker\")\nexport class MatchChecker {\n\n  private directions = [\n    { dx: 0, dy: 1 },   // Right\n    { dx: 0, dy: -1 },  // Left\n    { dx: 1, dy: 0 },   // Down\n    { dx: -1, dy: 0 }   // Up\n  ];\n\n  public static async SwapPiecePositions(\n    pieceA: Node,\n    pieceB: Node,\n    posA: Vec3,\n    posB: Vec3,\n    gridMap: Map<Node, { row: number, col: number }>\n  ) {\n    EffectManager.movePiece(pieceA, posB, 0.1);\n    await EffectManager.movePiece(pieceB, posA, 0.1);\n\n    // Update the gridMap\n    const posAData = gridMap.get(pieceA);\n    const posBData = gridMap.get(pieceB);\n    gridMap.set(pieceA, posBData);\n    gridMap.set(pieceB, posAData);\n  }\n\n  private HighlightNeighbors(piece : Node , gridMap: Map<Node, { row: number, col: number }>){\n    for( const {dx , dy } of this.directions){\n        const currentPiece = gridMap.get(piece)\n        const neighborPiecePosition  = { row:  currentPiece.row + dx , col: currentPiece.col + dy }    \n        //bla bla\n        console.log(this.getPieceAtPosition(neighborPiecePosition , gridMap));\n        \n    }\n  }\n\n  private getPieceAtPosition(position: { row: number, col: number }, gridMap: Map<Node, { row: number, col: number }>): Node | undefined {\n    return Array.from(gridMap.entries()).find(([_, pos]) => pos.row === position.row && pos.col === position.col)?.[0];\n}\n}\n"]}