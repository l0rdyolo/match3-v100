{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-2d/assets/Scripts/Grid/GridGenerator.ts"],"names":["_decorator","Component","Node","EasyLevels","InGameAssets","ccclass","property","GridGenerator","start","setNodeActive","dummyCandy","testEffects","update","deltaTime","settingNode","isActive","active","console","log","level","rows","levelData","row","col","cols","assetType","grid","anan","NodeMap","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AACvBC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;+BAGjBO,a,WADZF,OAAO,CAAC,eAAD,C,UAELC,QAAQ,CAACJ,IAAD,C,2BAFX,MACaK,aADb,SACmCN,SADnC,CAC6C;AAAA;AAAA;;AAAA;AAAA;;AAI3CO,QAAAA,KAAK,GAAG;AACN,eAAKC,aAAL,CAAmB,KAAKC,UAAxB,EAAoC,IAApC;AACA,eAAKC,WAAL;AACD;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE;;AAEpBJ,QAAAA,aAAa,CAACK,WAAD,EAAoBC,QAApB,EAAuC;AAC1DD,UAAAA,WAAW,CAACE,MAAZ,GAAqBD,QAArB;AACD;;AAEwB,cAAXJ,WAAW,GAAG;AAC1B;AACA;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAA;AAAA,wCAAWC,KAAX,CAAiB,CAAjB,EAAoBC,IAAhC;AACA,gBAAMC,SAAqB,GAAI;AAAA;AAAA,wCAAWF,KAAX,CAAiB,CAAjB,CAA/B;;AACA,eAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGD,SAAS,CAACD,IAAlC,EAAwCE,GAAG,EAA3C,EAA+C;AAC3C,iBAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGF,SAAS,CAACG,IAAlC,EAAwCD,GAAG,EAA3C,EAA+C;AAC3C,oBAAME,SAAS,GAAGJ,SAAS,CAACK,IAAV,CAAeJ,GAAf,EAAoBC,GAApB,CAAlB;AACA,oBAAMI,IAAI,GAAG;AAAA;AAAA,gDAAaC,OAAb,CAAqBC,GAArB,CAAyBJ,SAAzB,CAAb;AACAE,cAAAA,IAAI,CAACX,MAAL,GAAc,IAAd;AACH;AAEJ;AAEF;;AA7B0C,O;;;;;iBACR,I","sourcesContent":["import { _decorator, Component, Node, instantiate, Vec3 } from \"cc\";\nimport { EasyLevels } from \"../Levels/EasyLevels\";\nimport { InGameAssets } from \"../InGameAssets\";\nimport { LevelData } from \"../Levels/LevelData\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GridGenerator\")\nexport class GridGenerator extends Component {\n  @property(Node) dummyCandy: Node = null!;\n\n\n  start() {\n    this.setNodeActive(this.dummyCandy, true);\n    this.testEffects();\n  }\n\n  update(deltaTime: number) {}\n\n  private setNodeActive(settingNode: Node, isActive: boolean) {\n    settingNode.active = isActive;\n  }\n\n  private async testEffects() {\n    // EffectManager.decreaseScale(this.dummyCandy,0.2,true);\n    // EffectManager.downCellPosition(this.dummyCandy,0.3);\n    console.log(EasyLevels.level[1].rows);\n    const levelData : LevelData  = EasyLevels.level[1];\n    for (let row = 0; row < levelData.rows; row++) {\n        for (let col = 0; col < levelData.cols; col++) {\n            const assetType = levelData.grid[row][col];\n            const anan = InGameAssets.NodeMap.get(assetType);\n            anan.active = true;\n        }\n        \n    }\n    \n  }\n\n}"]}