{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/SooLib/DetectorAPI/BrowserDetector.ts"],"names":["BrowserDetector","Detector","browserRules","regex","browser","detect","detectedBrowser","find","rule","test","userAgent"],"mappings":";;;wCA6BaA,e;;;;;;;;;;;;;;;;;;AA7BJC,MAAAA,Q,iBAAAA,Q;;;;;;;AAcT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;iCACaD,e,GAAN,MAAMA,eAAN;AAAA;AAAA,gCAAgD;AAAA;AAAA;AAAA,eAM3CE,YAN2C,GAMb,CAClC;AAAEC,YAAAA,KAAK,EAAE,wBAAT;AAAmCC,YAAAA,OAAO,EAAE;AAA5C,WADkC,EAElC;AAAED,YAAAA,KAAK,EAAE,gBAAT;AAA2BC,YAAAA,OAAO,EAAE;AAApC,WAFkC,EAGlC;AAAED,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,OAAO,EAAE;AAA7B,WAHkC,EAIlC;AAAED,YAAAA,KAAK,EAAE,QAAT;AAAmBC,YAAAA,OAAO,EAAE;AAA5B,WAJkC,EAKlC;AAAED,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,OAAO,EAAE;AAA1B,WALkC,CANa;AAAA;;AAcnD;AACJ;AACA;AACA;AACA;AACA;AACIC,QAAAA,MAAM,GAAY;AACd,gBAAMC,eAAe,GAAG,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuBC,IAAI,IAAIA,IAAI,CAACL,KAAL,CAAWM,IAAX,CAAgB,KAAKC,SAArB,CAA/B,CAAxB;AACA,iBAAOJ,eAAe,GAAGA,eAAe,CAACF,OAAnB,GAA6B,SAAnD;AACH;;AAvBkD,O","sourcesContent":["import { Detector } from \"./Detector\";\nimport { Browser } from \"./types\";\n\n/**\n * Defines a rule for browser detection based on a regular expression.\n * @property {RegExp} regex - The regular expression used to identify the\n * browser in a user agent string.\n * @property {Browser} browser - The browser name identified by this rule.\n */\ninterface BrowserRule {\n    regex: RegExp;\n    browser: Browser;\n}\n\n/**\n * `BrowserDetector` extends `Detector` to identify the browser type from the\n * user agent string. It uses predefined regular expressions to match against\n * the user agent, supporting popular browsers such as Chrome, Firefox, Safari,\n * Opera, and Edge.\n *\n * Usage example:\n * ```\n * const detector = new BrowserDetector();\n * console.log(detector.detect()); // Outputs the detected browser name or\n * 'Unknown' if not detected.\n * ```\n *\n * @extends Detector<Browser>\n */\nexport class BrowserDetector extends Detector<Browser> {\n    /**\n     * Stores browser detection rules.\n     * Each rule associates a regular expression (to match user agent strings) with\n     * a browser name.\n     */\n    private browserRules: BrowserRule[] = [\n        { regex: /chrome|chromium|crios/i, browser: 'Chrome' },\n        { regex: /firefox|fxios/i, browser: 'Firefox' },\n        { regex: /safari/i, browser: 'Safari' },\n        { regex: /opr\\//i, browser: 'Opera' },\n        { regex: /edg/i, browser: 'Edge' }\n    ];\n\n    /**\n     * Detects the browser by matching the `userAgent` string against the\n     * `browserRules`.\n     * @returns {Browser} The name of the detected browser, or 'Unknown' if no match\n     * is found.\n     */\n    detect(): Browser {\n        const detectedBrowser = this.browserRules.find(rule => rule.regex.test(this.userAgent));\n        return detectedBrowser ? detectedBrowser.browser : 'Unknown';\n    }\n}\n"]}