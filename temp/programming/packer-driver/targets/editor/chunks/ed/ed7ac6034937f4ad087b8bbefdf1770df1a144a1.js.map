{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/SooLib/Util/geometry.ts"],"names":["geometry","Vec3","defaultDimensions","isObjectVisible","camera","object","dimensions","worldPosition","x","y","z","dx","dy","dz","aabb","AABB","intersect","aabbFrustumCompletelyInside","frustum"],"mappings":";;;;;;;;;;AAASA,MAAAA,Q,OAAAA,Q;AAA0BC,MAAAA,I,OAAAA,I;;;;;;;;;AAQ7BC,MAAAA,iB,GAAoB,IAAID,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,C;;iCAEbE,e,GAAkB,CAAC;AAC5BC,QAAAA,MAD4B;AAE5BC,QAAAA,MAF4B;AAG5BC,QAAAA,UAAU,GAAGJ;AAHe,OAAD,KAIQ;AACnC,cAAM;AAAEK,UAAAA,aAAa,EAAE;AAAEC,YAAAA,CAAF;AAAKC,YAAAA,CAAL;AAAQC,YAAAA;AAAR;AAAjB,YAAiCL,MAAvC;AACA,cAAM;AAAEG,UAAAA,CAAC,EAAEG,EAAL;AAASF,UAAAA,CAAC,EAAEG,EAAZ;AAAgBF,UAAAA,CAAC,EAAEG;AAAnB,YAA0BP,UAAhC;AAEA,cAAMQ,IAAI,GAAG,IAAId,QAAQ,CAACe,IAAb,CAAkBP,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,CAAb;AAEA,eAAO,CAAC,CAACb,QAAQ,CAACgB,SAAT,CAAmBC,2BAAnB,CAA+CH,IAA/C,EAAqDV,MAAM,CAACc,OAA5D,CAAT;AACH,O","sourcesContent":["import { geometry, renderer, Node, Vec3 } from \"cc\";\n\ntype ObjectVisibilityParams = {\n    camera: renderer.scene.Camera;\n    object: Node;\n    dimensions?: Vec3;\n};\n\nconst defaultDimensions = new Vec3(1, 1, 1);\n\nexport const isObjectVisible = ({\n    camera,\n    object,\n    dimensions = defaultDimensions,\n}: ObjectVisibilityParams): boolean => {\n    const { worldPosition: { x, y, z } } = object;\n    const { x: dx, y: dy, z: dz } = dimensions;\n\n    const aabb = new geometry.AABB(x, y, z, dx, dy, dz);\n\n    return !!geometry.intersect.aabbFrustumCompletelyInside(aabb, camera.frustum);\n};\n"]}