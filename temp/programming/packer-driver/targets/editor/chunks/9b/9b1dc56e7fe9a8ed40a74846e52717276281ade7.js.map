{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GravityHandler.ts"],"names":["_decorator","Component","Vec3","ccclass","property","GravityHandler","onLoad","applyGravity","grid","moved","promises","col","length","row","currentPiece","belowPiece","isEmpty","push","moveToPosition","Promise","all"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAI1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;gCAGjBK,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCJ,SADpC,CAC8C;AAC5CK,QAAAA,MAAM,GAAG;AACP,gBAAMA,MAAN;AACD,SAH2C,CAK5C;;;AACkB,cAAZC,YAAY,CAACC,IAAD,EAAO;AACvB,cAAIC,KAAK,GAAG,KAAZ;AACA,cAAIC,QAAyB,GAAG,EAAhC;;AACA,aAAG;AACDD,YAAAA,KAAK,GAAG,KAAR;;AAEA,iBAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAhC,EAAwCD,GAAG,EAA3C,EAA+C;AAC7C,mBAAK,IAAIE,GAAG,GAAGL,IAAI,CAACI,MAAL,GAAc,CAA7B,EAAgCC,GAAG,IAAI,CAAvC,EAA0CA,GAAG,EAA7C,EAAiD;AAC/C,sBAAMC,YAAY,GAAGN,IAAI,CAACK,GAAD,CAAJ,CAAUF,GAAV,CAArB;AACA,sBAAMI,UAAU,GAAGP,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,CAAnB;;AAEA,oBAAIG,YAAY,CAACE,OAAb,IAAwB,CAACD,UAAU,CAACC,OAAxC,EAAiD;AAC/CR,kBAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUF,GAAV,IAAiBI,UAAjB;AACAP,kBAAAA,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,IAAqBG,YAArB;AAEAC,kBAAAA,UAAU,CAACJ,GAAX,GAAiBG,YAAY,CAACH,GAA9B;AACAI,kBAAAA,UAAU,CAACF,GAAX,GAAiBC,YAAY,CAACD,GAA9B;AAEAH,kBAAAA,QAAQ,CAACO,IAAT,CAAcF,UAAU,CAACG,cAAX,CAA0B,IAAIhB,IAAJ,CAASS,GAAT,EAAcE,GAAd,EAAmB,CAAnB,CAA1B,CAAd;AACAJ,kBAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF;;AACD,kBAAMU,OAAO,CAACC,GAAR,CAAYV,QAAZ,CAAN;AACD,WArBD,QAqBSD,KArBT;AAsBD;;AA/B2C,O","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\r\nimport { SingletonComponent } from \"../SingletonComponent\";\r\nimport { GridManager } from \"./GridManager\";\r\nimport { Piece } from \"../Piece/Piece\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GravityHandler\")\r\nexport class GravityHandler extends Component {\r\n  onLoad() {\r\n    super.onLoad();\r\n  }\r\n\r\n  //! IDEA - burada patlÄ±yoruz\r\n  async applyGravity(grid) {\r\n    let moved = false;\r\n    let promises: Promise<void>[] = [];\r\n    do {\r\n      moved = false;\r\n\r\n      for (let col = 0; col < grid[0].length; col++) {\r\n        for (let row = grid.length - 2; row >= 0; row--) { \r\n          const currentPiece = grid[row][col];\r\n          const belowPiece = grid[row + 1][col];\r\n\r\n          if (currentPiece.isEmpty && !belowPiece.isEmpty) { \r\n            grid[row][col] = belowPiece;\r\n            grid[row + 1][col] = currentPiece;\r\n\r\n            belowPiece.col = currentPiece.col;\r\n            belowPiece.row = currentPiece.row;\r\n\r\n            promises.push(belowPiece.moveToPosition(new Vec3(col, row, 0)));\r\n            moved = true;\r\n          }\r\n        }\r\n      }\r\n      await Promise.all(promises);\r\n    } while (moved); \r\n  }\r\n}\r\n"]}