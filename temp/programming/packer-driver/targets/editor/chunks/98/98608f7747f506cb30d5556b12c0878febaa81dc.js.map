{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Interaction/InteractionManager.ts"],"names":["_decorator","Component","Vec3","MatchChecker","EffectManager","ccclass","property","InteractionManager","grid","firstSelectedPiece","secondSelectedPiece","initializeGrid","onPieceClicked","event","piece","gridMap","pieceA","pieceB","posA","getPosition","posB","diff","subtract","length","SwapPiecePositions","checkMatches","console","log","resetSelection","highlightPiece","setScale","duration","movePiece","posAData","get","posBData","set"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  EventTouch,\n  markAsWarning,\n  Node,\n  tween,\n  Vec3,\n} from \"cc\";\nimport { MatchChecker } from \"../Grid/MatchChecker\";\nimport { EffectManager } from \"../Effects/EffectManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"InteractionManager\")\nexport class InteractionManager extends Component {\n  private grid: Node[][] = [];\n  // private selectedPiece: Node | null = null;\n  private firstSelectedPiece: Node | null = null;\n  private secondSelectedPiece: Node | null = null;\n\n  public initializeGrid(grid: Node[][]) {\n    this.grid = grid;\n  }\n\n  public async onPieceClicked(\n    event: EventTouch,\n    piece: Node,\n    gridMap: Map<Node, { row: number; col: number }>\n  ) {\n    if (this.firstSelectedPiece) {\n      this.secondSelectedPiece = piece;\n\n      const pieceA = this.secondSelectedPiece;\n      const pieceB = this.firstSelectedPiece;\n\n      const posA = pieceA.getPosition();\n      const posB = pieceB.getPosition();\n\n      //burada amacım 1 birimlik değişim olmuşsa matchchecker'a gitmek\n      //bu kısmı düzenlemeliyiz!!!!\n      const diff = Vec3.subtract(new Vec3(), posA, posB);\n      if (diff.length() === 120) {\n        await this.SwapPiecePositions(pieceA, pieceB, posA, posB, gridMap);\n        if (this.checkMatches(pieceA, pieceB, gridMap)) {\n          console.log(\"grid manager handle match\");\n        } else {\n          await this.SwapPiecePositions(pieceA, pieceB, posB, posA, gridMap , 0.2);\n        }\n      }\n      this.resetSelection();\n    } else {\n      this.firstSelectedPiece = piece;\n      EffectManager.highlightPiece(piece);\n    }\n  }\n\n  private resetSelection() {\n    this.firstSelectedPiece!.setScale(1, 1, 1);\n    this.secondSelectedPiece!.setScale(1, 1, 1);\n    this.firstSelectedPiece = null;\n    this.secondSelectedPiece = null;\n  }\n\n  private async SwapPiecePositions(\n    pieceA: Node,\n    pieceB: Node,\n    posA: Vec3,\n    posB: Vec3,\n    gridMap: Map<Node, { row: number; col: number }>,\n    duration:number = 0.1\n  ) {\n    EffectManager.movePiece(pieceA, posB, duration);\n    await EffectManager.movePiece(pieceB, posA, duration);\n\n    // Update the gridMap\n    const posAData = gridMap.get(pieceA);\n    const posBData = gridMap.get(pieceB);\n    gridMap.set(pieceA, posBData);\n    gridMap.set(pieceB, posAData);\n  }\n\n  private checkMatches(\n    pieceA: Node,\n    pieceB: Node,\n    gridMap: Map<Node, { row: number; col: number }>\n  ):boolean {\n    return (\n      MatchChecker.checkMatches(pieceA, gridMap) ||\n      MatchChecker.checkMatches(pieceB, gridMap)\n    );\n  }\n}\n"]}