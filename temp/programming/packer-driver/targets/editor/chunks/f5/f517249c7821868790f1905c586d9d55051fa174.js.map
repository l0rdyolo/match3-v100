{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GravityHandler.ts"],"names":["_decorator","Component","Vec3","ccclass","property","GravityHandler","onLoad","applyGravity","grid","moved","promises","col","length","row","node","newX","newY","piece","push","moveToPosition","Promise","all"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAI1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;gCAGjBK,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCJ,SADpC,CAC8C;AAC5CK,QAAAA,MAAM,GAAG;AACP,gBAAMA,MAAN;AACD;;AAEiB,cAAZC,YAAY,CAACC,IAAD,EAAmB;AACnC,cAAIC,KAAK,GAAG,KAAZ;AACA,cAAIC,QAAyB,GAAG,EAAhC;;AAEA,aAAG;AACDD,YAAAA,KAAK,GAAG,KAAR;;AAEA,iBAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAhC,EAAwCD,GAAG,EAA3C,EAA+C;AAC7C,mBAAK,IAAIE,GAAG,GAAGL,IAAI,CAACI,MAAL,GAAc,CAA7B,EAAgCC,GAAG,IAAI,CAAvC,EAA0CA,GAAG,EAA7C,EAAiD;AAC/C,oBAAIA,GAAG,GAAG,CAAN,GAAUL,IAAI,CAACI,MAAL,GAAc,CAA5B,EAA+B;;AAC/B,oBACEJ,IAAI,CAACK,GAAD,CAAJ,CAAUF,GAAV,EAAeG,IAAf,KAAwB,IAAxB,IACAN,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,EAAmBG,IAAnB,KAA4B,IAF9B,EAGE;AACA,wBAAMC,IAAI,GAAGF,GAAG,GAAG,CAAnB;AACA,wBAAMG,IAAI,GAAGL,GAAb;AACAH,kBAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUF,GAAV,EAAeG,IAAf,GAAsBN,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,EAAmBG,IAAzC;AACAN,kBAAAA,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,EAAmBG,IAAnB,GAA0B,IAA1B;AACA,wBAAMG,KAAK,GAAGT,IAAI,CAACK,GAAD,CAAJ,CAAUF,GAAV,CAAd,CALA,CAMA;;AACAD,kBAAAA,QAAQ,CAACQ,IAAT,CAAcD,KAAK,CAACE,cAAN,CAAqB,IAAIjB,IAAJ,CAASW,GAAT,EAAcF,GAAd,EAAmB,CAAnB,CAArB,CAAd;AACAF,kBAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF;;AACD,kBAAMW,OAAO,CAACC,GAAR,CAAYX,QAAZ,CAAN;AACD,WAtBD,QAsBSD,KAtBT;AAuBD;;AAhC2C,O","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\nimport { SingletonComponent } from \"../SingletonComponent\";\nimport { GridManager } from \"./GridManager\";\nimport { Piece } from \"../Piece/Piece\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GravityHandler\")\nexport class GravityHandler extends Component {\n  onLoad() {\n    super.onLoad();\n  }\n\n  async applyGravity(grid : Piece[][]) {\n    let moved = false;\n    let promises: Promise<void>[] = [];\n\n    do {\n      moved = false;\n\n      for (let col = 0; col < grid[0].length; col++) {\n        for (let row = grid.length - 1; row >= 0; row--) {\n          if (row + 1 > grid.length - 1) continue;\n          if (\n            grid[row][col].node === null &&\n            grid[row + 1][col].node !== null\n          ) {\n            const newX = row + 1;\n            const newY = col;\n            grid[row][col].node = grid[row + 1][col].node;\n            grid[row + 1][col].node = null;\n            const piece = grid[row][col];\n            // await piece.moveToPosition(new Vec3(col, row, 0)); \n            promises.push(piece.moveToPosition(new Vec3(row, col, 0)));\n            moved = true;\n          }\n        }\n      }\n      await Promise.all(promises);\n    } while (moved);\n  }\n}\n"]}