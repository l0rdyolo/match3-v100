{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Grid/MatchChecker.ts"],"names":["_decorator","ccclass","Direction","MatchChecker","checkSurroundings","grid","row","col","direction","directions","newRow","dx","newCol","dy","isWithinBounds","neighbor","console","log","length"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA;AAAF,O,GAAcD,U;;iBAEfE,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;8BAMQC,Y,WADZF,OAAO,CAAC,cAAD,C,2BAAR,MACaE,YADb,CAC0B;AAQS,eAAjBC,iBAAiB,CAACC,IAAD,EAAiBC,GAAjB,EAA8BC,GAA9B,EAAiD;AAC5E,eAAK,MAAMC,SAAX,IAAwB,KAAKC,UAA7B,EAAyC;AACrC,kBAAMC,MAAM,GAAGJ,GAAG,GAAGE,SAAS,CAACG,EAA/B;AACA,kBAAMC,MAAM,GAAGL,GAAG,GAAGC,SAAS,CAACK,EAA/B;;AACA,gBAAI,KAAKC,cAAL,CAAoBT,IAApB,EAA0BK,MAA1B,EAAkCE,MAAlC,CAAJ,EAA+C;AAC3C,oBAAMG,QAAQ,GAAGV,IAAI,CAACK,MAAD,CAAJ,CAAaE,MAAb,CAAjB;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBP,MAAO,KAAIE,MAAO,GAApD;AACH;AACJ;AACJ;;AAE4B,eAAdE,cAAc,CAACT,IAAD,EAAiBC,GAAjB,EAA8BC,GAA9B,EAAoD;AAC7E,iBAAOD,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAGD,IAAI,CAACa,MAAvB,IAAiCX,GAAG,IAAI,CAAxC,IAA6CA,GAAG,GAAGF,IAAI,CAACC,GAAD,CAAJ,CAAUY,MAApE;AACH;;AArBqB,O,UACPT,U,GAAa,CACxB;AAAEE,QAAAA,EAAE,EAAE,CAAN;AAASE,QAAAA,EAAE,EAAE;AAAb,OADwB,EACJ;AACpB;AAAEF,QAAAA,EAAE,EAAE,CAAC,CAAP;AAAUE,QAAAA,EAAE,EAAE;AAAd,OAFwB,EAEJ;AACpB;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASE,QAAAA,EAAE,EAAE;AAAb,OAHwB,EAGJ;AACpB;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASE,QAAAA,EAAE,EAAE,CAAC;AAAd,OAJwB,CAIJ;AAJI,O","sourcesContent":["import { _decorator, buildShadowPass, Node, Vec2, Vec3 } from 'cc';\nconst { ccclass } = _decorator;\n\nenum Direction {\n    Horizontal,\n    Vertical,\n}\n\n@ccclass('MatchChecker')\nexport class MatchChecker {\n    private static directions = [\n        { dx: 2, dy: 0 },   // Sağ\n        { dx: -2, dy: 0 },  // Sol\n        { dx: 0, dy: 2 },   // Yukarı\n        { dx: 0, dy: -2 }   // Aşağı\n    ];\n\n    public static checkSurroundings(grid: Node[][], row: number, col: number): void {\n        for (const direction of this.directions) {\n            const newRow = row + direction.dx;\n            const newCol = col + direction.dy;\n            if (this.isWithinBounds(grid, newRow, newCol)) {\n                const neighbor = grid[newRow][newCol];\n                console.log(`Checking piece at [${newRow}, ${newCol}]`);\n            }\n        }\n    }\n\n    private static isWithinBounds(grid: Node[][], row: number, col: number): boolean {\n        return row >= 0 && row < grid.length && col >= 0 && col < grid[row].length;\n    }\n\n}\n"]}