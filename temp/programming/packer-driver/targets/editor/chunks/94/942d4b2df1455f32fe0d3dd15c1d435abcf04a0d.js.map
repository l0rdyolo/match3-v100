{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GravityHandler.ts"],"names":["_decorator","Component","Vec3","ccclass","property","GravityHandler","onLoad","applyGravity","grid","moved","col","length","row","node","piece","moveToPosition"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAG1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;gCAGjBK,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCJ,SADpC,CAC8C;AAC5CK,QAAAA,MAAM,GAAG;AACP,gBAAMA,MAAN;AACD;;AAEiB,cAAZC,YAAY,CAACC,IAAD,EAAO;AACvB,cAAIC,KAAK,GAAG,KAAZ;;AAEA,aAAG;AACDA,YAAAA,KAAK,GAAG,KAAR;;AAEA,iBAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,MAAhC,EAAwCD,GAAG,EAA3C,EAA+C;AAC7C,mBAAK,IAAIE,GAAG,GAAGJ,IAAI,CAACG,MAAL,GAAc,CAA7B,EAAgCC,GAAG,IAAI,CAAvC,EAA0CA,GAAG,EAA7C,EAAiD;AAC/C,oBAAIA,GAAG,GAAG,CAAN,GAAUJ,IAAI,CAACG,MAAL,GAAc,CAA5B,EAA+B;;AAC/B,oBACEH,IAAI,CAACI,GAAD,CAAJ,CAAUF,GAAV,EAAeG,IAAf,KAAwB,IAAxB,IACAL,IAAI,CAACI,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,EAAmBG,IAAnB,KAA4B,IAF9B,EAGE;AACAL,kBAAAA,IAAI,CAACI,GAAD,CAAJ,CAAUF,GAAV,EAAeG,IAAf,GAAsBL,IAAI,CAACI,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,EAAmBG,IAAzC;AACAL,kBAAAA,IAAI,CAACI,GAAG,GAAG,CAAP,CAAJ,CAAcF,GAAd,EAAmBG,IAAnB,GAA0B,IAA1B;AACA,wBAAMC,KAAK,GAAGN,IAAI,CAACI,GAAD,CAAJ,CAAUF,GAAV,CAAd;AACA,wBAAMI,KAAK,CAACC,cAAN,CAAqB,IAAIb,IAAJ,CAASQ,GAAT,EAAcE,GAAd,EAAmB,CAAnB,CAArB,CAAN;AACAH,kBAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF;AAEF,WAnBD,QAmBSA,KAnBT;AAoBD;;AA5B2C,O","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\nimport { SingletonComponent } from \"../SingletonComponent\";\nimport { GridManager } from \"./GridManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GravityHandler\")\nexport class GravityHandler extends Component {\n  onLoad() {\n    super.onLoad();\n  }\n\n  async applyGravity(grid) {\n    let moved = false;\n\n    do {\n      moved = false;\n\n      for (let col = 0; col < grid[0].length; col++) {\n        for (let row = grid.length - 1; row >= 0; row--) {\n          if (row + 1 > grid.length - 1) continue;\n          if (\n            grid[row][col].node === null &&\n            grid[row + 1][col].node !== null\n          ) {\n            grid[row][col].node = grid[row + 1][col].node;\n            grid[row + 1][col].node = null;\n            const piece = grid[row][col];\n            await piece.moveToPosition(new Vec3(col, row, 0)); \n            moved = true;\n          }\n        }\n      }\n\n    } while (moved);\n  }\n}\n"]}