{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/SooLib/Runtime/Transformation/Spawner.ts"],"names":["_decorator","Component","Poolable","ccclass","property","ObjectSpawner","repo","spawnSubject","notifySpawned","object","onNext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAHZC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;+BAQRK,a,WAIjBD,QAAQ;AAAA;AAAA,+B,YAJN,MAAeC,aAAf,SAAyDJ,SAAzD,CAAgG;AAAA;AAAA;AAAA,eACnGK,IADmG;AAAA,eAE3FC,YAF2F;;AAAA;AAAA;;AASzFC,QAAAA,aAAa,CAACC,MAAD,EAAkB;AACrC,eAAKF,YAAL,CAAkBG,MAAlB,CAAyBD,MAAzB;AACH;AAED;AACJ;AACA;;;AAfuG,O;;;;;iBAK3E,I","sourcesContent":["import { Poolable } from \"../../Optimization/Pool/Poolable\";\nimport { IObserver, Subject } from \"../Observer\";\nimport { IObjectRepository } from \"./ObjectRepository\";\nimport { _decorator, Component, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\nexport interface IObjectSpawner<T extends Poolable> {\n    repo: IObjectRepository<Node>;\n    spawn(): void;\n    // subscribeToSpawnEvents(observer: IObserver<T>): void;\n}\n\nexport abstract class ObjectSpawner<T extends Poolable> extends Component implements IObjectSpawner<T> {\n    repo: IObjectRepository<Node>;\n    private spawnSubject: Subject<T>;\n\n    @property(Poolable)\n    protected poolable: T = null;\n\n    public abstract spawn(): void;\n\n    protected notifySpawned(object: T): void {\n        this.spawnSubject.onNext(object);\n    }\n\n    /* public subscribeToSpawnEvents(observer: IObserver<T>): void {\n        this.spawnSubject.subscribe(observer);\n    } */\n}\n"]}