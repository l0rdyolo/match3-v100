{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-2d/assets/Scripts/Interaction/InteractionManager.ts"],"names":["_decorator","Component","MatchChecker","EffectManager","ccclass","property","InteractionManager","grid","firstSelectedPiece","secondSelectedPiece","initializeGrid","onPieceClicked","event","piece","pieceA","pieceB","posA","getPosition","posB","swapPositions","CheckSwapedPieces","highlightPiece","movePiece","resetSelection","setScale"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAYC,QAAAA;AAAZ,O,GAAyBL,U;;oCAGlBM,kB,WADZF,OAAO,CAAC,oBAAD,C,gBAAR,MACaE,kBADb,SACwCL,SADxC,CACkD;AAAA;AAAA;AAAA,eACtCM,IADsC,GACrB,EADqB;AAAA,eAGtCC,kBAHsC,GAGH,IAHG;AAAA,eAItCC,mBAJsC,GAIF,IAJE;AAAA;;AAOvCC,QAAAA,cAAc,CAACH,IAAD,EAAiB;AAClC,eAAKA,IAAL,GAAYA,IAAZ;AACH;;AAE0B,cAAdI,cAAc,CAACC,KAAD,EAAoBC,KAApB,EAAiC;AACxD,cAAI,KAAKL,kBAAT,EAA6B;AACzB,iBAAKC,mBAAL,GAA2BI,KAA3B;AAEA,kBAAMC,MAAM,GAAG,KAAKL,mBAApB;AACA,kBAAMM,MAAM,GAAG,KAAKP,kBAApB;AAEA,kBAAMQ,IAAI,GAAGF,MAAM,CAACG,WAAP,EAAb;AACA,kBAAMC,IAAI,GAAGH,MAAM,CAACE,WAAP,EAAb,CAPyB,CASzB;;AACA,kBAAM,KAAKE,aAAL,CAAmBL,MAAnB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCE,IAAzC,CAAN;AACA;AAAA;AAAA,8CAAaE,iBAAb,CAA+BN,MAA/B,EAAwCC,MAAxC;AACH,WAZD,MAYO;AACH,iBAAKP,kBAAL,GAA0BK,KAA1B;AACA;AAAA;AAAA,gDAAcQ,cAAd,CAA6BR,KAA7B;AACH;AACJ;;AAE0B,cAAbM,aAAa,CAACL,MAAD,EAAiBC,MAAjB,EAAgCC,IAAhC,EAA0CE,IAA1C,EAAqD;AAC5E;AAAA;AAAA,8CAAcI,SAAd,CAAwBR,MAAxB,EAAiCI,IAAjC,EAAwC,GAAxC;AACA;AAAA;AAAA,8CAAcI,SAAd,CAAwBP,MAAxB,EAAiCC,IAAjC,EAAwC,GAAxC;AACH;;AAEOO,QAAAA,cAAc,GAAE;AACpB,eAAKf,kBAAL,CAAyBgB,QAAzB,CAAkC,CAAlC,EAAoC,CAApC,EAAsC,CAAtC;AACA,eAAKf,mBAAL,CAA0Be,QAA1B,CAAmC,CAAnC,EAAqC,CAArC,EAAuC,CAAvC;AACA,eAAKhB,kBAAL,GAA0B,IAA1B;AACA,eAAKC,mBAAL,GAA2B,IAA3B;AACH;;AAxC6C,O","sourcesContent":["import { _decorator, Component, EventTouch, markAsWarning, Node, tween, Vec3 } from 'cc';\nimport { MatchChecker } from '../Grid/MatchChecker';\nimport { EffectManager } from '../Effects/EffectManager';\nconst { ccclass , property } = _decorator;\n\n@ccclass('InteractionManager')\nexport class InteractionManager extends Component {\n    private grid: Node[][] = [];\n    // private selectedPiece: Node | null = null;\n    private firstSelectedPiece : Node | null = null;\n    private secondSelectedPiece : Node | null = null;\n\n\n    public initializeGrid(grid: Node[][]) {\n        this.grid = grid;\n    }\n\n    public async onPieceClicked(event: EventTouch, piece: Node) {\n        if (this.firstSelectedPiece) {\n            this.secondSelectedPiece = piece;\n            \n            const pieceA = this.secondSelectedPiece;\n            const pieceB = this.firstSelectedPiece;\n\n            const posA = pieceA.getPosition();\n            const posB = pieceB.getPosition();\n\n            //swapHere\n            await this.swapPositions(pieceA, pieceB ,posA ,posB); \n            MatchChecker.CheckSwapedPieces(pieceA , pieceB)          \n        } else {\n            this.firstSelectedPiece = piece;\n            EffectManager.highlightPiece(piece);\n        }\n    }\n\n    private async swapPositions(pieceA : Node , pieceB : Node ,posA:Vec3,posB:Vec3 ){\n        EffectManager.movePiece(pieceA , posB , 0.1);\n        EffectManager.movePiece(pieceB , posA , 0.1);\n    }\n\n    private resetSelection(){\n        this.firstSelectedPiece!.setScale(1,1,1)\n        this.secondSelectedPiece!.setScale(1,1,1)\n        this.firstSelectedPiece = null;\n        this.secondSelectedPiece = null;\n    }\n\n}\n"]}