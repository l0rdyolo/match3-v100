{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/SooLib/Joystick/FollowJoystick.ts"],"names":["_decorator","Node","Vec3","CCInteger","CCFloat","BaseJoystick","JoystickObservable","Range","ccclass","property","FollowJoystick","joystickObservable","onTouchStart","event","canTouch","touchId","touch","getID","touchPos","canvasResolver","resolvePosition","touchStartPos","set","ring","setPosition","stick","stickStartPos","getPosition","updateStickPosition","notifyStart","getDirection","onTouchMove","followFinger","onTouchEnd","direction","notifyEnd","distance","radius","followThreshold","newPos","lerp","lerpSpeed","calculateStickPosition","subtract","position","add","subscribe","observer","next","value","complete","error"],"mappings":"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","sourcesContent":["import { _decorator, Node, EventTouch, Vec3, UITransform, CCInteger, CCFloat } from \"cc\";\nimport { BaseJoystick } from \"./BaseJoystick\";\nimport { IObservable, IObserver } from \"../Runtime/Observer\";\nimport { JoystickEvent, JoystickObservable } from \"./JoystickObservable\";\nimport { Range } from \"../Runtime/decorators\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"FollowJoystick\")\nexport class FollowJoystick extends BaseJoystick implements IObservable<JoystickEvent> {\n    @property(Node)\n    protected stick: Node = null;\n\n    @property(Node)\n    protected ring: Node = null;\n\n    private joystickObservable: JoystickObservable = new JoystickObservable();\n\n    public static canTouch: boolean = true;\n\n    @property(CCInteger)\n    private followThreshold: number = 25;\n\n    @property(CCFloat)\n    @Range(0.01, 0.25)\n    private lerpSpeed: number = 0.1;\n\n    onTouchStart(event: EventTouch) {\n        if (!FollowJoystick.canTouch) return;\n        if (this.touchId === null) {\n            const touch = event.touch;\n            this.touchId = touch.getID();\n            let touchPos = this.canvasResolver.resolvePosition(event);\n            this.touchStartPos.set(touchPos);\n\n            this.ring.setPosition(this.touchStartPos);\n            this.stick.setPosition(this.touchStartPos);\n            this.stickStartPos.set(this.stick.getPosition());\n\n            this.updateStickPosition(event);\n            this.joystickObservable.notifyStart(this.getDirection(), { ring: this.ring, stick: this.stick });\n        }\n    }\n\n    onTouchMove(event: EventTouch) {\n        if (!FollowJoystick.canTouch) return;\n        if (this.touchId !== null && event.touch.getID() === this.touchId) {\n            this.updateStickPosition(event);\n            this.followFinger(event);\n        }\n    }\n    \n    onTouchEnd(event: EventTouch) {\n        if (!FollowJoystick.canTouch) return;\n        if (event.touch.getID() === this.touchId) {\n            this.touchId = null;\n            this.direction.set(new Vec3(0, 0, 0));\n            this.joystickObservable.notifyEnd(this.getDirection(), { ring: this.ring, stick: this.stick });\n        }\n    }\n\n    getDirection(): Vec3 {\n        return this.direction;\n    }\n\n    private followFinger(event: EventTouch) {\n        let touchPos = this.canvasResolver.resolvePosition(event);\n        const distance = Vec3.distance(this.touchStartPos, touchPos);\n\n        if (distance > this.radius + this.followThreshold) {\n            const newPos = new Vec3();\n            Vec3.lerp(newPos, this.ring.getPosition(), touchPos, this.lerpSpeed);\n            const calculateStickPosition = Vec3.subtract(new Vec3(), this.stick.position, this.ring.position);\n            this.ring.setPosition(newPos);\n            this.stick.setPosition(Vec3.add(new Vec3(), newPos, calculateStickPosition));\n            this.touchStartPos.set(newPos);\n        }\n    }\n\n    ///< Observable events\n    subscribe(observer: IObserver<JoystickEvent>): void {\n        this.joystickObservable.subscribe(observer);\n    }\n\n    next(value: JoystickEvent): void {\n        this.joystickObservable.next(value);\n    }\n\n    complete(): void {\n        this.joystickObservable.complete();\n    }\n\n    error(error: Error): void {\n        this.joystickObservable.error(error);\n    }\n}\n"]}