{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GridManager.ts"],"names":["_decorator","Color","Sprite","Vec3","SingletonComponent","GridGenerator","GameGlobal","ccclass","property","GridManager","_grid","gridGenerator","gridWidth","gridHeight","gridOffset","colors","red","black","blue","yellow","grid","onLoad","start","node","getComponent","Generate","length","offsetDiff","PIECE_OFFSET","piecePositionsDiff","gridX","setPosition","SwapPieces","pieceA","pieceB","pa_row","row","pa_col","col","pb_row","pb_col","tempA","tempB","deleteMatches","matches","matchedPiece","delete","highlightGridCorners","getComponentInChildren","color"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, Node, Sprite, SpriteFrame, SpriteRenderer, Vec2, Vec3 } from 'cc';\nimport { SingletonComponent } from '../SingletonComponent';\nimport { Piece } from '../Piece/Piece';\nimport { GridGenerator } from './GridGenerator';\nimport { GameGlobal } from '../Game/GameGlobal';\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GridManager\")\nexport class GridManager extends SingletonComponent<GridManager> {\n  private _grid: Piece[][];\n\n  private gridGenerator: GridGenerator = null;\n\n  private gridWidth: number = 0;\n  public gridHeight : number = 0;\n  private gridOffset: number = 0;\n\n  private colors = {\n    red: new Color(255, 0, 0),\n    black: new Color(0, 0, 0),\n    blue: new Color(0, 0, 255),\n    yellow: new Color(255, 255, 0),\n};\n\n   get grid(){\n    return this._grid\n  }\n\n  protected onLoad(): void {\n    super.onLoad();\n  }\n\n  start() {\n    this.gridGenerator = this.node.getComponent(GridGenerator);\n    this._grid = this.gridGenerator.Generate();\n    this.gridWidth = this._grid[0].length\n    this.gridHeight = this._grid.length;\n    //! dinamik olmalı\n    const offsetDiff = (GameGlobal.PIECE_OFFSET / 2) * this.gridWidth;\n    const piecePositionsDiff = -(this.gridWidth / 2) * 100;\n\n    const gridX = piecePositionsDiff + offsetDiff;\n    this.node.setPosition(new Vec3(gridX, -200, 0));\n\n    // this.highlightGridCorners();\n  }\n\n  SwapPieces(pieceA: Piece, pieceB: Piece) {\n    // Mevcut satır ve sütunları saklayın\n    const pa_row = pieceA.row;\n    const pa_col = pieceA.col;\n\n    const pb_row = pieceB.row;\n    const pb_col = pieceB.col;\n\n    // Parçaların satır ve sütun bilgilerini güncelleyin\n    pieceA.row = pb_row;\n    pieceA.col = pb_col;\n\n    pieceB.row = pa_row;\n    pieceB.col = pa_col;\n\n    // Grid'deki yerleri geçici olarak saklayın\n    const tempA = this.grid[pa_row][pa_col];\n    const tempB = this.grid[pb_row][pb_col];\n\n    // Grid'i yeni pozisyonlara göre güncelleyin\n    this.grid[pa_row][pa_col] = tempB;\n    this.grid[pb_row][pb_col] = tempA;\n\n  }\n\n  deleteMatches(matches : Piece[]){\n    for (const matchedPiece of matches) {\n      matchedPiece.delete()\n    }\n  }\n\n  highlightGridCorners(){\n    this._grid[0][0].node.getComponentInChildren(Sprite).color = this.colors.black;\n    this._grid[this.gridHeight - 1][0].node.getComponentInChildren(Sprite).color = this.colors.yellow;\n    this._grid[0][this.gridWidth - 1].node.getComponentInChildren(Sprite).color = this.colors.blue;\n    this._grid[this.gridHeight - 1][this.gridWidth - 1].node.getComponentInChildren(Sprite).color = this.colors.red;\n  }\n\n}"]}