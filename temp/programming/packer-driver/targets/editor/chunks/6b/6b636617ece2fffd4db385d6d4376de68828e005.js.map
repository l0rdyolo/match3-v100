{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GridManager.ts"],"names":["_decorator","Color","Sprite","Vec3","SingletonComponent","GridGenerator","GameGlobal","SliderManager","MatchChecker","GravityHandler","ccclass","property","GridManager","_grid","gridGenerator","gridWidth","gridHeight","gridOffset","colors","red","black","blue","yellow","sliderManager","matchChecker","gravityHandler","grid","onLoad","init","start","node","getComponent","Generate","length","offsetDiff","PIECE_OFFSET","piecePositionsDiff","gridX","setPosition","SwapPieces","pieceA","pieceB","pa_row","row","pa_col","col","pb_row","pb_col","tempA","tempB","deleteMatches","matches","matchedPiece","delete","highlightGridCorners","getComponentInChildren","color","handleSelection","Slide","checkForMatches","applyGravity"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, Node, Sprite, SpriteFrame, SpriteRenderer, Vec2, Vec3 } from 'cc';\nimport { SingletonComponent } from '../SingletonComponent';\nimport { Piece } from '../Piece/Piece';\nimport { GridGenerator } from './GridGenerator';\nimport { GameGlobal } from '../Game/GameGlobal';\nimport { SliderManager } from '../Interaction/SliderManager';\nimport { MatchChecker } from '../Match/MatchChecker';\nimport { GravityHandler } from './GravityHandler';\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GridManager\")\nexport class GridManager extends SingletonComponent<GridManager> {\n  private _grid: Piece[][];\n\n  private gridGenerator: GridGenerator = null;\n\n  private gridWidth: number = 0;\n  public gridHeight : number = 0;\n  private gridOffset: number = 0;\n\n  private colors = {\n    red: new Color(255, 0, 0),\n    black: new Color(0, 0, 0),\n    blue: new Color(0, 0, 255),\n    yellow: new Color(255, 255, 0),\n};\n\n   get grid(){\n    return this._grid\n  }\n\n  protected onLoad(): void {\n    super.onLoad();\n  }\n  private sliderManager : SliderManager = null;\n  private matchChecker : MatchChecker = null;\n  private gravityHandler : GravityHandler = null;\n\n\n  protected init(): void {\n    this.sliderManager = new SliderManager();\n    this.matchChecker = new MatchChecker();\n    this.gravityHandler = new GravityHandler();\n    \n  }\n\n  start() {\n    this.gridGenerator = this.node.getComponent(GridGenerator);\n    this._grid = this.gridGenerator.Generate();\n    this.gridWidth = this._grid[0].length\n    this.gridHeight = this._grid.length;\n    //! dinamik olmalı\n    const offsetDiff = (GameGlobal.PIECE_OFFSET / 2) * this.gridWidth;\n    const piecePositionsDiff = -(this.gridWidth / 2) * 100;\n\n    const gridX = piecePositionsDiff + offsetDiff;\n    this.node.setPosition(new Vec3(gridX, -200, 0));\n    // this.highlightGridCorners();\n  }\n\n  SwapPieces(pieceA: Piece, pieceB: Piece) {\n    const pa_row = pieceA.row;\n    const pa_col = pieceA.col;\n\n    const pb_row = pieceB.row;\n    const pb_col = pieceB.col;\n\n    pieceA.row = pb_row;\n    pieceA.col = pb_col;\n\n    pieceB.row = pa_row;\n    pieceB.col = pa_col;\n\n    const tempA = this.grid[pa_row][pa_col];\n    const tempB = this.grid[pb_row][pb_col];\n\n    this.grid[pa_row][pa_col] = tempB;\n    this.grid[pb_row][pb_col] = tempA;\n  }\n\n  deleteMatches(matches : Piece[]){\n    for (const matchedPiece of matches) {\n      matchedPiece.delete()\n    }\n  }\n\n  highlightGridCorners(){\n    this._grid[0][0].node.getComponentInChildren(Sprite).color = this.colors.black;\n    this._grid[this.gridHeight - 1][0].node.getComponentInChildren(Sprite).color = this.colors.yellow;\n    this._grid[0][this.gridWidth - 1].node.getComponentInChildren(Sprite).color = this.colors.blue;\n    this._grid[this.gridHeight - 1][this.gridWidth - 1].node.getComponentInChildren(Sprite).color = this.colors.red;\n  }\n\n  async handleSelection(pieceA : Piece , pieceB : Piece){\n    await this.sliderManager.Slide(pieceA, pieceB);\n    let matches: Piece[] = await this.matchChecker.checkForMatches(pieceA, pieceB);\n    \n    if (matches.length > 0) {\n        // Eşleşmeleri sil ve gravity işlemini uygula\n        this.deleteMatches(matches);\n        await this.gravityHandler.applyGravity(); // Gravity işleminin tamamlanmasını bekle\n        // // Gravity sonrası yeni eşleşmeleri kontrol et\n        // do {\n        //     matches = await this.matchChecker.checkForMatchesAfterGravity();\n        //     if (matches.length > 0) {\n        //         GridManager.getInstance().deleteMatches(matches);\n        //         await this.gravityHandler.applyGravity(); // Yeni gravity işlemini uygula ve bekle\n        //     }\n        // } while (matches.length > 0);\n\n    } else {\n        await this.sliderManager.Slide(pieceA, pieceB);\n    }\n  }\n\n}"]}