{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Piece/Piece.ts"],"names":["Piece","Node","ParticleSystem2D","tween","Vec3","SelectionManager","GameGlobal","constructor","row","col","node","type","canSelected","particle","spriteNode","on","EventType","TOUCH_START","onTouch","getComponentInChildren","getChildByName","getInstance","eventTarget","emit","setPosition","_row","_col","PIECE_CONTENT_SIZE","PIECE_OFFSET","piecePostion","updatePosition","newX","newY","matched","resetSystem","playOnLoad","Promise","resolve","to","scale","call","start","Shake","shakeAmount","duration","originalPosition","getPosition","by","position","setSelection","Highlight","cancelSelection","ResetScale"],"mappings":"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","sourcesContent":["import { Node, ParticleSystem2D, SpriteRenderer, tween, Vec3 } from \"cc\";\nimport { IPiece } from \"./IPiece\";\nimport { PieceTypes } from \"./PieceTypes\";\nimport { SelectionManager } from \"../Interaction/SelectionManager\";\nimport { GameGlobal } from \"../Game/GameGlobal\";\n\nexport class Piece implements IPiece {\n  public canSelected: boolean;\n  public row: number = -1!;\n  public col: number = -1!;\n  public node: Node;\n  public type: PieceTypes = null;\n\n  private particle: ParticleSystem2D = null;\n  private spriteNode: Node = null;\n  public constructor(row: number, col: number, node: Node, type: PieceTypes) {\n    this.row = row;\n    this.col = col;\n    this.node = node;\n    this.type = type;\n    this.canSelected = false;\n    this.node.on(Node.EventType.TOUCH_START, this.onTouch, this);\n    this.particle = this.node.getComponentInChildren(ParticleSystem2D);\n    this.spriteNode = this.node.getChildByName(\"Sprite\");\n  }\n\n  onTouch() {\n    SelectionManager.getInstance().eventTarget.emit(\"piece-selected\", this);\n  }\n\n  setPosition(_row: number, _col: number) {\n    this.canSelected = true;\n    const row =\n      _row * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET);\n    const col =\n      _col * (GameGlobal.PIECE_CONTENT_SIZE + GameGlobal.PIECE_OFFSET);\n    const piecePostion = new Vec3(col, row);\n    this.node.setPosition(piecePostion);\n  }\n\n  updatePosition() {\n    this.canSelected = false;\n    const newX = this.col * GameGlobal.PIECE_CONTENT_SIZE;\n    const newY = this.row * GameGlobal.PIECE_CONTENT_SIZE;\n    this.node.setPosition(new Vec3(newX, newY, 0));\n  }\n\n  async matched(): Promise<void> {\n    if (this.particle) {\n      this.particle.resetSystem();\n      this.particle.playOnLoad = true;\n    }\n\n    if (this.spriteNode) {\n      await new Promise<void>((resolve) => {\n        tween(this.spriteNode)\n          .to(0.4, { scale: new Vec3(0, 0, 0) })\n          .call(resolve) // Tween bittiğinde Promise'i çöz\n          .start();\n      });\n    }\n\n    this.canSelected = false;\n  }\n\n  public async Shake(shakeAmount: number = 10, duration: number = 0.3) {\n    if (!this.canSelected) return;\n    const originalPosition = this.node?.getPosition();\n\n    return new Promise<void>((resolve) => {\n      if (this.node) {\n        tween(this.node)\n          .by(duration / 4, { position: new Vec3(shakeAmount, 0, 0) })\n          .by(duration / 4, { position: new Vec3(-shakeAmount * 2, 0, 0) })\n          .by(duration / 4, { position: new Vec3(shakeAmount * 2, 0, 0) })\n          .by(duration / 4, { position: new Vec3(-shakeAmount, 0, 0) })\n          .call(() => {\n            this.node?.setPosition(originalPosition);\n            resolve();\n          })\n          .start();\n      }\n    });\n  }\n\n  public setSelection(): Piece {\n    this.Highlight();\n    return this;\n  }\n  public cancelSelection() {\n    this.ResetScale();\n    return null;\n  }\n\n  public Highlight() {\n    tween(this.node)\n      .to(0.1, { scale: new Vec3(1.1, 1.1, 1.1) })\n      .start();\n  }\n\n  public ResetScale(duration: number = 0.1) {\n    if (!this.canSelected) return;\n    tween(this.node)\n      .to(duration, { scale: new Vec3(1, 1, 1) })\n      .start();\n  }\n}\n"]}