{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Masa%C3%BCst%C3%BC/match3-v100/assets/SooLib/Optimization/ObjectPooling.ts"],"names":["ObjectPooling","size","objectQueue","length","constructor","createObject","initObject","recycleObject","values","initialSize","maxSize","onObjectAcquired","Error","value","push","get","obj","shift","forEach","callback","release","indexOf","addOnObjectAcquiredListener","removeOnObjectAcquiredListener","filter","listener","clear"],"mappings":";;;kEAOaA,a;;;;;;;;;;;;;;;;;+BAAAA,a,GAAN,MAAMA,aAAN,CAA0E;AASrE,YAAJC,IAAI,GAAW;AACf,iBAAO,KAAKC,WAAL,CAAiBC,MAAxB;AACH;;AAEDC,QAAAA,WAAW,CACPC,YADO,EAEPC,UAFO,EAGPC,aAHO,EAIPC,MAJO,EAKPC,WAAmB,GAAG,EALf,EAMPC,OAAe,GAAG,IANX,EAOT;AAAA,eAnBML,YAmBN;AAAA,eAlBMC,UAkBN;AAAA,eAjBMC,aAiBN;AAAA,eAfMI,gBAeN,GAf+C,EAe/C;AAAA,eAdMT,WAcN,GAdyB,EAczB;AAAA,eAZMQ,OAYN;;AACE,cAAI,CAACL,YAAL,EAAmB;AACf,kBAAM,IAAIO,KAAJ,CAAU,iCAAV,CAAN;AACH;;AAED,cAAIH,WAAW,GAAG,CAAlB,EAAqB;AACjB,kBAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;AACH;;AAED,eAAKP,YAAL,GAAoBA,YAApB;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKG,OAAL,GAAeA,OAAf;;AAEA,cAAIF,MAAJ,EAAY;AACR,iBAAK,IAAIK,KAAT,IAAkBL,MAAlB,EAA0B;AACtB,mBAAKN,WAAL,CAAiBY,IAAjB,CAAsBD,KAAtB;AACH;AACJ;AACJ;;AAEME,QAAAA,GAAG,GAAM;AAAA;;AACZ,cAAIC,GAAJ;;AAEA,cAAI,KAAKd,WAAL,CAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AAC/Ba,YAAAA,GAAG,GAAG,KAAKX,YAAL,EAAN;AACH,WAFD,MAEO;AACHW,YAAAA,GAAG,GAAG,KAAKd,WAAL,CAAiBe,KAAjB,EAAN;AACH;;AAED,mCAAKX,UAAL,iDAAkBU,GAAlB;AACA,eAAKL,gBAAL,CAAsBO,OAAtB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACH,GAAD,CAAlD;AACA,iBAAOA,GAAP;AACH;;AAEMI,QAAAA,OAAO,CAACJ,GAAD,EAAe;AAAA;;AACzB,cAAI,CAACA,GAAL,EAAU;AACN,kBAAM,IAAIJ,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,cAAI,KAAKV,WAAL,CAAiBmB,OAAjB,CAAyBL,GAAzB,MAAkC,CAAC,CAAvC,EAA0C;AACtC,kBAAM,IAAIJ,KAAJ,CAAU,wFAAV,CAAN;AACH;;AAED,cAAI,KAAKX,IAAL,GAAY,KAAKS,OAArB,EAA8B;AAC1B,iBAAKR,WAAL,CAAiBY,IAAjB,CAAsBE,GAAtB;AACH;;AAED,sCAAKT,aAAL,oDAAqBS,GAArB;AACH;;AAEMM,QAAAA,2BAA2B,CAACH,QAAD,EAAmC;AACjE,eAAKR,gBAAL,CAAsBG,IAAtB,CAA2BK,QAA3B;AACH;;AAEMI,QAAAA,8BAA8B,CAACJ,QAAD,EAAmC;AACpE,eAAKR,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBa,MAAtB,CAA6BC,QAAQ,IAAIA,QAAQ,KAAKN,QAAtD,CAAxB;AACH;;AAEMO,QAAAA,KAAK,GAAS;AACjB,eAAKxB,WAAL,CAAiBC,MAAjB,GAA0B,CAA1B;AACH;;AAjF4E,O","sourcesContent":["import { Component, Node } from \"cc\";\n\nexport interface IObjectPool<T extends Component | Node> {\n    get(): T;\n    release(element: T): void;\n}\n\nexport class ObjectPooling<T extends Component | Node> implements IObjectPool<T> {\n    private createObject: () => T;\n    private initObject?: (obj: T) => void;\n    private recycleObject?: (obj: T) => void;\n\n    private onObjectAcquired: ((obj: T) => void)[] = [];\n    private objectQueue: T[] = [];\n\n    private maxSize: number;\n    get size(): number {\n        return this.objectQueue.length;\n    }\n\n    constructor(\n        createObject: () => T,\n        initObject?: (obj: T) => void,\n        recycleObject?: (obj: T) => void,\n        values?: T[],\n        initialSize: number = 10,\n        maxSize: number = 1000\n    ) {\n        if (!createObject) {\n            throw new Error(\"The createObject cannot be null\");\n        }\n\n        if (initialSize < 0) {\n            throw new Error(\"The initialSize cannot be negative\");\n        }\n\n        this.createObject = createObject;\n        this.initObject = initObject;\n        this.recycleObject = recycleObject;\n        this.maxSize = maxSize;\n\n        if (values) {\n            for (let value of values) {\n                this.objectQueue.push(value);\n            }\n        }\n    }\n\n    public get(): T {\n        let obj: T;\n\n        if (this.objectQueue.length === 0) {\n            obj = this.createObject();\n        } else {\n            obj = this.objectQueue.shift()!;\n        }\n\n        this.initObject?.(obj);\n        this.onObjectAcquired.forEach(callback => callback(obj));\n        return obj;\n    }\n\n    public release(obj: T): void {\n        if (!obj) {\n            throw new Error(\"Object cannot be null\");\n        }\n\n        if (this.objectQueue.indexOf(obj) !== -1) {\n            throw new Error(\"Problem while releasing object: Element which you want to release is already released.\");\n        }\n\n        if (this.size < this.maxSize) {\n            this.objectQueue.push(obj);\n        }\n\n        this.recycleObject?.(obj);\n    }\n\n    public addOnObjectAcquiredListener(callback: (obj: T) => void): void {\n        this.onObjectAcquired.push(callback);\n    }\n\n    public removeOnObjectAcquiredListener(callback: (obj: T) => void): void {\n        this.onObjectAcquired = this.onObjectAcquired.filter(listener => listener !== callback);\n    }\n\n    public clear(): void {\n        this.objectQueue.length = 0;\n    }\n}\n"]}