{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Match/MatchStrategies/HorizontalMatchStrategy.ts"],"names":["HorizontalMatchStrategy","directions","dx","dy","checkMatch","piece","grid","matchedPieces","row","col","direction","currentRow","currentCol","length","currentPiece","node","name","push"],"mappings":";;;8BAIaA,uB;;;;;;;;;;;;;;;;;;;;;;;yCAAAA,uB,GAAN,MAAMA,uBAAN,CAAuD;AAAA;AAAA,eACnDC,UADmD,GACtC,CAChB;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE;AAAb,WADgB,EACE;AAClB;AAAED,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE,CAAC;AAAd,WAFgB,CAEE;AAFF,WADsC;AAAA;;AAMnDC,QAAAA,UAAU,CAACC,KAAD,EAAeC,IAAf,EAAyC;AACtD,gBAAMC,aAAsB,GAAG,EAA/B;AACA,gBAAM;AAAEC,YAAAA,GAAF;AAAOC,YAAAA;AAAP,cAAeJ,KAArB;;AAEA,eAAK,MAAMK,SAAX,IAAwB,KAAKT,UAA7B,EAAyC;AACrC,gBAAIU,UAAU,GAAGH,GAAjB;AACA,gBAAII,UAAU,GAAGH,GAAG,GAAGC,SAAS,CAACP,EAAjC;;AAEA,mBAAOS,UAAU,IAAI,CAAd,IAAmBA,UAAU,GAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQO,MAA/C,EAAuD;AACnD,oBAAMC,YAAY,GAAGR,IAAI,CAACK,UAAD,CAAJ,CAAiBC,UAAjB,CAArB;;AACA,kBAAIE,YAAY,IAAIA,YAAY,CAACC,IAAb,CAAkBC,IAAlB,KAA2BX,KAAK,CAACU,IAAN,CAAWC,IAA1D,EAAgE;AAC5DT,gBAAAA,aAAa,CAACU,IAAd,CAAmBH,YAAnB;AACH,eAFD,MAEO;AACH;AACH;;AACDF,cAAAA,UAAU,IAAIF,SAAS,CAACP,EAAxB;AACH;AACJ;;AAED,cAAII,aAAa,CAACM,MAAd,IAAwB,CAA5B,EAA+B;AAC3BN,YAAAA,aAAa,CAACU,IAAd,CAAmBZ,KAAnB;AACH;;AAED,iBAAOE,aAAP;AACH;;AA9ByD,O","sourcesContent":["import { Piece } from \"../../Piece/Piece\";\nimport { MatchChecker } from \"../MatchChecker\";\nimport { MatchStrategy } from \"./IMatchStrategy\";\n\nexport class HorizontalMatchStrategy implements MatchStrategy {\n    public directions = [\n        { dx: 0, dy: 1 }, // Right\n        { dx: 0, dy: -1 } // Left\n    ];\n\n    public checkMatch(piece: Piece, grid: Piece[][]): Piece[] {\n        const matchedPieces: Piece[] = [];\n        const { row, col } = piece;\n\n        for (const direction of this.directions) {\n            let currentRow = row;\n            let currentCol = col + direction.dy;\n\n            while (currentCol >= 0 && currentCol < grid[0].length) {\n                const currentPiece = grid[currentRow][currentCol];\n                if (currentPiece && currentPiece.node.name === piece.node.name) {\n                    matchedPieces.push(currentPiece);\n                } else {\n                    break;\n                }\n                currentCol += direction.dy;\n            }\n        }\n\n        if (matchedPieces.length >= 2) {\n            matchedPieces.push(piece);\n        }\n\n        return matchedPieces;\n    }\n}"]}