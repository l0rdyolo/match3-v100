{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/match3-v100/assets/Scripts/Grid/GravityHandler.ts"],"names":["_decorator","Component","ccclass","property","GravityHandler","onLoad","applyGravity","grid","moved","promises","emptyPieces","col","length","row","currentPiece","belowPiece","isEmpty","targetRow","targetCol","push","updatePosition","node","indexOf","console","log","Promise","all"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OAEf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;gCAGjBI,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb,SACoCH,SADpC,CAC8C;AAC5CI,QAAAA,MAAM,GAAG;AACP,gBAAMA,MAAN;AACD;;AAEiB,cAAZC,YAAY,CAACC,IAAD,EAAO;AACvB,cAAIC,KAAK,GAAG,KAAZ;AACA,cAAIC,QAAyB,GAAG,EAAhC;AACA,cAAIC,WAAqB,GAAG,EAA5B;;AAEA,aAAG;AACDF,YAAAA,KAAK,GAAG,KAAR;;AAEA,iBAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,MAAhC,EAAwCD,GAAG,EAA3C,EAA+C;AAC7C,mBAAK,IAAIE,GAAG,GAAGN,IAAI,CAACK,MAAL,GAAc,CAA7B,EAAgCC,GAAG,IAAI,CAAvC,EAA0CA,GAAG,EAA7C,EAAiD;AAC/C,sBAAMC,YAAY,GAAGP,IAAI,CAACM,GAAD,CAAJ,CAAUF,GAAV,CAArB;AACA,sBAAMI,UAAU,GAAGR,IAAI,CAACM,GAAG,GAAE,CAAN,CAAJ,CAAaF,GAAb,CAAnB;;AAEA,oBAAII,UAAU,CAACC,OAAX,IAAsB,CAACF,YAAY,CAACE,OAAxC,EAAiD;AAC/C,wBAAMC,SAAS,GAAGJ,GAAG,GAAG,CAAxB;AACA,wBAAMK,SAAS,GAAGP,GAAlB;AAEAF,kBAAAA,QAAQ,CAACU,IAAT,CAAcL,YAAY,CAACM,cAAb,CAA4BL,UAAU,CAACF,GAAvC,EAA2CE,UAAU,CAACJ,GAAtD,CAAd,EAJ+C,CAM/C;;AACAI,kBAAAA,UAAU,CAACM,IAAX,GAAkBP,YAAY,CAACO,IAA/B;AACAP,kBAAAA,YAAY,CAACO,IAAb,GAAoB,IAApB;;AACA,sBAAGX,WAAW,CAACY,OAAZ,CAAoBR,YAApB,MAAsC,CAAC,CAA1C,EAA4C;AAC1CJ,oBAAAA,WAAW,CAACS,IAAZ,CAAiBL,YAAjB;AACAS,oBAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAED;;AACDN,kBAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF;;AAED,kBAAMiB,OAAO,CAACC,GAAR,CAAYjB,QAAZ,CAAN;AACD,WA5BD,QA4BSD,KA5BT;;AA8BA,iBAAOE,WAAP;AAED;;AA1C2C,O","sourcesContent":["import { _decorator, Component, Vec3 } from \"cc\";\r\nimport { Piece } from \"../Piece/Piece\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GravityHandler\")\r\nexport class GravityHandler extends Component {\r\n  onLoad() {\r\n    super.onLoad();\r\n  }\r\n\r\n  async applyGravity(grid) {\r\n    let moved = false;\r\n    let promises: Promise<void>[] = [];\r\n    let emptyPieces : Piece[] = [];\r\n\r\n    do {\r\n      moved = false;\r\n\r\n      for (let col = 0; col < grid[0].length; col++) {\r\n        for (let row = grid.length - 1; row >= 1; row--) {\r\n          const currentPiece = grid[row][col];\r\n          const belowPiece = grid[row -1][col];\r\n\r\n          if (belowPiece.isEmpty && !currentPiece.isEmpty) {\r\n            const targetRow = row + 1;\r\n            const targetCol = col;\r\n\r\n            promises.push(currentPiece.updatePosition(belowPiece.row,belowPiece.col));\r\n\r\n            // Node'u yer değiştir\r\n            belowPiece.node = currentPiece.node;\r\n            currentPiece.node = null; \r\n            if(emptyPieces.indexOf(currentPiece) === -1){\r\n              emptyPieces.push(currentPiece);\r\n              console.log(currentPiece);\r\n              \r\n            }\r\n            moved = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      await Promise.all(promises);\r\n    } while (moved); \r\n\r\n    return emptyPieces\r\n\r\n  }\r\n}\r\n"]}